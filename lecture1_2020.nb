(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    300445,       6050]
NotebookOptionsPosition[    272345,       5624]
NotebookOutlinePosition[    274471,       5676]
CellTagsIndexPosition[    274358,       5670]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Lecture 1: PHAS0012 Computing for Mathematical Physics", "Subsubtitle",
 CellChangeTimes->{{3.749975220674976*^9, 3.7499752235648813`*^9}, {
  3.7499752664285574`*^9, 3.749975283404386*^9}, {3.755337965421547*^9, 
  3.755337967842852*^9}, {3.7878277563443756`*^9, 
  3.787827757422236*^9}},ExpressionUUID->"9e8df1db-2d87-482c-bd79-\
06bcfa0addb5"],

Cell["Basics of Mathematica", "Title",
 CellTags->"c:1",ExpressionUUID->"fa4f85cd-5213-4f04-93f8-8599f41ca347"],

Cell["\<\
Basics of system: front end and back end: cells: moving around. Saving \
values. Simple functions. \
\>", "Text",ExpressionUUID->"f7366369-4b93-41cb-99bd-e973f83c0423"],

Cell["A calculator", "Subtitle",ExpressionUUID->"1d379af9-13e4-4516-8938-d96fe96269db"],

Cell["Simple calculation,", "Text",ExpressionUUID->"f22bfe94-256c-40d4-8215-fdedd05d9106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "+", "2"}]], "Input",ExpressionUUID->"8dc2b378-70d4-4147-9c02-7dd91e930937"],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.4399601313416*^9, 3.5037308412747765`*^9, 
  3.6300607728252153`*^9, 3.659798881924844*^9, 
  3.7499752942128716`*^9},ExpressionUUID->"afd28df0-267e-4d97-a44c-\
2a08fb482e7c"]
}, Open  ]],

Cell["\<\
Note the In[] and Out[] denoting execution order. They don\[CloseCurlyQuote]t \
necessarily go in logical order from top to bottom of the notebook - \
particularly if you go backwards and re-execute earlier commands. Sometimes \
you want to execute a notebook from top to bottom - see the Evaluation Menu.\
\>", "Text",
 CellChangeTimes->{{3.630060597546268*^9, 3.630060616705871*^9}, {
  3.630060671802681*^9, 
  3.630060731891716*^9}},ExpressionUUID->"50b9d14b-4e55-419a-80aa-\
f4ac403882ef"],

Cell["\<\
% can be used to recall the result of the previous execution. But, this leads \
to very fragile notebooks - avoid using it!\
\>", "Text",
 CellChangeTimes->{{3.630060625529875*^9, 
  3.630060655426455*^9}},ExpressionUUID->"4f002fe3-61d7-48a2-af7f-\
493ebd160dee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "+", "%"}]], "Input",ExpressionUUID->"2238542e-e7ac-48c0-9e52-15e207e90a41"],

Cell[BoxData["8"], "Output",
 CellChangeTimes->{3.4399601314616003`*^9, 3.503730841373782*^9, 
  3.630060772946969*^9, 3.659798882163694*^9, 
  3.7499752944479594`*^9},ExpressionUUID->"780e6e1a-bcee-47f2-9b36-\
fcb577b3fc04"]
}, Open  ]],

Cell["\<\
Exact arithmetic: contrast 4/2 and 3/2. Also note more than one command per \
cell.\
\>", "Text",ExpressionUUID->"0bb98d7c-8c8d-4405-b7ac-83d9fb050e37"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"4", "/", "2"}], "\[IndentingNewLine]", 
 RowBox[{"3", "/", "2"}]}], "Input",ExpressionUUID->"ae5950d0-91ee-434f-a7ae-\
08750e9dd992"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4399601314886*^9, 3.5037308413907833`*^9, 
  3.630060772950761*^9, 3.659798882225115*^9, 
  3.7499752944677153`*^9},ExpressionUUID->"329a6b95-6391-4ae8-8e6f-\
057459b60569"],

Cell[BoxData[
 FractionBox["3", "2"]], "Output",
 CellChangeTimes->{3.4399601314886*^9, 3.5037308413907833`*^9, 
  3.630060772950761*^9, 3.659798882225115*^9, 
  3.749975294471526*^9},ExpressionUUID->"d34ab1cb-6712-4c8a-9a7d-\
ca7aa4ed9ee7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",ExpressionUUID->"7e746b77-b0a5-425a-822f-c9000ac070be"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.4399601315285997`*^9, 3.503730841440786*^9, 
  3.6300607729627333`*^9, 3.659798882284749*^9, 
  3.749975294494443*^9},ExpressionUUID->"ef1c02fb-09ed-45d0-968f-\
78ae752e6594"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Cos", "[", "Pi", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Cos", "[", "3.14", "]"}]}], "Input",ExpressionUUID->"b5c4bc73-b4fa-\
4f67-89c5-57c590ec8e5f"],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{3.4399601315546*^9, 3.5037308414987893`*^9, 
  3.6300607729729147`*^9, 3.659798882344428*^9, 
  3.7499752945160027`*^9},ExpressionUUID->"7705bfaa-87bc-443b-ab59-\
554cd98754bf"],

Cell[BoxData[
 RowBox[{"-", "0.9999987317275395`"}]], "Output",
 CellChangeTimes->{3.4399601315546*^9, 3.5037308414987893`*^9, 
  3.6300607729729147`*^9, 3.659798882344428*^9, 
  3.7499752945198183`*^9},ExpressionUUID->"bfa53059-308f-4e73-9cbb-\
27a8a5400f13"]
}, Open  ]],

Cell[TextData[{
 "Note here that a function is called using SQUARE brackets. Mathematica uses \
the different bracket shapes in special ways. Also note that the function is \
Cos, not cos: all ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s functions and built-in constants begin with a capital."
}], "Text",ExpressionUUID->"2ccf88f2-4ee9-4fb3-8a85-d106069e9e0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I", " ", "E", " ", "Pi"}]], "Input",ExpressionUUID->"f307c9ba-dffd-4f66-855c-e344c83cc4a7"],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", "\[ExponentialE]", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.4399601315906*^9, 3.5037308415667934`*^9, 
  3.630060772985097*^9, 3.659798882410598*^9, 
  3.7499752945586586`*^9},ExpressionUUID->"a7930ac7-764f-499c-b31c-\
c29aa00c7e54"]
}, Open  ]],

Cell[TextData[{
 "As an aside, we might ask why ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has to be so fussy about bracket shapes. The answer is that the way we \
normally write mathematics is ambiguous. For example, if we write ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(1+",
 StyleBox["x",
  FontSlant->"Italic"],
 "), do we mean the term 1+",
 StyleBox["x",
  FontSlant->"Italic"],
 " multiplied by ",
 StyleBox["f",
  FontSlant->"Italic"],
 ", or is ",
 StyleBox["f",
  FontSlant->"Italic"],
 " a function we are applying to 1+",
 StyleBox["x",
  FontSlant->"Italic"],
 "? We have to work it out from the context, knowing whether we have defined \
a function called ",
 StyleBox["f",
  FontSlant->"Italic"],
 ".  Similarly, with ",
 StyleBox["a",
  FontSlant->"Italic"],
 "(",
 StyleBox["x",
  FontSlant->"Italic"],
 ",",
 StyleBox["y",
  FontSlant->"Italic"],
 ",",
 StyleBox["z",
  FontSlant->"Italic"],
 "), is ",
 StyleBox["a",
  FontSlant->"Italic"],
 " a function that requires three arguments, or are we just scaling a vector \
given as a list of its components by a scalar, ",
 StyleBox["a",
  FontSlant->"Italic"],
 "? In ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " there is nothing to prevent us from having functions and variables with \
the same name, so we need the different bracket conventions to tell ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " what we mean.\nThere is a slight down side to this: we are used to using \
different bracket styles in large expressions to help us to pair up opening \
and closing brackets: we might have something like\n  {..[(...)/(...) + ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", "..", ")"}], "2"], TraditionalForm]],ExpressionUUID->
  "853e4212-b804-4b15-9934-b405be12270a"],
 "]/[...] + ...},\nbut in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " all of those term-grouping brackets will have to be ( and ). Luckily ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " helps us out a bit when we type, by highlighting brackets that have no \
opening or closing partner."
}], "Text",
 CellChangeTimes->{{3.6300607464757967`*^9, 
  3.63006075189988*^9}},ExpressionUUID->"314843e6-a84f-4de5-8b71-\
88cb832fd167"],

Cell["Arbitrary precision arithmetic", "Text",ExpressionUUID->"af3237b7-9a75-4915-ac33-a9b26be3be95"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", "Pi", "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"Pi", ",", "100"}], "]"}]}], "Input",ExpressionUUID->"3525ea96-2923-\
422d-b87d-9a989c9554a2"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.4399601316186*^9, 3.5037308416567984`*^9, 
  3.630060772996889*^9, 3.659798882469493*^9, 
  3.749975294580389*^9},ExpressionUUID->"6a2cdf02-d6a7-4480-ba57-\
ef0b9570c6be"],

Cell[BoxData["3.\
141592653589793238462643383279502884197169399375105820974944592307816406286208\
9986280348253421170679821480865191976`100."], "Output",
 CellChangeTimes->{3.4399601316186*^9, 3.5037308416567984`*^9, 
  3.630060772996889*^9, 3.659798882469493*^9, 
  3.749975294583259*^9},ExpressionUUID->"7eabe3de-fed3-4081-89a7-\
d6d70c8188fc"]
}, Open  ]],

Cell[TextData[{
 "It is important to note that Mathematica will keep results exact unless you \
explicitly tell it not to. For example (Degree is a built-in ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " conversion factor from degrees to radians -- note the nice way it prints \
out):"
}], "Text",ExpressionUUID->"44355383-3102-496a-93dc-c9fb8a1ea04e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sin", "[", 
  RowBox[{"30", " ", "Degree"}], "]"}], "\n", 
 RowBox[{"Sin", "[", 
  RowBox[{"31", "Degree"}], "]"}], "\n", 
 RowBox[{"Sin", "[", 
  RowBox[{"29", "Degree"}], "]"}]}], "Input",ExpressionUUID->"f2cfd21d-c447-\
46aa-8872-beb52f248327"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.4399601316836*^9, 3.503730841753804*^9, 
  3.6300607730115957`*^9, 3.659798882538928*^9, 
  3.7499752946039953`*^9},ExpressionUUID->"d41acd20-6c00-4b08-a257-\
004032b70ae4"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"31", " ", "\[Degree]"}], "]"}]], "Output",
 CellChangeTimes->{3.4399601316836*^9, 3.503730841753804*^9, 
  3.6300607730115957`*^9, 3.659798882538928*^9, 
  3.749975294610633*^9},ExpressionUUID->"28a69e5d-94ec-4ac9-8aa6-\
d515f157a113"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"29", " ", "\[Degree]"}], "]"}]], "Output",
 CellChangeTimes->{3.4399601316836*^9, 3.503730841753804*^9, 
  3.6300607730115957`*^9, 3.659798882538928*^9, 
  3.7499752946149487`*^9},ExpressionUUID->"92d4b502-0dc5-42b2-ad8c-\
14d1c06b0f04"]
}, Open  ]],

Cell["\<\
The two results which do not have a simple exact form are let unevaluated \
unless you ask for a numerical result explicitly\
\>", "Text",ExpressionUUID->"183c3367-d26c-4186-9918-a5fa2e3d7487"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"30", "Degree"}], "]"}], "]"}], "\n", 
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"31", "Degree"}], "]"}], "]"}], "\n", 
 RowBox[{"N", "[", 
  RowBox[{"Sin", "[", 
   RowBox[{"29", "Degree"}], "]"}], "]"}]}], "Input",ExpressionUUID->\
"baf440bb-63bb-435b-b6a6-d2674ebf7956"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{3.4399601317396*^9, 3.5037308418878117`*^9, 
  3.6300607730250998`*^9, 3.659798882599257*^9, 
  3.7499752946340294`*^9},ExpressionUUID->"75af2592-088a-4be2-985c-\
a3a8f2484e77"],

Cell[BoxData["0.5150380749100542`"], "Output",
 CellChangeTimes->{3.4399601317396*^9, 3.5037308418878117`*^9, 
  3.6300607730250998`*^9, 3.659798882599257*^9, 
  3.7499752946386833`*^9},ExpressionUUID->"fb29b7ba-f52c-46a2-90f5-\
a1cef3745e0d"],

Cell[BoxData["0.48480962024633706`"], "Output",
 CellChangeTimes->{3.4399601317396*^9, 3.5037308418878117`*^9, 
  3.6300607730250998`*^9, 3.659798882599257*^9, 
  3.749975294641677*^9},ExpressionUUID->"040a487c-3951-4e96-a6df-\
b566234575f4"]
}, Open  ]],

Cell["or implicitly", "Text",ExpressionUUID->"4579c41d-dc0e-44a0-b2cd-77dd7d6d58f6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sin", "[", 
  RowBox[{"30.", "Degree"}], "]"}], "\n", 
 RowBox[{"Sin", "[", 
  RowBox[{"31.", "Degree"}], "]"}], "\n", 
 RowBox[{"Sin", "[", 
  RowBox[{"29.", "Degree"}], "]"}]}], "Input",ExpressionUUID->"33960873-a0bd-\
4651-802f-f53881fad5a9"],

Cell[BoxData["0.49999999999999994`"], "Output",
 CellChangeTimes->{3.4399601317886*^9, 3.5037308419958177`*^9, 
  3.630060773055797*^9, 3.659798882673231*^9, 
  3.7499752946635*^9},ExpressionUUID->"be75f189-d050-4be3-bd3a-8c2cea807d9d"],

Cell[BoxData["0.5150380749100542`"], "Output",
 CellChangeTimes->{3.4399601317886*^9, 3.5037308419958177`*^9, 
  3.630060773055797*^9, 3.659798882673231*^9, 
  3.7499752946659403`*^9},ExpressionUUID->"540c85e3-ebc8-40db-928e-\
85c6a4e86d60"],

Cell[BoxData["0.48480962024633706`"], "Output",
 CellChangeTimes->{3.4399601317886*^9, 3.5037308419958177`*^9, 
  3.630060773055797*^9, 3.659798882673231*^9, 
  3.74997529466803*^9},ExpressionUUID->"9c848fa6-aac0-46c2-8a19-986d9ed4f801"]
}, Open  ]],

Cell[TextData[{
 "If you really want to get away from the ",
 StyleBox["Sin",
  FontFamily->"Courier New"],
 " function and into exact numbers you can do it, but it's probably not very \
useful in general:"
}], "Text",ExpressionUUID->"4fc45fb0-4cba-468a-a49e-aca6683c6ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"FunctionExpand", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{"29", " ", "Degree"}], "]"}], "]"}], "]"}]], "Input",ExpressionUUI\
D->"06b1355e-5289-4859-a4ce-b0c0779738ee"],

Cell[BoxData[
 RowBox[{"Sin", "[", 
  FractionBox[
   RowBox[{"29", " ", "\[Pi]"}], "180"], "]"}]], "Output",
 CellChangeTimes->{3.4399601324596*^9, 3.5037308421508265`*^9, 
  3.630060773231955*^9, 3.659798882802011*^9, 
  3.749975294724046*^9},ExpressionUUID->"3abcac05-e60d-4a86-a397-\
f9462cbca45e"]
}, Open  ]],

Cell["Saving results", "Subtitle",ExpressionUUID->"e3c570a3-3352-46cb-8119-d48f8a5cbda8"],

Cell[TextData[{
 "A simple equals sign is not the same as a mathematical equals sign. It ",
 StyleBox["stores",
  FontWeight->"Bold"],
 " an expression: which can be a number, an expression, a string of \
characters, or even an equation. In fact, the function which ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " uses for the equals sign is the ",
 StyleBox["Set",
  FontFamily->"Courier New"],
 " function."
}], "Text",ExpressionUUID->"811ac6b0-e289-4fd5-b36e-d1838ce8e342"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", "2"}], "\[IndentingNewLine]", 
 RowBox[{"y", "=", 
  RowBox[{
   RowBox[{"15", " ", "z"}], " ", "+", " ", "3"}]}], "\[IndentingNewLine]", 
 RowBox[{"s", "=", "\"\<Welcome to 2B49\>\""}], "\[IndentingNewLine]", 
 RowBox[{"e", "=", 
  RowBox[{
   RowBox[{"p", "-", "1"}], "\[Equal]", "2"}]}], "\[IndentingNewLine]", 
 RowBox[{"FullForm", "[", 
  RowBox[{"Hold", "[", 
   RowBox[{"x", "=", "2"}], "]"}], "]"}]}], "Input",ExpressionUUID->"442a404e-\
3baa-40d1-a7e9-9618e4ecbb68"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4399601325425997`*^9, 3.503730842282834*^9, 
  3.630060773234831*^9, 3.659798882869542*^9, 
  3.749975294753681*^9},ExpressionUUID->"477df5af-b15c-433d-a677-\
b2722076121e"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"15", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.4399601325425997`*^9, 3.503730842282834*^9, 
  3.630060773234831*^9, 3.659798882869542*^9, 
  3.749975294759505*^9},ExpressionUUID->"4640ef1b-b5b8-445f-a88d-\
2b15bf54e0dd"],

Cell[BoxData["\<\"Welcome to 2B49\"\>"], "Output",
 CellChangeTimes->{3.4399601325425997`*^9, 3.503730842282834*^9, 
  3.630060773234831*^9, 3.659798882869542*^9, 
  3.749975294761121*^9},ExpressionUUID->"f9ba7cb2-f046-4786-9440-\
a8d954599d45"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "p"}], "\[Equal]", "2"}]], "Output",
 CellChangeTimes->{3.4399601325425997`*^9, 3.503730842282834*^9, 
  3.630060773234831*^9, 3.659798882869542*^9, 
  3.749975294764598*^9},ExpressionUUID->"b5e77a22-83d3-4e96-a2b8-\
2b35c2e54f9c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"Hold", "[", 
    RowBox[{"Set", "[", 
     RowBox[{"x", ",", "2"}], "]"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.4399601325425997`*^9, 3.503730842282834*^9, 
  3.630060773234831*^9, 3.659798882869542*^9, 
  3.749975294767207*^9},ExpressionUUID->"9ddb25d8-4a29-44e1-befc-\
fef0741f77e6"]
}, Open  ]],

Cell[TextData[{
 "Note two functions here that can be useful in seeing how ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " works: ",
 StyleBox["Hold",
  FontFamily->"Courier New"],
 " retains an expression without evaluating it, and ",
 StyleBox["FullForm",
  FontFamily->"Courier New"],
 " shows the full expression as ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " holds it."
}], "Text",ExpressionUUID->"3a74291f-2447-4768-8f98-a92ab775119f"],

Cell[TextData[{
 "Note that we can define a mathematical equation, but the equation is \
defined with a ",
 StyleBox["double equals",
  FontWeight->"Bold"],
 ". If both sides of the == can be evaluated, the result will be ",
 StyleBox["True",
  FontFamily->"Courier New"],
 " or ",
 StyleBox["False",
  FontFamily->"Courier New"],
 "; if they cannot be evaluated, the expression will be left alone."
}], "Text",ExpressionUUID->"5c656bb4-0c46-458d-8d86-3f87724df68c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"1", "\[Equal]", "1"}], "\[IndentingNewLine]", 
 RowBox[{"1", "\[Equal]", "2"}], "\[IndentingNewLine]", 
 RowBox[{"xval", "\[Equal]", "yval"}]}], "Input",ExpressionUUID->"b4de27cc-\
fb83-49db-a63f-2de3087f23ec"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4399601326056004`*^9, 3.5037308424008408`*^9, 
  3.630060773249074*^9, 3.659798882933325*^9, 
  3.749975294789011*^9},ExpressionUUID->"0fcb5443-5a97-4680-9e14-\
72fad35246ce"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4399601326056004`*^9, 3.5037308424008408`*^9, 
  3.630060773249074*^9, 3.659798882933325*^9, 
  3.7499752947928276`*^9},ExpressionUUID->"72c9a717-00ed-49b9-96fc-\
7ec6f96b24f0"],

Cell[BoxData[
 RowBox[{"xval", "\[Equal]", "yval"}]], "Output",
 CellChangeTimes->{3.4399601326056004`*^9, 3.5037308424008408`*^9, 
  3.630060773249074*^9, 3.659798882933325*^9, 
  3.749975294795199*^9},ExpressionUUID->"d1cd5829-2fdf-418b-becf-\
e8200ab34ecf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"x", "\[IndentingNewLine]", "y", "\[IndentingNewLine]", "s", "\
\[IndentingNewLine]", "e"}], "Input",ExpressionUUID->"1f2b2e92-7a10-4619-945e-\
f1262b8c7c0d"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4399601326586*^9, 3.503730842467845*^9, 
  3.63006077326161*^9, 3.659798883132382*^9, 
  3.7499752948156595`*^9},ExpressionUUID->"1918ab86-6ea9-473d-bfa4-\
a3463b8acd0e"],

Cell[BoxData[
 RowBox[{"3", "+", 
  RowBox[{"15", " ", "z"}]}]], "Output",
 CellChangeTimes->{3.4399601326586*^9, 3.503730842467845*^9, 
  3.63006077326161*^9, 3.659798883132382*^9, 
  3.7499752948181868`*^9},ExpressionUUID->"252bed2f-2f28-41af-9b5f-\
87cd37ec633a"],

Cell[BoxData["\<\"Welcome to 2B49\"\>"], "Output",
 CellChangeTimes->{3.4399601326586*^9, 3.503730842467845*^9, 
  3.63006077326161*^9, 3.659798883132382*^9, 
  3.7499752948195314`*^9},ExpressionUUID->"673d35cd-6164-466b-a997-\
94f9a757d2b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "p"}], "\[Equal]", "2"}]], "Output",
 CellChangeTimes->{3.4399601326586*^9, 3.503730842467845*^9, 
  3.63006077326161*^9, 3.659798883132382*^9, 
  3.749975294822197*^9},ExpressionUUID->"64654ffa-7984-4b32-8a80-\
96c0a5e1f73b"]
}, Open  ]],

Cell["\<\
But note that once an assignment is made, it stays there until it is cleared, \
so that\
\>", "Text",ExpressionUUID->"c88e1dde-c2e0-46ae-8eaf-2da8b9537c28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{"x", "-", "1"}], "\[Equal]", "2"}]}]], "Input",ExpressionUUID->\
"2a3f8171-e701-4bc7-b690-9b1c1643109d"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.4399601327146*^9, 3.5037308425168476`*^9, 
  3.6300607732750177`*^9, 3.659798883194749*^9, 
  3.7499752948423424`*^9},ExpressionUUID->"a466fd7f-ac97-4a7a-a779-\
0c95f69461d8"]
}, Open  ]],

Cell["\<\
False, because the result of an \[Equal] is a logical, true or false, and \
we'd set x to be 2. We could, though, do\
\>", "Text",ExpressionUUID->"741898db-18c8-4f68-b321-b61b2404aa46"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"f", "=", 
  RowBox[{
   RowBox[{"x", "-", "1"}], "\[Equal]", "2"}]}]}], "Input",ExpressionUUID->\
"90400bea-7cca-4fd1-8795-7a9fa4857e8b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "x"}], "\[Equal]", "2"}]], "Output",
 CellChangeTimes->{3.4399601327556*^9, 3.5037308425598497`*^9, 
  3.6300607732841253`*^9, 3.659798883272695*^9, 
  3.7499752948660326`*^9},ExpressionUUID->"5f73dfab-e0cd-4b1f-8f30-\
5ccc52c2427f"]
}, Open  ]],

Cell["\<\
In general, try to avoid setting numerical values using =. We'll see in a \
later lecture a better way of inserting numerical values.\
\>", "Text",ExpressionUUID->"29b573e7-8ca8-41a7-84e1-2eba6e1ff07b"],

Cell["We can find out about variables using ?", "Text",ExpressionUUID->"d92745c9-19e4-4b08-aa33-c8c91ca01c94"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "e"}]], "Input",ExpressionUUID->"0b753c4d-a59c-41cd-aaba-21e9532ac6b9"],

Cell["Global`e", "Print", "PrintUsage",
 CellChangeTimes->{3.7499752949821444`*^9},
 CellTags->
  "Info363749975294-7242700",ExpressionUUID->"1384afd3-a4f4-47cf-be9b-\
d3bbff66bc09"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {GridBox[{
       {
        RowBox[{"e", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "+", "p"}], "\[Equal]", "2"}]}]}
      },
      BaselinePosition->{Baseline, {1, 1}},
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{"Columns" -> {{
           Scaled[0.999]}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}]}
   },
   BaselinePosition->{Baseline, {1, 1}},
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}}],
  Definition[$CellContext`e],
  Editable->False]], "Print",
 CellChangeTimes->{3.74997529499299*^9},
 CellTags->
  "Info363749975294-7242700",ExpressionUUID->"ad638883-9bfa-481e-97a3-\
f01f4b71d4fd"]
}, Open  ]],

Cell[TextData[{
 "Note that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " keeps track of the various types of object it can handle by giving them a \
label, called a Head"
}], "Text",ExpressionUUID->"b80ef766-fb5a-43d5-b921-6fdf3c78c8c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Head", "[", "x", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "s", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Head", "[", "e", "]"}]}], "Input",ExpressionUUID->"0f7b04dc-212e-\
4568-8e85-b9816f60ee0b"],

Cell[BoxData["Symbol"], "Output",
 CellChangeTimes->{3.4399601331015997`*^9, 3.503730842920871*^9, 
  3.630060773514614*^9, 3.659798884599799*^9, 
  3.7499752950342093`*^9},ExpressionUUID->"2867cf86-964a-4a89-adc9-\
78f9449a7b4b"],

Cell[BoxData["Plus"], "Output",
 CellChangeTimes->{3.4399601331015997`*^9, 3.503730842920871*^9, 
  3.630060773514614*^9, 3.659798884599799*^9, 
  3.749975295037275*^9},ExpressionUUID->"9454f770-2d5b-4128-9b05-\
771fc9b34d52"],

Cell[BoxData["String"], "Output",
 CellChangeTimes->{3.4399601331015997`*^9, 3.503730842920871*^9, 
  3.630060773514614*^9, 3.659798884599799*^9, 
  3.749975295040267*^9},ExpressionUUID->"6d83b8eb-212e-4daf-9bdb-\
7eaacfb46b86"],

Cell[BoxData["Equal"], "Output",
 CellChangeTimes->{3.4399601331015997`*^9, 3.503730842920871*^9, 
  3.630060773514614*^9, 3.659798884599799*^9, 
  3.7499752950432587`*^9},ExpressionUUID->"d4ba6a6f-c6d0-4435-909a-\
16aaa581d4f6"]
}, Open  ]],

Cell["In later lectures we'll see how to make use of these Heads.", "Text",ExpressionUUID->"31be10c5-579b-49ff-9a08-a5eae44635c4"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}]], "Input",ExpressionUUID->"43c94cbc-76a1-\
4561-bcd9-616bc4185100"],

Cell["Pallette or Text?", "Subtitle",ExpressionUUID->"6ce2551c-27f3-412f-bf83-fb773ad1538b"],

Cell["\<\
We can enter expressions in several ways: for something simple like a power \
we can use the pallette, pull-down menus, short-cuts, or just not bother -  \
e.g. x squared (x ctl-6 2 ctl-sp)\
\>", "Text",ExpressionUUID->"3dbddd0d-542a-4061-be00-64fc05c77589"],

Cell[CellGroupData[{

Cell[BoxData[{
 SuperscriptBox["x", "2"], "\[IndentingNewLine]", 
 RowBox[{"x", "^", "2"}]}], "Input",ExpressionUUID->"0dbeea93-8044-409f-bc8b-\
f017a4fa6c3d"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.4399601331776*^9, 3.5037308430558786`*^9, 
  3.630060773597055*^9, 3.659798884719243*^9, 
  3.7499752950866604`*^9},ExpressionUUID->"7312adb2-e190-4f64-bd76-\
aa146bb28b08"],

Cell[BoxData[
 SuperscriptBox["x", "2"]], "Output",
 CellChangeTimes->{3.4399601331776*^9, 3.5037308430558786`*^9, 
  3.630060773597055*^9, 3.659798884719243*^9, 
  3.749975295092953*^9},ExpressionUUID->"e4c72542-0d80-4fd4-bca6-\
c92ba88d4691"]
}, Open  ]],

Cell["\<\
The same goes for more complicated things, such as integrals, as we'll see \
later.\
\>", "Text",ExpressionUUID->"aeb5e42e-ca78-47f7-bd22-18f526c23685"],

Cell["Simple Algebra", "Subtitle",ExpressionUUID->"e40d04d5-3ec2-4b50-94b8-d79215b2524b"],

Cell["Symbols are used sensibly", "Text",ExpressionUUID->"44ff4e51-6560-4f50-8277-b9b67f1e5119"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "x"}], "+", 
  RowBox[{"2", "y"}], "+", 
  RowBox[{"5", "x"}], "-", "3"}]], "Input",ExpressionUUID->"dded77ce-d221-\
4b53-b420-1d8a21065349"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "3"}], "+", 
  RowBox[{"8", " ", "x"}], "+", 
  RowBox[{"2", " ", "y"}]}]], "Output",
 CellChangeTimes->{3.4399601332056*^9, 3.5037308430928802`*^9, 
  3.6300607736087637`*^9, 3.6597988847831287`*^9, 
  3.749975295112605*^9},ExpressionUUID->"98735404-259c-407f-a31a-\
a5ec7889636e"]
}, Open  ]],

Cell[TextData[{
 "As you can see, ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " has firm ideas about the order in which terms should occur. But it's \
sensible about it, so that"
}], "Text",ExpressionUUID->"dc5e1238-65a0-447d-afae-29cabe97d7fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "-", "2"}], " ", "\[Equal]", " ", 
  RowBox[{
   RowBox[{"-", "2"}], " ", "+", " ", "x"}]}]], "Input",ExpressionUUID->\
"693db618-e7b8-4fd4-919c-724d2837e021"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4399601332296*^9, 3.5037308431408834`*^9, 
  3.630060773618772*^9, 3.659798884846723*^9, 
  3.749975295134909*^9},ExpressionUUID->"1662035c-1762-4a7f-8e6e-\
1346c3194cdb"]
}, Open  ]],

Cell["\<\
Note that a space will be interpreted as a multiplication (as a name can't \
start with a number, no space is needed between a number and a letter, but it \
is needed between a letter and a number): thus\
\>", "Text",ExpressionUUID->"c1a8fd67-946b-4d5f-83e7-f308f8ec87cb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"2", "x"}], "\[IndentingNewLine]", 
 RowBox[{"2", "   ", 
  "x"}], "\[IndentingNewLine]", "x2", "\[IndentingNewLine]", "ax", "\
\[IndentingNewLine]", 
 RowBox[{"a", " ", "x"}]}], "Input",ExpressionUUID->"a5e13f9d-eee7-4847-a332-\
aeda3c510e02"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.4399601332536*^9, 3.5037308432318883`*^9, 
  3.630060773631239*^9, 3.659798884910034*^9, 
  3.749975295156412*^9},ExpressionUUID->"616cd302-f90d-4be0-899f-\
c4a3d3a5ccab"],

Cell[BoxData[
 RowBox[{"2", " ", "x"}]], "Output",
 CellChangeTimes->{3.4399601332536*^9, 3.5037308432318883`*^9, 
  3.630060773631239*^9, 3.659798884910034*^9, 
  3.74997529516042*^9},ExpressionUUID->"cb5da104-8e1b-45ee-baca-616269bc20e0"],

Cell[BoxData["x2"], "Output",
 CellChangeTimes->{3.4399601332536*^9, 3.5037308432318883`*^9, 
  3.630060773631239*^9, 3.659798884910034*^9, 
  3.749975295162953*^9},ExpressionUUID->"5c3c5720-0bcc-4ad4-86b8-\
a2cf1f04d8d1"],

Cell[BoxData["ax"], "Output",
 CellChangeTimes->{3.4399601332536*^9, 3.5037308432318883`*^9, 
  3.630060773631239*^9, 3.659798884910034*^9, 
  3.749975295164286*^9},ExpressionUUID->"8b20fbcc-dea4-46d8-b73a-\
98ad5570455a"],

Cell[BoxData[
 RowBox[{"a", " ", "x"}]], "Output",
 CellChangeTimes->{3.4399601332536*^9, 3.5037308432318883`*^9, 
  3.630060773631239*^9, 3.659798884910034*^9, 
  3.7499752951669827`*^9},ExpressionUUID->"159ce142-be83-47cb-8643-\
81af2970e218"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " tries in general to keep things in the simplest form (remember that round \
brackets group algebraic terms)"
}], "Text",ExpressionUUID->"355868b3-83d6-4988-8364-05dce93555fe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp1", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"3", "x"}], "+", "y"}], ")"}], 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"2", "x"}], "+", "7"}], ")"}]}]}]], "Input",ExpressionUUID->\
"f570385b-b7e8-4894-8399-16363c4a8f75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"7", "+", 
    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", "y"}], ")"}]}]], "Output",
 CellChangeTimes->{3.4399601332866*^9, 3.5037308432828913`*^9, 
  3.630060773646196*^9, 3.659798884976181*^9, 
  3.7499752951893697`*^9},ExpressionUUID->"633ec108-88f4-4ae9-8125-\
c3d1bddb3098"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"exp2", "=", 
  RowBox[{"Expand", "[", "exp1", "]"}]}]], "Input",ExpressionUUID->"27e4e032-\
7f9f-4a1c-b7f0-752a2845f39a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"21", " ", "x"}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"7", " ", "y"}], "+", 
  RowBox[{"2", " ", "x", " ", "y"}]}]], "Output",
 CellChangeTimes->{3.4399601333106003`*^9, 3.5037308433148932`*^9, 
  3.630060773657679*^9, 3.659798885039041*^9, 
  3.7499752952133417`*^9},ExpressionUUID->"c8e30f8a-f112-49d9-9d90-\
baec2bf48b89"]
}, Open  ]],

Cell["We can undo that", "Text",ExpressionUUID->"a674b0b7-cc17-427a-a04c-b008550d4bf4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", "exp2", "]"}]], "Input",ExpressionUUID->"f408aa4c-e0f9-4727-b951-e26e36a6ad21"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"7", "+", 
    RowBox[{"2", " ", "x"}]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"3", " ", "x"}], "+", "y"}], ")"}]}]], "Output",
 CellChangeTimes->{3.4399601333356*^9, 3.5037308433598957`*^9, 
  3.6300607736689157`*^9, 3.659798885109682*^9, 
  3.7499752952339883`*^9},ExpressionUUID->"a86ff4ef-57fd-4aad-b39e-\
0b23666e40bf"]
}, Open  ]],

Cell["We can pick out terms", "Text",ExpressionUUID->"7dc240be-6651-47a1-86db-b0313c23a867"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Coefficient", "[", 
  RowBox[{"exp2", ",", 
   SuperscriptBox["x", "2"]}], "]"}]], "Input",ExpressionUUID->"c1d45333-de92-\
48a2-816f-021b5f5d113e"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.4399601333596*^9, 3.5037308434068985`*^9, 
  3.630060773680707*^9, 3.65979888517248*^9, 
  3.7499752953161955`*^9},ExpressionUUID->"4c43a082-a688-4851-925d-\
7323e7559688"]
}, Open  ]],

Cell[TextData[{
 "Sometimes we need to push ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to get it to do what we want. By default, ",
 StyleBox["Factor ",
  FontFamily->"Courier New"],
 "will not use complex numbers or roots, so "
}], "Text",ExpressionUUID->"087e15c4-5511-401f-8aa6-793f792fa359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], "-", "5"}], "]"}]], "Input",ExpressionUUID->\
"a072987f-0f65-45dc-b01b-1972ed200249"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "5"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.4399601333836*^9, 3.5037308434539013`*^9, 
  3.630060773691676*^9, 3.659798885235511*^9, 
  3.7499752953367963`*^9},ExpressionUUID->"d849af4c-f0f7-481a-9b4c-\
09041804ec21"]
}, Open  ]],

Cell[TextData[{
 "but if we look at the ",
 StyleBox["Help",
  FontFamily->"Courier New"],
 " on ",
 StyleBox["Factor",
  FontFamily->"Courier New"],
 ", we see that we can prompt it"
}], "Text",ExpressionUUID->"2c672e20-2417-4816-ac26-9ad1ef84d69c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", "5"}], ",", 
   RowBox[{"Extension", "\[Rule]", 
    RowBox[{"Sqrt", "[", "5", "]"}]}]}], "]"}]], "Input",ExpressionUUID->\
"4b3d4c47-e1b7-42bc-9fe8-cc196aa22784"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     SqrtBox["5"], "-", "x"}], ")"}]}], " ", 
  RowBox[{"(", 
   RowBox[{
    SqrtBox["5"], "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.4399601335486*^9, 3.5037308435849085`*^9, 
  3.630060773752503*^9, 3.6597988853875837`*^9, 
  3.7499752953781166`*^9},ExpressionUUID->"c9e39331-5db2-4329-b3b5-\
06b10b672902"]
}, Open  ]],

Cell[TextData[{
 "Just as we can pick out ",
 StyleBox["Coefficients",
  FontFamily->"Courier New"],
 ", so we can pick up parts of more complex expressions."
}], "Text",ExpressionUUID->"74e1f453-84ea-4b01-a07b-18b1cf4d3555"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"frac", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "-", "1"}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "-", "2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"x", "-", "3"}], ")"}]}], ")"}]}]}]], "Input",ExpressionUUID->\
"8f02e7b0-8930-478b-8095-0da93f90228d"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.4399601336015997`*^9, 3.5037308436329117`*^9, 
  3.630060773756371*^9, 3.659798885397382*^9, 
  3.7499752954007072`*^9},ExpressionUUID->"561ab9ab-cd0a-42cf-9a54-\
e44dc98d020f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Numerator", "[", "frac", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Denominator", "[", "frac", "]"}]}], "Input",ExpressionUUID->\
"cf4093d4-d86b-487c-b14a-e7b83ccf7aaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "x"}]], "Output",
 CellChangeTimes->{3.4399601336246*^9, 3.503730843675914*^9, 
  3.630060773767198*^9, 3.6597988855898933`*^9, 
  3.749975295420083*^9},ExpressionUUID->"cd22a13f-bc7c-457b-a291-\
8242077b18e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}], ")"}]}]], "Output",
 CellChangeTimes->{3.4399601336246*^9, 3.503730843675914*^9, 
  3.630060773767198*^9, 3.6597988855898933`*^9, 
  3.749975295427679*^9},ExpressionUUID->"c93cb552-15f0-4473-88b6-\
2af27fffa045"]
}, Open  ]],

Cell["We can split into partial fractions", "Text",ExpressionUUID->"3d5e80c3-51f6-448f-82b7-f0ec37c42793"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fracapart", "=", 
  RowBox[{"Apart", "[", "frac", "]"}]}]], "Input",ExpressionUUID->"6cfb59f5-\
936b-43c6-b289-0c9c975202bb"],

Cell[BoxData[
 RowBox[{
  FractionBox["2", 
   RowBox[{
    RowBox[{"-", "3"}], "+", "x"}]], "-", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "x"}]]}]], "Output",
 CellChangeTimes->{3.4399601336796*^9, 3.5037308437209167`*^9, 
  3.630060773781105*^9, 3.659798885664309*^9, 
  3.7499752954498672`*^9},ExpressionUUID->"07a6b6c2-c2ef-4d31-b13b-\
118ff16fab9c"]
}, Open  ]],

Cell["and push them together again", "Text",ExpressionUUID->"354f9470-6f5c-4da4-b58e-5131ed157e4e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Together", "[", "fracapart", "]"}]], "Input",ExpressionUUID->"385184f6-423d-46f2-b6ad-30ebb68cc45b"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "x"}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "3"}], "+", "x"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "x"}], ")"}]}]]], "Output",
 CellChangeTimes->{3.4399601337026*^9, 3.5037308437659187`*^9, 
  3.630060773791786*^9, 3.659798885723661*^9, 
  3.749975295469715*^9},ExpressionUUID->"49461de5-c1cf-4925-84d5-\
7654b2293235"]
}, Open  ]],

Cell["Square Roots and the Like", "Subtitle",ExpressionUUID->"89a5a95d-d40f-40d4-a41e-e40f48a749f2"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is generally cautious"
}], "Text",ExpressionUUID->"625b7fd7-f82e-41f9-8c21-5e545b2ea2da"],

Cell[CellGroupData[{

Cell[BoxData[
 SqrtBox[
  SuperscriptBox["x", "2"]]], "Input",ExpressionUUID->"2a13b216-437b-49bf-84fe-dbd2a6289f5e"],

Cell[BoxData[
 SqrtBox[
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{3.4399601337276*^9, 3.503730843820922*^9, 
  3.630060773802135*^9, 3.659798885783621*^9, 
  3.7499752954949656`*^9},ExpressionUUID->"014c4642-1572-446e-ba37-\
be8951b39b30"]
}, Open  ]],

Cell["but we can persuade it to throw caution to the winds", "Text",ExpressionUUID->"33aecf90-5c99-43bb-a1f4-703a8ad3d162"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PowerExpand", "[", 
  SqrtBox[
   SuperscriptBox["x", "2"]], "]"}]], "Input",ExpressionUUID->"34252a0c-50d5-\
43b5-9018-33bbdcb8a8ad"],

Cell[BoxData["x"], "Output",
 CellChangeTimes->{3.4399601337525997`*^9, 3.5037308438719254`*^9, 
  3.63006077381408*^9, 3.659798885843979*^9, 
  3.7499752955250196`*^9},ExpressionUUID->"a6f03d13-3ab5-413b-9446-\
358fd0f5b849"]
}, Open  ]],

Cell["Limits", "Subtitle",ExpressionUUID->"29cbde0b-7b4b-4d58-92f2-89ce903b486d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "0", "]"}], "/", "0"}]], "Input",ExpressionUUID->\
"837899f5-1c89-4555-a38f-8dc154b0a94e"],

Cell[BoxData[
 TemplateBox[{
  "Power","infy",
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"",2,64,1,26661339801529840717,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.503730844119939*^9, 3.630060773872396*^9, 
  3.659798886115328*^9, 
  3.7499752955563784`*^9},ExpressionUUID->"efd50456-8e9f-4749-a2a7-\
b7b392bb5bbd"],

Cell[BoxData[
 TemplateBox[{
  "Infinity","indet",
   "\"Indeterminate expression \\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \
\\\"ComplexInfinity\\\"}]\\) encountered.\"",2,64,2,26661339801529840717,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.503730844119939*^9, 3.630060773872396*^9, 
  3.659798886115328*^9, 
  3.749975295646155*^9},ExpressionUUID->"3306aac5-8c1b-4107-be55-\
5d47b24a88de"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.4399601341626*^9, 3.5037308441739426`*^9, 
  3.630060773892336*^9, 3.659798886170857*^9, 
  3.749975295665632*^9},ExpressionUUID->"55f5c09d-8ccb-4f92-8ecf-\
e81baf13c4a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",ExpressionUUID->"0c3e90b6-\
95c5-41a3-a7ee-6258dfd20e81"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.4399601344365997`*^9, 3.5037308442549467`*^9, 
  3.630060773984231*^9, 3.6597988862503643`*^9, 
  3.7499752957019086`*^9},ExpressionUUID->"94723664-b88f-44bd-a8d5-\
e1297314dd47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"\[Pi]", "/", "2"}]}], ",", 
   RowBox[{"Direction", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Tan", "[", "x", "]"}], ",", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Pi", "/", "2"}]}], ",", 
   RowBox[{"Direction", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}]}], "Input",ExpressionUUID->"048f5799-1ab7-\
4752-8372-3c7901272362"],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.4399601344765997`*^9, 3.5037308443049498`*^9, 
  3.6300607739974737`*^9, 3.659798886313538*^9, 
  3.7499752957205405`*^9},ExpressionUUID->"d4a6f07e-e424-480f-b802-\
6c376f05a869"],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.4399601344765997`*^9, 3.5037308443049498`*^9, 
  3.6300607739974737`*^9, 3.659798886313538*^9, 
  3.7499752957270465`*^9},ExpressionUUID->"cd12385a-2710-4b1c-a2ea-\
bba50770d4c7"]
}, Open  ]],

Cell["Series Expansions", "Subtitle",ExpressionUUID->"3b4518a6-1e8e-42bf-812c-f5383766e6df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"diffract", "=", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "5"}], "}"}]}], "]"}]}]], "Input",ExpressionU\
UID->"ae89677e-6bc3-473a-95f4-a54fd09aa778"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "-", 
   FractionBox[
    SuperscriptBox["x", "2"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "120"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "6"],
    SeriesData[$CellContext`x, 0, {}, 0, 6, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 0, 
    Rational[-1, 6], 0, 
    Rational[1, 120]}, 0, 6, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.4399601345566*^9, 3.5037308443889546`*^9, 
  3.630060774017661*^9, 3.65979888639676*^9, 
  3.7499752957485332`*^9},ExpressionUUID->"e603d797-5ebd-48dd-b878-\
6f4922586343"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ndiffract", "=", 
  RowBox[{"Normal", "[", "diffract", "]"}]}]], "Input",ExpressionUUID->\
"49ed8384-ca18-4344-9a88-c9be2f3ce77f"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["x", "2"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "120"]}]], "Output",
 CellChangeTimes->{3.4399601346205997`*^9, 3.5037308444279566`*^9, 
  3.630060774031168*^9, 3.659798886456655*^9, 
  3.7499752957718444`*^9},ExpressionUUID->"5d3df00e-02c5-4e28-85a3-\
275154d12fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"x", "=", 
  "2"}], "\[IndentingNewLine]", "diffract", "\[IndentingNewLine]", \
"ndiffract"}], "Input",ExpressionUUID->"9f0a59b8-8b12-4c76-ab20-62b147a89980"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.4399601346366*^9, 3.5037308444879603`*^9, 
  3.6300607740338717`*^9, 3.659798886643025*^9, 
  3.749975295793138*^9},ExpressionUUID->"3051b8b8-3090-4e37-afa9-\
809ff1db8df9"],

Cell[BoxData[
 TemplateBox[{
  "SeriesData","ssdn",
   "\"Attempt to evaluate a series at the number \\!\\(\\*RowBox[{\\\"2\\\"}]\
\\). Returning Indeterminate.\"",2,71,3,26661339801529840717,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.5037308444899607`*^9, 3.630060774071138*^9, 
  3.659798886666944*^9, 
  3.749975295797896*^9},ExpressionUUID->"071c5380-67af-464d-bf90-\
3f2dad146210"],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.4399601346366*^9, 3.5037308444879603`*^9, 
  3.6300607740338717`*^9, 3.659798886643025*^9, 
  3.749975295819235*^9},ExpressionUUID->"a005c7c0-9ae9-4655-848a-\
4ac986e65ed7"],

Cell[BoxData[
 FractionBox["7", "15"]], "Output",
 CellChangeTimes->{3.4399601346366*^9, 3.5037308444879603`*^9, 
  3.6300607740338717`*^9, 3.659798886643025*^9, 
  3.7499752958214283`*^9},ExpressionUUID->"b54b65bb-8dc0-41e8-bcff-\
9e7fc6126d05"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ndiffract", "//", "N"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", "ndiffract", "]"}]}], "Input",ExpressionUUID->"fea17828-\
3810-402f-bc07-e75d7277e6d2"],

Cell[BoxData["0.4666666666666667`"], "Output",
 CellChangeTimes->{3.4399601348016*^9, 3.5037308445469637`*^9, 
  3.630060774085102*^9, 3.659798886728785*^9, 
  3.7499752958455863`*^9},ExpressionUUID->"c7c48eaf-cb2b-4d07-a9ff-\
3b49c246c78b"],

Cell[BoxData["0.4666666666666667`"], "Output",
 CellChangeTimes->{3.4399601348016*^9, 3.5037308445469637`*^9, 
  3.630060774085102*^9, 3.659798886728785*^9, 
  3.7499752958477945`*^9},ExpressionUUID->"e9307d0c-fb75-4459-be04-\
259d3b117d8c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", "x", "]"}]], "Input",ExpressionUUID->"7f53564a-3d94-4e77-aa2f-3af24ce16ec1"],

Cell[TextData[StyleBox["Simple Calculus",
 FontColor->GrayLevel[1]]], "Subtitle",
 ImageRegion->{{0, 1}, {0, 1}},
 FontColor->RGBColor[
  1, 0, 0],ExpressionUUID->"b3c56725-c0f0-496a-9418-f8864d691840"],

Cell["\<\
Differentiation and integration are both available, from the pallette or \
using functional forms\
\>", "Text",ExpressionUUID->"7c51f1cf-34a3-4a5d-b215-c1d1c591239e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubscriptBox["\[PartialD]", "x"], " ", 
  RowBox[{"Sin", "[", "x", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Integral]", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]}], "Input",ExpressionUUID\
->"04e6e3ca-837e-48f5-88ed-1efd783ed47b"],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.4399601348486*^9, 3.5037308446479692`*^9, 
  3.630060774098898*^9, 3.659798886842999*^9, 
  3.749975295892397*^9},ExpressionUUID->"c9242fcb-96cb-4dd3-876b-\
dc54fcfbf58a"],

Cell[BoxData[
 RowBox[{"Cos", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.4399601348486*^9, 3.5037308446479692`*^9, 
  3.630060774098898*^9, 3.659798886842999*^9, 
  3.749975295895914*^9},ExpressionUUID->"0a2a7311-d86d-43b2-b75d-\
6792cb3b1af9"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4399601348486*^9, 3.5037308446479692`*^9, 
  3.630060774098898*^9, 3.659798886842999*^9, 
  3.749975295898107*^9},ExpressionUUID->"46513f7d-0f6a-4382-9c02-\
5dbaac4f1b88"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4399601348486*^9, 3.5037308446479692`*^9, 
  3.630060774098898*^9, 3.659798886842999*^9, 
  3.749975295900201*^9},ExpressionUUID->"0c451cd1-9827-4c2a-9adb-\
41da994804c7"]
}, Open  ]],

Cell["We can take multiple derivatives, and partial derivatives", "Text",ExpressionUUID->"20416fe2-f5b4-48bc-b74e-ea5e8d35edef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "2"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"w", "=", 
  RowBox[{"Cos", "[", 
   RowBox[{"k", " ", 
    RowBox[{"(", 
     RowBox[{"x", " ", "-", " ", 
      RowBox[{"c", " ", "t"}]}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SuperscriptBox["c", "2"], " ", 
   RowBox[{"D", "[", 
    RowBox[{"w", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "2"}], "}"}]}], "]"}]}], "\[Equal]", 
  RowBox[{"D", "[", 
   RowBox[{"w", ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "2"}], "}"}]}], "]"}]}]}], "Input",ExpressionUUID->\
"eb5e54a4-fc08-4ac0-b94d-8be28b97a76f"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Sin", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.4399601349516*^9, 3.5037308447199736`*^9, 
  3.630060774122897*^9, 3.659798886950755*^9, 
  3.7499752959216213`*^9},ExpressionUUID->"1cd86ced-7908-4ab3-8e50-\
a6e61ea941a2"],

Cell[BoxData[
 RowBox[{"Cos", "[", 
  RowBox[{"k", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "c"}], " ", "t"}], "+", "x"}], ")"}]}], "]"}]], "Output",
 CellChangeTimes->{3.4399601349516*^9, 3.5037308447199736`*^9, 
  3.630060774122897*^9, 3.659798886950755*^9, 
  3.749975295926544*^9},ExpressionUUID->"eac8ce17-8306-417b-bf0a-\
ecceec045501"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4399601349516*^9, 3.5037308447199736`*^9, 
  3.630060774122897*^9, 3.659798886950755*^9, 
  3.7499752959285383`*^9},ExpressionUUID->"c6aa452b-2c09-42e6-a638-\
adb9ff38f1de"]
}, Open  ]],

Cell["\<\
(this shows us that the function w satisfiews the wave equation)\
\>", "Text",ExpressionUUID->"e63ef126-ba4c-4f71-bd79-d41776eca65d"],

Cell["Definite integrals are straightforward", "Text",ExpressionUUID->"2d381070-1f3f-46b0-a788-58d097005ef0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", 
   RowBox[{"2", "\[Pi]"}]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], 
   RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]}], "Input",ExpressionUUID->\
"fcb764af-1e04-4692-936d-e8c7e92a53ea"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.4399601350516*^9, 3.503730844798978*^9, 
  3.630060774148584*^9, 3.659798887097474*^9, 
  3.7499752959531116`*^9},ExpressionUUID->"0aa8aefc-3d71-4a3d-9a19-\
b97dd1d8c26a"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.4399601350516*^9, 3.503730844798978*^9, 
  3.630060774148584*^9, 3.659798887097474*^9, 
  3.749975295959096*^9},ExpressionUUID->"98a7a9d0-a2cf-4eb2-9670-\
01259e605fea"]
}, Open  ]],

Cell["We can also use Infinity as a limit", "Text",ExpressionUUID->"e22aa3f8-fbaa-4dd5-ad72-2972d793d1b4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "a"}], " ", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",Express\
ionUUID->"82c79ce4-f412-4951-9199-8a861dc1421c"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox["1", "a"], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.4399601359616003`*^9, 3.5037308450689936`*^9, 
  3.6300607745121107`*^9, 3.659798887465934*^9, 
  3.7499752964294662`*^9},ExpressionUUID->"52f379f6-3102-4134-a847-\
ca3d2039e6fb"]
}, Open  ]],

Cell[TextData[{
 "Note, again, that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is cautious and checks whether or not an integral is going to converge."
}], "Text",ExpressionUUID->"54883872-2d9d-451e-8a4f-ed6b06ef003a"],

Cell["Solving Algebraic Equations", "Subtitle",ExpressionUUID->"a9d878f2-4d28-49e4-bdaa-863cc24f5ff7"],

Cell[TextData[{
 "The simplest solver, suitable for polynomial equations, is ",
 StyleBox["Solve",
  FontFamily->"Courier New"],
 ". We need to give it the equation(s) and the variable(s) we want to solve \
for."
}], "Text",ExpressionUUID->"c7b8ec22-20e9-44e2-813f-8468c2606a01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq1", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x"}], "-", "2"}], "\[Equal]", 
   "b"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol1", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{"eq1", ",", "x"}], "]"}]}]}], "Input",ExpressionUUID->"5815a3e7-\
3966-4296-845e-a92d02f0a9a5"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "2"}], "+", 
   RowBox[{"3", " ", "x"}]}], "\[Equal]", "b"}]], "Output",
 CellChangeTimes->{3.4399601360256*^9, 3.503730845149998*^9, 
  3.630060774516212*^9, 3.659798887713401*^9, 
  3.7499752965367393`*^9},ExpressionUUID->"4d216aa5-7992-4672-ba5c-\
5abdf4a09f33"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox[
     RowBox[{"2", "+", "b"}], "3"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601360256*^9, 3.503730845149998*^9, 
  3.630060774516212*^9, 3.659798887713401*^9, 
  3.7499752965443225`*^9},ExpressionUUID->"ba3c5c58-1f98-4b03-a3ea-\
20de5ee7a31e"]
}, Open  ]],

Cell["\<\
Note 
   1) the solution is returned as a rule (the construction with the arrow in \
it). Rules are very useful and very powerful, and we'll learn about them in a \
later lecture. 
   2) the solution is returned nested inside curly brackets. These brackets \
are used to group objects together, forming a List. For the moment, just note \
that we can extract the bare rule from the list as follows:\
\>", "Text",ExpressionUUID->"8a0f60db-1ba6-41eb-9a65-ccfdd03864b6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1"}], "]"}], "]"}]], "Input",ExpressionUUID->"4056ef8a-\
18e4-4552-95e5-2b83e707aea9"],

Cell[BoxData[
 RowBox[{"x", "\[Rule]", 
  FractionBox[
   RowBox[{"2", "+", "b"}], "3"]}]], "Output",
 CellChangeTimes->{3.4399601360856*^9, 3.5037308452370033`*^9, 
  3.6300607745302258`*^9, 3.6597988877735357`*^9, 
  3.7499752965696354`*^9},ExpressionUUID->"fe1a930d-9b39-4ce1-b2ca-\
4d136b604ea1"]
}, Open  ]],

Cell["Note DOUBLE SQUARE BRACKETS", "Text",ExpressionUUID->"17bb397e-a0e1-43e5-919e-f1694d147cc6"],

Cell["We can do simultaneous equations", "Text",ExpressionUUID->"84b4e6ac-0822-48c8-bae5-e894f9fec0ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq2a", "=", 
  RowBox[{
   RowBox[{"x", "-", 
    RowBox[{"2", "y"}]}], "\[Equal]", "a"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq2b", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "x"}], "-", 
    RowBox[{"5", "y"}]}], "\[Equal]", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol2", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"eq2a", ",", "eq2b"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]}], "Input",ExpressionUUID->\
"486ba5cc-9339-4409-8b00-920e2e161160"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", "-", 
   RowBox[{"2", " ", "y"}]}], "\[Equal]", "a"}]], "Output",
 CellChangeTimes->{3.4399601361186*^9, 3.5037308453620105`*^9, 
  3.630060774540762*^9, 3.659798887843789*^9, 
  3.7499752965927277`*^9},ExpressionUUID->"70c702b4-dafc-4e81-af83-\
816ec0585413"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"3", " ", "x"}], "-", 
   RowBox[{"5", " ", "y"}]}], "\[Equal]", "b"}]], "Output",
 CellChangeTimes->{3.4399601361186*^9, 3.5037308453620105`*^9, 
  3.630060774540762*^9, 3.659798887843789*^9, 
  3.749975296596653*^9},ExpressionUUID->"646ae8a0-c985-400e-b40c-\
849b42e3c6e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "5"}], " ", "a"}], "+", 
      RowBox[{"2", " ", "b"}]}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", "a"}], "+", "b"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601361186*^9, 3.5037308453620105`*^9, 
  3.630060774540762*^9, 3.659798887843789*^9, 
  3.7499752965999823`*^9},ExpressionUUID->"68731d2d-4507-49af-a35e-\
67a8c11373dd"]
}, Open  ]],

Cell["\<\
Now we see that the innermost braces (List) are there to contain the \
solutions for the two (or more) variables.\
\>", "Text",ExpressionUUID->"523611d3-a83b-4092-ae85-8e9aab6e8dbb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq3", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     RowBox[{"x", "^", "2"}]}], " ", "+", " ", 
    RowBox[{"b", " ", "x"}], " ", "+", " ", "c"}], " ", "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"eq3", ",", "x"}], "]"}]}], "Input",ExpressionUUID->"44928386-f81b-\
418a-b7c9-72c7f9bf7b16"],

Cell[BoxData[
 RowBox[{
  RowBox[{"c", "+", 
   RowBox[{"b", " ", "x"}], "+", 
   RowBox[{"a", " ", 
    SuperscriptBox["x", "2"]}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.4399601361626*^9, 3.503730845421014*^9, 
  3.6300607745536213`*^9, 3.6597988879284267`*^9, 
  3.7499752966293793`*^9},ExpressionUUID->"99518cea-1ac4-42b4-bd45-\
b8108fcae85f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.4399601361626*^9, 3.503730845421014*^9, 
  3.6300607745536213`*^9, 3.6597988879284267`*^9, 
  3.7499752966332245`*^9},ExpressionUUID->"5b6afd77-e9db-4a9b-95ad-\
7df2b6804451"]
}, Open  ]],

Cell["\<\
That shows what the outer curly brackets are for -- to account for the \
possibility that there might be more than one set of answers to the equations.\
\>", "Text",ExpressionUUID->"dc006a23-0011-4157-9769-f3a5af978ff3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"eq4a", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", "y"}], "\[Equal]", 
   "a"}]}], "\[IndentingNewLine]", 
 RowBox[{"eq4b", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"2", 
     RowBox[{"x", "^", "2"}]}], "-", 
    RowBox[{"3", 
     RowBox[{"y", "^", "2"}]}]}], "\[Equal]", "b"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"eq4a", ",", "eq4b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], "Input",ExpressionUUID->\
"a4499889-8345-47b3-8cca-da67f1c3a2df"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["x", "2"], "+", "y"}], "\[Equal]", "a"}]], "Output",
 CellChangeTimes->{3.4399601361986*^9, 3.503730845493018*^9, 
  3.630060774570977*^9, 3.659798887999804*^9, 
  3.749975296659715*^9},ExpressionUUID->"717670d4-fa81-4875-8e63-\
edca148e67c8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"2", " ", 
    SuperscriptBox["x", "2"]}], "-", 
   RowBox[{"3", " ", 
    SuperscriptBox["y", "2"]}]}], "\[Equal]", "b"}]], "Output",
 CellChangeTimes->{3.4399601361986*^9, 3.503730845493018*^9, 
  3.630060774570977*^9, 3.659798887999804*^9, 
  3.7499752966632185`*^9},ExpressionUUID->"8e433557-e444-45a4-b917-\
0ebbe832c13c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "a"}], "-", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"6", " ", "a"}], "-", 
            RowBox[{"3", " ", "b"}]}]]}]], 
        SqrtBox["3"]]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox[
       SqrtBox[
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "a"}], "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}]], 
       SqrtBox["3"]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       SqrtBox[
        RowBox[{
         FractionBox["1", "3"], "+", "a", "+", 
         RowBox[{
          FractionBox["1", "3"], " ", 
          SqrtBox[
           RowBox[{"1", "+", 
            RowBox[{"6", " ", "a"}], "-", 
            RowBox[{"3", " ", "b"}]}]]}]}]]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "3"], "+", "a", "+", 
        RowBox[{
         FractionBox["1", "3"], " ", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}]}]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "-", 
         SqrtBox[
          RowBox[{"1", "+", 
           RowBox[{"6", " ", "a"}], "-", 
           RowBox[{"3", " ", "b"}]}]]}], ")"}]}]}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.4399601361986*^9, 3.503730845493018*^9, 
  3.630060774570977*^9, 3.659798887999804*^9, 
  3.7499752966673975`*^9},ExpressionUUID->"4634428b-1efa-41f9-b08a-\
3187053af9c1"]
}, Open  ]],

Cell["\<\
4 solutions in all, really needing both levels of the list structure.\
\>", "Text",ExpressionUUID->"16d263f6-d3fc-4344-88d5-eb1614347196"],

Cell["Differential Equations", "Subtitle",ExpressionUUID->"eb0e85b1-e891-4d69-8d27-bb86f806f754"],

Cell["\<\
We can solve differential equations, of first or higher order, to get general \
solutions or solutions with boundary conditions.\
\>", "Text",ExpressionUUID->"15d77284-2084-42e7-9dc0-9a2671033f75"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"deq1", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   RowBox[{"y", "[", "t", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{"deq1", ",", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",ExpressionUUID->\
"b8a7b1db-103c-49e2-bd2b-fe28c290dad6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", 
  RowBox[{"y", "[", "t", "]"}]}]], "Output",
 CellChangeTimes->{3.4399601362595997`*^9, 3.503730845565022*^9, 
  3.6300607746651154`*^9, 3.65979888814048*^9, 
  3.749975296703*^9},ExpressionUUID->"64861616-754e-4125-b170-860c9c47d17d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", "t"], " ", 
     RowBox[{"C", "[", "1", "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601362595997`*^9, 3.503730845565022*^9, 
  3.6300607746651154`*^9, 3.65979888814048*^9, 
  3.7499752967206497`*^9},ExpressionUUID->"11eaf6dc-12e9-4032-aa88-\
9a2365c9ea99"]
}, Open  ]],

Cell["\<\
To impose boundary conditions, we could do it ourselves from the general \
solution, or let Mathematica do it by adding the boundary condition to the \
list of equations to be solved. For example, if we want our solution to be 1 \
at t=0\
\>", "Text",ExpressionUUID->"6dd8d900-40a0-44aa-864c-fe419e2152a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"deq1", ",", 
     RowBox[{
      RowBox[{"y", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]], "Input",ExpressionUUID->\
"7d0e017f-8d75-4eda-8a64-0934013cfbc0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"y", "[", "t", "]"}], "\[Rule]", 
    SuperscriptBox["\[ExponentialE]", "t"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601364456*^9, 3.5037308456290255`*^9, 
  3.630060774743206*^9, 3.659798888247636*^9, 
  3.749975296747976*^9},ExpressionUUID->"3f2acd4a-3ff8-4c28-8ca1-\
c093c21c4838"]
}, Open  ]],

Cell["Note that you still get a servicable solution with", "Text",ExpressionUUID->"0f2c56f7-6124-407c-b83f-a8085f7bb05b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{"deq1", ",", "y", ",", "t"}], "]"}]], "Input",ExpressionUUID->\
"1a4aea21-f45d-4b84-bc55-30c8265cc00c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", "t", "}"}], ",", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "t"], " ", 
       RowBox[{"C", "[", "1", "]"}]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601364736*^9, 3.503730845675028*^9, 
  3.630060774755602*^9, 3.659798888318927*^9, 
  3.7499752967689004`*^9},ExpressionUUID->"da953067-5757-4f18-94ad-\
f1ccbc7f2876"]
}, Open  ]],

Cell["\<\
but in a form which we will not be able to handle till a little later.\
\>", "Text",ExpressionUUID->"207ff690-13ea-4045-be96-78e414b559eb"],

Cell["Mathematica also recognises the standard prime notation:", "Text",ExpressionUUID->"7bdd1ee6-dc62-46d7-9c37-a1d0b698907d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"y", "'"}], "[", "x", "]"}], "\[Equal]", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"y", "[", "x", "]"}], ",", "x"}], "]"}]}]], "Input",ExpressionUUID\
->"a3b7512f-aa0a-484e-8154-3336f8aa86c2"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.4399601364976*^9, 3.503730845730031*^9, 
  3.630060774767352*^9, 3.6597988883887587`*^9, 
  3.7499752967999964`*^9},ExpressionUUID->"a4d7b60c-99bb-4a19-853a-\
21d99b8e1bb5"]
}, Open  ]],

Cell["\<\
We have to tell Mathematica explicitly where there is dependence on the \
independent variable:\
\>", "Text",ExpressionUUID->"fefba8f3-fdce-456a-930f-e8f381944bc5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"deq1", "=", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}], "\[Equal]", 
   "y"}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{"deq1", ",", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",ExpressionUUID->\
"9abd2384-a61d-4a75-8814-a510640c9240"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["y", "\[Prime]",
    MultilineFunction->None], "[", "t", "]"}], "\[Equal]", "y"}]], "Output",
 CellChangeTimes->{3.4399601365196*^9, 3.5037308457870345`*^9, 
  3.630060774780052*^9, 3.6597988884775877`*^9, 
  3.749975296823968*^9},ExpressionUUID->"5431f31b-f4e3-4ef2-b56a-\
cafe6a09e7bd"],

Cell[BoxData[
 TemplateBox[{
  "DSolve","dvnoarg",
   "\"The function \\!\\(\\*RowBox[{\\\"y\\\"}]\\) appears with no arguments.\
\"",2,103,4,26661339801529840717,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.503730845900041*^9, 3.6300607748529797`*^9, 
  3.659798888501253*^9, 
  3.749975296828229*^9},ExpressionUUID->"84104a8d-3b81-42ca-82e5-\
2fde9261246a"],

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["y", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}], "\[Equal]", "y"}], ",", 
   RowBox[{"y", "[", "t", "]"}], ",", "t"}], "]"}]], "Output",
 CellChangeTimes->{3.4399601365196*^9, 3.5037308457870345`*^9, 
  3.630060774780052*^9, 3.6597988884775877`*^9, 
  3.749975296848609*^9},ExpressionUUID->"e99b8976-d1ec-47fb-9daa-\
6d5f6e4bb39e"]
}, Open  ]],

Cell["\<\
We can handle second order differential equations too: for example,a damped \
harmonic oscillator\
\>", "Text",ExpressionUUID->"d9aa9c2a-81c3-4633-bc27-962da9adc426"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"deqosc", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"x", "[", "t", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "2"}], "}"}]}], "]"}], "+", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["\[Omega]", "2"], " ", 
     RowBox[{"x", "[", "t", "]"}]}]}], "\[Equal]", 
   "0"}]}], "\[IndentingNewLine]", 
 RowBox[{"DSolve", "[", 
  RowBox[{"deqosc", ",", 
   RowBox[{"x", "[", "t", "]"}], ",", "t"}], "]"}]}], "Input",ExpressionUUID->\
"78ca195a-c42a-4b2d-b0fa-eb9f9d808c95"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Omega]", "2"], " ", 
    RowBox[{"x", "[", "t", "]"}]}], "+", 
   RowBox[{"\[Alpha]", " ", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]",
      MultilineFunction->None], "[", "t", "]"}]}], "+", 
   RowBox[{
    SuperscriptBox["x", "\[Prime]\[Prime]",
     MultilineFunction->None], "[", "t", "]"}]}], "\[Equal]", "0"}]], "Output",
 CellChangeTimes->{3.4399601367836*^9, 3.5037308459680448`*^9, 
  3.630060774864846*^9, 3.659798888810972*^9, 
  3.749975296870589*^9},ExpressionUUID->"922f6b52-3577-4ece-a1b3-\
9d353ded465e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], "-", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "1", "]"}]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        FractionBox["1", "2"], " ", "t", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "\[Alpha]"}], "+", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["\[Alpha]", "2"], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["\[Omega]", "2"]}]}]]}], ")"}]}]], " ", 
      RowBox[{"C", "[", "2", "]"}]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.4399601367836*^9, 3.5037308459680448`*^9, 
  3.630060774864846*^9, 3.659798888810972*^9, 
  3.749975296877307*^9},ExpressionUUID->"8cdf07c0-26b5-4c86-8660-\
1c15203132b2"]
}, Open  ]],

Cell[TextData[{
 "We shall discuss later how to handle boundary conditions: for the moment, \
note that this second order differential equation has a solution containing \
two arbitrary constants, ",
 StyleBox["C[1]",
  FontFamily->"Courier New"],
 " and ",
 StyleBox["C[2]",
  FontFamily->"Courier New"],
 "."
}], "Text",ExpressionUUID->"97469656-e7a7-48e0-b102-5e8050364261"],

Cell["Simple Graphs", "Subtitle",ExpressionUUID->"9aafc3fe-3cec-428d-9ee1-1a390cca4ea7"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " contains a rich variety of graphics functions. We will deal with these in \
more detail in a later lecture, but here are a few examples."
}], "Text",ExpressionUUID->"47154a9e-6ac6-4717-b774-0274702e2ee3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Cos", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}]], "Input",ExpressionUUID->\
"7fe73b57-366c-4c1f-8d24-1ff7d7c30fc1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
yJirVKPmZxSgNkv5H+OU3bOLFeH//1/4PyOjd/A=
       "]]},
     Annotation[#, "Charting`Private`Tag$3308#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, 2 Pi}, {-0.9999998830731719, 0.9999999999999918}}, {{
     0, 6.283185307179586}, {-0.9999998830731719, 0.9999999999999918}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4399601372116003`*^9, 3.50373084605005*^9, 
  3.630060774888913*^9, 3.659798889015222*^9, 
  3.749975297098487*^9},ExpressionUUID->"2c639226-a03c-4fed-ab6a-\
7f254c76ccd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}], "-", 
    RowBox[{"y", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", ".5"}], ",", ".5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", ".5"}], ",", ".5"}], "}"}]}], "]"}]], "Input",ExpressionUUID\
->"e9444a9f-e27b-4926-beea-68b2ac4b4f55"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJx1nH2clVW1x+cq4AUtStAUXyAaTdTElzEDc1YKGgjMtShFwykcVK46aQiF
lFRmMVZYjib5kU8FaoiM2MytKXXkYQ4wmJjCEUdhlBfldYbhRR30Yl5unznr
u5/P8+ts/zmf+bnZZ+3vs5+111577fPp62796vWHlZSUnNizpOTwf31++s1x
/3Po0KaEz7sHN4wtKdlsN0z700ON1W1B3zDpR/2uHviWPXFkvx9Vt7UGferc
S64e0PG27Vkw/YbS0fmgj13+wUkjq7bZ9d39rA76lG0LJrXO3u7tc0Ff8dGX
StdO2OF6Q9CvO+qV68tad1iJ/4d+ySevPrWkZCftTdt7/6b9uz1W3J68qf0+
XtPxOh9TPv63KU/+hivt+ZvPs+dXbKgv3xo4o7/Q+olBt/cJdgb90cNWbZ13
VxhX0JeWfue0oQt3Bs7oJ17Ut2PIjF2BM/ozY+afOadrV+CM/tsrPts5YWB7
4Kzt4az9w7m4PXlT++Gs44Wz8oGz8oQz/G7PPq+g/937528+s/MnH/QvfuGe
0ysrwriCftU1531739T2wBn9z1PXnt0xoiNwRv/qj6umVjR3BM7o5/xs17kD
OkJ70/Zw1v7hXNyevKn9cNbxwln5wFl5whlO4/x9gTP6I9nnG3Ts4W8+j51s
e2e3tAfO6Fk+uaDf+7vZXf2bdgfO6Gc+efwFM4Z1Bs7oRzb8/v0RVZ2Bs7aH
s/YP5+L25E3th7OOF87KB87KE87wwF/BGZ33C87oMh+Cjv38zefYx+//bl3f
wCHoi5adM2zh5sAt6F9+efnMPpV7Amf0U9eNvrB19p7AWdvDWfuHc3F78qb2
w1nHC2flA2flmZ3PuWSlrxfZ+ZxLTnD/lp3POXnf80GX+RP0LM9c0Hutf/nD
+fV7ZD7nkkd3TLqo59C9Mp9zyU927/hozYS9Mp/T9tn5nPafnc9qT97U/ux8
Tsebnc8pn+x8TnlmOTckVVn/E/SnfX3Jcm4Qf5gPOu9vlnODzregZ/k0BP2S
A+/OmlKnnP8Vj3x4h5W1Kue0fZZz2n+Ws9qTN7U/yzkdb5ZzyifLOeUJZ8ZB
vARndNZ3OKOLfws6/hPO6Nn3PRd0mZ9Bh2dJ0f/2Bc7aHs7aP5yL25MPOvbD
WccLZ+UDZ+Up89ki89ki89ki89ki89ki89ki89ki89ki89ki89ki89ki89ki
89ki89ki89l0PmNXxD9bxD9bxD9bxD9bxD9bxD9bxD9bxD9bxD9bxD9bxD9b
xD9bxD9bxD+b+me+PxJvWCTesEi8YZF4wyLxhkXiDYvEGxaJN/R9Me1f4g2L
xBsWiTcsEm9YJN6w4vFG3iLxs0XiZ4vEzxaJny0SP1skfrZI/GyR+Nki8bO+
X1bcnhA/WyR+tkj8bJH42TR+pr/IftAi+0GL7Actsh+0yH7QIvtBi+wHLbIf
tMh+0CL7QX0fTe2X/aBF9oMW2Q+a7gf5d5H8hkXyGxbJb1gkv2GR/IZF8hsW
yW9YJL9hkfyGRfIbFslvWCS/YZH8hkXyG6b5Df5/JF9nkXydRfJ1FsnXWSRf
Z5F8nUXydRbJ11kkX2eRfJ1F8nUWyddZJF+nPE15rjjth6e2Nb6Z8Dlq8vJ3
y8tS/ug3LB/+h4EDttDeIu0t0p5+LNK/RfoP7fk7zBfpP7yX0k9ET7QfsT/o
79y1/Zbqto0Jn4fdPea4qwcG3SI67S3SPujYx78b8cqshrpfbQ7tQh44qwf7
0fmbfzeiePsk0j58r9ij/Zh+752f3tp06FCa1710/bTmloNv2/rrZ7YcOvRa
+N6j+uSPOH1GqtN+8ug/vHTX3G12/hOfWHPo0CtpHn5q2bSy1q1Bp/25DYdd
OKdruw3ubvdyaH/Nun/YnK5tQad9fb95vbb332kbur93VWj/87N+d1NZ6/ag
035L9S3nzOnaaaXd7ZLQ/uYfP/bekBk7gk775ctuf/auubvss936U6H9/734
9pvVbfiHmibN59Oefq48quHRloO7QnvNS59QaG/aP7r2c3LBztD+FrcfnfYr
3P7XChxC+184H3TlM7DA2ZQ/uvIvKzxH0+eLrs/39cI8MZ0/6Dp/flCYh6F9
+cEljX02bgk67S/z+cm8Zd3Y+PELjqhp2RbmJ/o/Z13Xf2TVjjAP0V/YseJH
Fc07w3xDHz26cuzCzbvCvEKf+chZ36tobg/zB/0bB87/j5FVHWE+hPj34mnt
s1s6wnzQ/DnPXdvzfNEnev88R7WH54V+udvPc9Hxwl/5wBl9k/OEM+vw34Z3
rq4v3xE4o7c+cdz66radgTP6o/2+f+mMYe2BM/pnpvf/5NoJHYEz+tde3nrh
jGG7A2f08wfvXlndtjtwRn+++vSn6ss7A2d04n84a3s4o3/e+4ez2gNn9FK3
H846XjgrHzijP+084Uxc88rEuX1HVu0MnNH3v5g7saSkPXBGT84/5Z4+lR2B
M3r53KVfq7pzd+CMfuv+e3/Yp7IzcEa/YuSDvf+1iwqc0d/+1bp3RlTtCZw1
fw5nbQ9n9K94/3BWe+CMbm4/nHW8cFY+cEZf5zyz8zmXnD39/Hx52S6Zz7mk
Ytu3Nh1c0y7zOZecWLF8TM+hu2U+55KHn5r4qcqKTpnPueTF3p+7pOfQPTKf
c8mTE8tePLhmj8znXPKlx6f+pbxsr8znNH+enc9p++x8ziVLvP/sfE7tyc7n
XDLP7c/O53S82fmc8snO51xyjvPMcm5IXvrJqn4L6pVzQ7L73XcGVVZ0COeG
5JmJX58zpU45NyTDlu6Z0LxaOTckNx2X/GRKnXJuSMbc3PKxyoq9wrkh2djY
4/359co5zZ9nOafts5wbkrHef5Zzak+Wc0My3O3Pck7Hm+Wc8slybkhedp5w
Zh/zZM24ddVtKWf01R/M2DJkRsoZ/aFJbePKWlPO6Mctn3b8nK6UM/roky4d
WdaackY//baxLw2ZkXJGf+7Zn/+1ui3lXJL5b1/grO3hjH6G9w9ntQfO6Me7
/XDW8cJZ+cAZfYnzlPlskflskflskflskflskflskflskflskflskflskfls
kflskflskflskflsOp/ZZ0f8s0X8s0X8s0X8s0X8s0X8s0X8s0X8s0X8s0X8
s0X8s0X8s0X8s0X8s6l/Jm8RiTcsEm9YJN6wSLxhkXjDIvGGReINi8QbFok3
LBJvWCTesEi8YZF4wyLxhhWPN/IWiZ8tEj9bJH62SPxskfjZIvGzReJni8TP
FomfLRI/WyR+tkj8bJH42SLxs2n8TF4tsh+0yH7QIvtBi+wHLbIftMh+0CL7
QYvsBy2yH7TIftAi+0GL7Actsh+0yH7QdD9InlLzReiaF0LX/A+65nnQNZ+D
rnkb9EgexjQPo+0lr2KaV1F7JE9imifR8UrewzTvga75DfJ1F3k+RPJyRl5F
8m9GfkbybEaeR/JpRj5N8mZG3kzyYxbJj4X8ueS7QnvJaxl5LclfGfkryVMF
+yUfFcYreafAB558Hli7eNAxTem8/c1Ln9o8qvaN5N6nd8+r65vO2ye/P+bw
2tI3k+9cM33f6iHpvCUP3eO9skeG9dwReL7xasPo0tEbkzE/O+MvXfPTfOO7
nqe9WPKHfc4e8OvG6k3JzgeeOzBh4M7A88ZI/nCW23/zyNd/0daYzlvs7zx7
2T11fdN5i/2Djt20ffWQdN5ify+3H55tbv/DLzQv7Zq/LfDE/i0P/XRYScnW
wLP5b5c90lj9WnLm87M29p2T+ls+H9y/Pzd+3/bAc//RS3aNqn095BXh2XvZ
lqNqS9cnd55156KWg6kfGFR9zNltjeuTgxf/ZnHX/F2B5xcGjB5fOnpDMqRi
61G392kPPP9r1Q++W922Iek9/qZ/lJe1B56LI/m3nNs//MNnm/vOSf3tBre/
a8rKp8bvaw88sX/Syz0/2tY/9bdqPzyxn/kAT+znfA0/cIXb/8HAz7WXl6Wc
e16x6J7qtnxy0fQr76/rm8YPJ330Rl1j9SvJpoEdN1bdmcYPfJ67vPHhKXW7
AudxV418d1TtuuTz33z6rKZ57YHz5B4zjq0tfTXp8Pgczj+oXzysrfHVUN8F
5/srN00sHd2a/PcRR35mTle6ru2N5N96uf3ULcD5ZLefuAvO2P/WrEG1U+o6
Ame1H87Yz3kxnLH/nd6//mlFc7quPeD240/gfH/3e/Ri8uvjBq+qL0/j4eXd
78s/kpv8vcO+wnvxUpgncOaT+Qbnxx/e8M9RtWuSk+eNPGbowjROWzbq44Nq
S9cmTU+0Xllb2hk4v9Z18Yi2xrWBZ3Zd+/f822/c/t+P+eYT9eVpPLzC7X/h
2cUz2ho7A2fsf6x06B/H70vjNLUfztj/7c0bTh66MI3TsP/a8w6/qbZ0V+D8
uttPXAHnE7uf+/LklIYtdwwckO7vxnY/3xXh+cK58BxXJv/b4/lLFm5O9x2F
97olqX7kY42bt6X7Dj7vG/7zmil16b6j8J7+PZnywkXPlJel+47C+/hCsuer
p42pujPdd+yL5N9OdvvLtp187cAB6f5unNv/YOsvT2ial+47sJ96Hjir/XBe
7/Yz/+GM/f/p/g3Ow9x+/ACcL++258/Jh+4/s/FwYzLytnuv6Dk0zVf06e7/
6fA+wnlK93x7NmlvPOVvfeek++iW7nn1XKgXhTOfX9/823nj96Wcm7vnSXPS
v/3RkzpGpPvo/ZH8W4Xb32d6/t6u+SnnOref+jQ4Y/9ef45wxv4Otx/OK93+
3/a75u4+lek+GvsP+HsN55zb3+OvNw7vGJHuozd3239XcvTzX5xY1qr5itrk
/u9dtb+xOuX87W57Hk5WDly0bXZLyvm97vYLwjyB85+6x/vH5KJr9nf0b0o5
39Ldz+IwP+HM58zvHXNrW6Pm3/hM8289HinYD384f+D2v7vn9I2N1Snn29z+
6W1HvzG7JeWs9sN5idtPnRWcq91+9oNwPtPtJ86Bc6nbix/O5isWh30lnB8r
fG+o74LzzoKdppwnFMZljAvOhedba3CA77rCc7dsnXBNU0ck/8YnzwXO33L7
eY5wftTtL/fnDme1H87Xuv0tPq/gvNHtZx6G+ez2M2/hXPDnzcY8h/Mgt5f1
Ds7LCu+RzfX3CM7XFd47U7/Ro/CeGu8pnP9YeK9D3SmcRxX8gOEH4Lw7kn9b
6vbjZ0K84Z/4JThjP34MztivfqOn24+fhDP2X+p+Fc6Xuf34YThfUPDbht+G
8xEFP2/4eThjL+sCnB8vrCOm6+AdhXUnzBM4F9aFFcY6BecTCuuasa7BeXIk
/3a+289zhG8vt591Frv5rPV1Gc5qP5xnuv0Hfd2HM/Zf4HECnAe4/ad6XAFn
j6NCfgPOSSFusYket8B5YSHOMeIcOGOvxnX7CnGUEUfBubkQdxlxF5xrC3Ga
/cHjNDh3RvJvrW4/OpyXuv3EjfDFfuJM7Fb74bzf7ee9hjP244fhfJ/bf5/H
ySF+LsTVYZ8O5+8X4nAjDodzVSFuD3WecB5TiPPD84Uz9jL/4VyIJ18J7yOc
fd9k43zfAedFkfxbrdvPvgbOM91+9kFwxn7ONeCr9mM3n+f5vgzO2L/Z/QCc
e7j95b7vg7Pvc419IpwL/mRDqNuE88DCPtTYh8K54GfWm+679xX2ucY+F87Y
S1wU4rrCPtou9H10Nm//7/m3CreffTqcP+/2n+77ejhjP/4Tztg/S/bd2N/g
eQbs5pO8BJyXuf3kMeDs+RmbPvi+X9SWvhU4U0/3ludD4LyhkD8x8idwXu51
ib0kX7S4kJ8x8jNwfqCQz7E9ns+Bs9sV3kc4D4rk33q7/bs8vwRn7Kc9nLF/
rM8TOKv9cK5z+6d6fgy+2P8rz6cJzwSe8D8yovtn8r7n6ySPZ+TxpL29L/qR
8hyl3syoN5O8a0Lelfoz/j95b9qh0546KnTy59T9oHN+QZ0KOudx1FWgc35H
HQA656ecW6NTD8A5q7bnXFD75xyruD15U/s5J9DxktdWbvDkfaryfDg80T/m
+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
TshTST5H7Yebjjf8fpTw4W+4kgf7f6Ommws=
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
c91fNaLvUutG5TgLUutG6aVLonNV7SU1i86zVmIvpT2ReA9lT+o6iWrXqsNs
yddau+gcWXXLKZlzNum99vlzKk5dF52T1svX7Pp8vXSNzmEb5jpxqsaE/8/I
nONJJ3ePzklVz+wGj0tcP7wpOj9VzbNHdExUvOgYPQ6qkV4fnVcqHrWJrgmo
pvp5as0pTXtQcTRx7f2y6LxYY7s7tS+SPwz5nJRf+jt1nUp1+HmpdZq09NzU
elUaW+OyJV/v8jPSKZrf8kXSdJWY552i6wmqu/aMzt9VP6yQxw6tp6ui6yfK
45U3aO/jHcbn5Og9KdWQp2bObxVnX8m8d/U9/G3qfEG5be3ovSTVQutE722p
znlr9JirDtwwej9LOvmU6D0m1UuXpq6taa9kUuY8XHqjUfSel+qoV0T7c+2B
jsy8r6b5/H0eZ6VXP02tXaVvx2ber1qtNR1db1G9dHTmPS3NvbrRe2SqjU/O
XBeQtvksdX6hHKRB9P6d6revZt6rWwqfl4+bNMk3qfM45fv1o7WK4vLXeaxX
Xj8xcx1BfmZM5n24VXCT6D01jee4zLnrGrhldO7/E7Z5dL1C518eXa/Qe51G
G5R4T+Ss6H067df8kLrmqf2sCZnz55+1PjLvI2rtt4quJ6i/cfSeoPLis6P3
7/SOV0bX3LTX2SK6vqFnuzqf85ozp0bvaWr/aHzm/FzP/D+cl+Wm
           "]], Polygon3DBox[CompressedData["
1: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
Q//OlSMf/5Tjes/J8WnnX4l4M29d37/BS7teUqznr3Pk19ly6KHM+F7w4vBr
cIH7w0vkuH9ztIJ34/0f0+/RivN3hT+i/yPnz+v6qPnkpxLxr3uN36vwOTub
G2kf+l7Gr2H8GF6/BV6f9hB8L+Mztwl9YXxZJ0c8eqDquUGMn9SKHLhQCk1v
buxqHKI/nTbRawJ/7fygXey9yjGXndOuZWuCTeBtmqgVOuXQZuYYc42atk+K
mlKtqwZeL4XmVRurEddNobHVjmqEv+h3bkI7vJVibbnGPldr0qbRH2+e5f87
C/4Avt44B58Jvw9f57yD7696aiCfM7IVmqNJsQbUIqcx/g79q+nP3iY0/jYp
NJRa6nTG36V/jXGtTWiQf5qY42qTUxl/uwlt1pXxU+C3nL+uM/hk+E3nq+sC
no32iFo3xfnmrJxiTZnLrCmsla2ZrTUUT9ZS5lhz7RYl9MIA+t9z7tol8ttO
OfL1hiX0Sd8c+W+rEvlhvxz5b8sSemHfHPll+xLrSRNAvWO9eTq8TY58tFaJ
fLQj/DXcq4Q+2Bj+At64hD7qlyMfnQi/Bl+So54YCb8OX5qj3jgJfsP1DHdu
E2t28RQ1h2vZmLAYvGwTscKaZVl4lSZqGWPmEik0tbH09xS5wJyg1rEGWy5F
jWZtZo26QooazNq1fQ6t3rsJLWONsyq8ThO1jxp9tRQ1r9rdGmz5FDWNtdnK
JfLv1jn0gxqrlSJmqr2MiXOmiEnGyn/ga1No7kG891f4ghT3cDe4PdfgjhSa
bpi1OuNLwivAr/L+R3ltCP2Dee0MxrrBs5eIAye2ou2XogZ3zBr8qBQ1i7W5
79FneaTEZ83F992QQwNPqevLnJbrenNOOjefaWJum0NvzLH+za2b5FhLrilr
FWOKudMcaqxRI6mVzBnzw6vmiFPd6fcw9tBfnfH1GP+4jhnLjIGe45zaHz6k
ibnmHD8lxRx07htTN0sRo421xug1UmjIn+ocHZJijjp3zWFzpci55rYh8KZw
H/jHHBqlbYoaQu3yeYpYa8xVe1pjzJQiR1l7WGOoTbrV882hc6TIaeZWNf8C
KTwBawFrigVT1PTWGuY4tYqaxdynJps/RY2uVjNH9nRON5E7zaE94J5N5FZr
oo4pcqq1kjVFlxQ1h7WGNVqnFJrP2k2N3L7+XrXzJPj2FDlwYIkcaDx6uonc
qAZfKoVGVZsf3Yp8s6dhs4RmnSdFTlTL3ghfA99oDiuhIWZLUVM9UHOiXoEa
2Fx5LXw+fCm8eYma+uQUHoK1tppabW3Ong/esYQeGJyj3joKfgo+J0e9qUen
V6eH17WEx9W/zscZ6/xzPrlGXCt6dnp3emKzlPD89P705GYt4cnpzenxdS6h
EW9IUbOoHfWY9Jqs8fUmrdH1ro6v62GZHLWE81/tNLyuD2uCmUt4qHqpeqB6
rXoqelsnNOG1uL6G1vnr/F+ohGfqGj6jNmOBnp9jemh6aXoqeqd6Ypem0AR6
ZXosei16gnq3epSHpfAU9S7NiQPrenN9qgkG1fU9ZwlPwtpkWF3feop6i3qI
eqMnwwek0BRzl/DsLk6hgfXy9PzGwVc24QXunKMWM2eZu/TY9Nr0NPQy9eT0
5vQ09Hb1pa29zTHmGmsMvbXRTdQeeiB6P3qCeiN6LnpfenB6MXo0emd6Yno3
ejxnpfDU9H70mMbA45rwnvTQ9NL0oPRK9dj02syJ5kY9Lr0uPTy970Ny1FrW
XDvB++eoxcy55l49yPNSaHy9yaE5vBM9lL4lPMdLUtQkepHWDBPhSU3UEtYE
V6fwvK0V9Az1DvWo9Lb1fPR+RjbhvetZnZuiRtDLska4Cp7YRO1wJO1J+mfn
8GdOYfzAFB77vOY2eHAKT30B13MJ/+HIHP6Ev9nfPiRHvblHCb/oqBz+gznN
XHdEjlxnzjO3jay5cL8S/sxxOerTvUv4P8Nz6PsBJfyjY3Po+31L+EsjctQD
XmOv9cE5/JgDSvglJ+Xwsw4q4fecksO/Ohp+Fj4vh19yYAn/5WQTHnxECT/0
rBz+02El/NAzc/hhg0vo6VNz+F2L5qjN+vGatfQQ2lS6o3L4TSPgF+GxOfT3
MfBz8Pk5/Jzh8PPwBTn8n2PhF+ALc/hTagBz77k5tMGp/k8p9lR6Oj95fWqK
7/C73AO5DZ7cxN6I+Uv93KXmCz0YvVU9Cr0ZPZ5eVU/q/Vizqq8713ynnupR
85n6696a77rXfGWNcWMKj8baw5qke81P6i9rlm41fz5f9ZZ6Tn2nvrI+UM+p
z9S3elDqW/Wd9YI1vXpO/ac+0yOaDD/chHd0Wo7axnvivTk+h9fnnHJujfYz
UtwT7401r7XvS014UXpK96XwpPSa/vNsaj7Wy9Ej0CtQT+p9WeNZ6+kh6OVM
qfnb/PxG1ec9a/5Wn+oh9avx3bh9Bu09+tcy1r1NzCm9Vue8c+3mElpIzan2
vLVEbWRNZG10S4nayJrA2kDNpDacMYeWuqmEVlXDqmW9PhNrvvJ6OWcn1Hji
9XKN6P26pg+omlBtuDBtkRJrQq/RNe1acQ2Nr/HKtTWhxL3zHqrNJ8GbNVHT
WdtNLKGV1eBq8etLaHU1vlp/dInayxrKWmpMidrHmszaTM27EPhXCi2sRvP6
zFG1220ltJs1p7Xn7SVqS2s2a7cb4TWa0Pxqf9e03rIxxbV+Q4laQE2vtr8D
3qWJGtVaNdXPX6xqH9eoXq0xxbXrGr2nzj/XrjFFL9YYZKwxBo6t8d/YaIy8
qOa/vjX+j6v50fhujLi3zu8RdX1PrvPT+boj728Hzw7fzdhe8NwprtHjOWpM
57v6zdrTGK2XbI1n7LZmfTxFDLKWVc/rjRnjtmlFzftYihhpLXxuiVrGmtTa
1Jis92KNaKxWg42q+Vhtpga7ta4/tZk5Re/fmG2uMebpZRtzjYXGyEk1Xg2p
69X4pR4dWtfzVTXfGc/MEVfW/OX6tkbVm7fGtXY1R+gFqREH1Hw8puY/8505
44qan80l5ozRNd+bS6x3rN3dX7E2P6/Etbams7YbVSKWGlP1Jt4qkcvNseba
N0t8l9+plni7hLY155v73ylxr73naiE1r1p3n6qF3y2R+9VMaqdpJbT0fzkf
/qDEtfgvh8Pvw9c2ofHUervW7zu8avH3Smg/NYXa4pMSc8k5ZSz91DXfRAw0
Fg6s33dirQ2mlNACajq13eMltJ6aUe34WAntqCZUGz5cQouqGdQOD5XQDuYs
c9eDJXKXGkOt8XoJraYGU4tNL3HvnQPmso1aoU8eTOEPfMz4HU3kHHPPhyVi
mzFOrfRRiVykRlerX15ibVjzWfu5Rryf36RYO5eWqM2t2azdtmjF2ngiRXze
vBVrwTXj2tmqFfn5qRT+0matyM+uGdfOhSVqLWsya7ONW1GfPJTC79mkFbnI
NepavaBE7WZNaW25ZSv0wJMp/KrzS+Rac6615qatWNvWaM7PrVuR+9UA+l/G
hHbmqhSxYnyJ/KBHolcyrkStb01mbXZRidrMmtHa8ZISud6cb615WYlaWQ9D
L0OPoGMTXqDewRUlcp850Fr2yhK5zxxo7XpdiVxvztfLubpE7WtNbG08tkSt
ao1qrXpNCe/RGtla+aoStbM1sbXxtfBSTXiUepVe04dqftdbuynHHv+0JrxB
PVS91P7e4xK/2d8+Hf6ixJ6D/s86TfiXF5cY+4T2Zf089YKe+TfONfjjJjx/
/Uc9EL2Qz2hfl/CUfbbDPQy9Zu/J1Ko3/D3Wg+Ymc5T1nh65z1q4p6F3rmfv
XnTvJrz8c3jtmyaeWfD79dx9VkU/0nrS+sL6x/rGekpPz3rKesh6Q8/Oteka
tV7R43MvyXpL70+P0Pry+CbqL/d4fNbDPQT3ftzTca/YPQT3etzzcO9Dj9u9
IPfE3BvTY5+nxB6JeyX6we4lOYedy64ZvVjrPetj61vrNfdA9I/1i9XP7gm5
N69f7F6Rz+z47I57TB1L7AnpJ+uHulfknrZaSE2kP+szQz475B5VhxL6XG1g
DjeX+0yNz9a4p9WpxBp2LbuG9I7dU/JZAfdAf6kazVjgmlS7uQej3t+zCd9N
T9NnJawZ9DqNUcYq17zeps/k+GxOP9dciT0F9/rdE3WvQQ/UZy+Mcf95o63Y
23EPwr0C9yx8dsg9M/cyfAbIZ4Hco+tSwnN079J6XC/SPQT3EvY25pXwYN0b
tF61XtYDdi9Uz1Jv2Hraetb61nrXPSKfzXCP170j/X21pJpSP///uqK9fg==

           "]], Polygon3DBox[CompressedData["
1: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
A3eyV9kudpBNYf/NJP9DHo/1yLiM+A0hPNI8
           "]]},
         Annotation[#, "Charting`Private`Tag$3417#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0jkvBVEYgOGxr9cS0RINUVCKglIUVCIKOqKgIBEFpULodPwCWiL0Ejr7
cu1rRMTW2NfwnETxznMy92TmO5lb0t7b1JMQRdGwXhXWj7rUbGIU5XGBxVxn
JU9Zywc28pttzE6Kopi6rcs5yGqOsp4TbOEUOznPfi7xntd817aewz0tG2iH
K4xzlbtc416Yifvc4AE3uaXD8BwecYfHjPOEuzzlHs+4z3NOO8cNP3Shl3BG
jZlti0NcZB/n2MFJNnOcdRxhFQdYxlJ1WWewlZ/e0cA71vCYFeFcLOKtfVd8
U66ewl4VmjGHBYwxn9lhD7MYYyazmBHex3SmMkVp1klMDd843OOvkvUTftOX
jBHNuNz+/x/+AMQfSu8=
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{690, 1000, 473, 689, 1106, 912, 691, 1107, 913, 692, 1108, 
       914, 693, 1109, 915, 694, 1110, 916, 695, 1111, 1006, 1206, 696, 1112, 
       917, 697, 1113, 918, 698, 1114, 919, 699, 1115, 920, 700, 1116, 921, 
       701, 1117, 922, 702, 1308, 1001, 923, 1002}], 
      Line3DBox[{704, 1007, 1207, 703, 488, 705, 1118, 924, 706, 1119, 925, 
       707, 1120, 926, 708, 1121, 927, 709, 1122, 1008, 1208, 710, 1009, 1209,
        711, 1123, 928, 712, 1124, 929, 713, 1125, 930, 714, 1126, 931, 715, 
       1127, 932, 716, 1128, 933, 717}], 
      Line3DBox[{719, 1010, 1210, 718, 1011, 1211, 720, 504, 721, 1129, 934, 
       722, 1130, 935, 723, 1131, 936, 724, 1132, 1012, 1212, 725, 1013, 1213,
        726, 1014, 1214, 727, 512, 728, 1133, 937, 729, 1134, 938, 730, 1135, 
       939, 731, 1136, 940, 732}], 
      Line3DBox[{734, 1015, 1215, 733, 1016, 1216, 735, 1017, 1217, 736, 520, 
       737, 1137, 941, 738, 1138, 942, 739, 1139, 1018, 1218, 740, 1019, 1219,
        741, 1020, 1220, 742, 1021, 1221, 743, 528, 744, 1140, 943, 745, 1141,
        944, 746, 1142, 945, 747}], 
      Line3DBox[{749, 1022, 1222, 748, 1023, 1223, 750, 1024, 1224, 751, 1025,
        1225, 752, 536, 753, 1143, 946, 754, 1144, 1026, 1226, 755, 1027, 
       1227, 756, 1028, 1228, 757, 1029, 1229, 758, 1030, 1230, 759, 1031, 
       1231, 760, 1145, 947, 761, 1146, 948, 762}], 
      Line3DBox[{764, 1032, 1232, 763, 1033, 1233, 765, 1034, 1234, 766, 1035,
        1235, 767, 1036, 1236, 768, 552, 769, 1147, 1037, 1237, 770, 1038, 
       1238, 771, 1039, 1239, 772, 1040, 1240, 773, 1041, 1241, 774, 1042, 
       1242, 775, 560, 776, 1148, 949, 777}], 
      Line3DBox[{781, 1149, 950, 779, 1150, 951, 783, 1151, 952, 785, 1152, 
       953, 787, 1153, 954, 789, 1154, 955, 791, 1155, 569, 793, 1156, 956, 
       795, 1157, 957, 797, 1158, 958, 799, 1159, 959, 801, 1160, 960, 803, 
       1161, 961, 805, 1163, 963, 807}], 
      Line3DBox[{806, 962, 1162, 804, 1255, 1054, 802, 1254, 1053, 800, 1253, 
       1052, 798, 1252, 1051, 796, 1251, 1050, 794, 1250, 1049, 792, 1249, 
       568, 790, 1248, 1048, 788, 1247, 1047, 786, 1246, 1046, 784, 1245, 
       1045, 782, 1244, 1044, 778, 1243, 1043, 780}], 
      Line3DBox[{809, 1055, 1256, 808, 1164, 964, 810, 1165, 965, 811, 1166, 
       966, 812, 1167, 967, 813, 1168, 968, 814, 1169, 1056, 1257, 815, 585, 
       816, 1170, 969, 817, 1171, 970, 818, 1172, 971, 819, 1173, 972, 820, 
       1174, 973, 821, 1175, 974, 822}], 
      Line3DBox[{824, 1057, 1258, 823, 1058, 1259, 825, 1176, 975, 826, 1177, 
       976, 827, 1178, 977, 828, 1179, 978, 829, 1180, 1059, 1260, 830, 1060, 
       1261, 831, 601, 832, 1181, 979, 833, 1182, 980, 834, 1183, 981, 835, 
       1184, 982, 836, 1185, 983, 837}], 
      Line3DBox[{839, 1061, 1262, 838, 1062, 1263, 840, 609, 841, 1186, 984, 
       842, 1187, 985, 843, 1188, 986, 844, 1189, 1063, 1264, 845, 1064, 1265,
        846, 1065, 1266, 847, 617, 848, 1190, 987, 849, 1191, 988, 850, 1192, 
       989, 851, 1193, 990, 852}], 
      Line3DBox[{854, 1066, 1267, 853, 1067, 1268, 855, 1068, 1269, 856, 625, 
       857, 1194, 991, 858, 1195, 992, 859, 1196, 1069, 1270, 860, 1070, 1271,
        861, 1071, 1272, 862, 1072, 1273, 863, 633, 864, 1197, 993, 865, 1198,
        994, 866, 1199, 995, 867}], 
      Line3DBox[{869, 1073, 1274, 868, 1074, 1275, 870, 1075, 1276, 871, 1076,
        1277, 872, 641, 873, 1200, 996, 874, 1201, 1077, 1278, 875, 1078, 
       1279, 876, 1079, 1280, 877, 1080, 1281, 878, 1081, 1282, 879, 649, 880,
        1202, 997, 881, 1203, 998, 882}], 
      Line3DBox[{884, 1082, 1283, 883, 1083, 1284, 885, 1084, 1285, 886, 1085,
        1286, 887, 1086, 1287, 888, 657, 889, 1204, 1087, 1288, 890, 1088, 
       1289, 891, 1089, 1290, 892, 1090, 1291, 893, 1091, 1292, 894, 1092, 
       1293, 895, 665, 896, 1205, 999, 897}], 
      Line3DBox[{911, 1005, 685, 910, 1307, 1104, 909, 1306, 1103, 908, 1305, 
       1102, 907, 1304, 1101, 906, 1303, 1100, 905, 1302, 1099, 904, 1301, 
       1300, 1098, 903, 1299, 1097, 902, 1298, 1096, 901, 1297, 1095, 900, 
       1296, 1094, 899, 1295, 1093, 898, 1105, 1294, 1003, 1004}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{251, 474, 1106, 252, 488, 280, 1211, 503, 295, 1216, 518, 
       310, 1223, 533, 325, 1233, 548, 340, 1244, 563, 1150, 355, 578, 1164, 
       370, 1259, 593, 385, 1263, 608, 400, 1268, 623, 415, 1275, 638, 430, 
       1284, 653, 445, 1295, 668, 460}], 
      Line3DBox[{253, 475, 1107, 254, 489, 1118, 281, 504, 296, 1217, 519, 
       311, 1224, 534, 326, 1234, 549, 341, 1245, 564, 1151, 356, 579, 1165, 
       371, 594, 1176, 386, 609, 401, 1269, 624, 416, 1276, 639, 431, 1285, 
       654, 446, 1296, 669, 461}], 
      Line3DBox[{255, 476, 1108, 256, 490, 1119, 282, 505, 1129, 297, 520, 
       312, 1225, 535, 327, 1235, 550, 342, 1246, 565, 1152, 357, 580, 1166, 
       372, 595, 1177, 387, 610, 1186, 402, 625, 417, 1277, 640, 432, 1286, 
       655, 447, 1297, 670, 462}], 
      Line3DBox[{257, 477, 1109, 258, 491, 1120, 283, 506, 1130, 298, 521, 
       1137, 313, 536, 328, 1236, 551, 343, 1247, 566, 1153, 358, 581, 1167, 
       373, 596, 1178, 388, 611, 1187, 403, 626, 1194, 418, 641, 433, 1287, 
       656, 448, 1298, 671, 463}], 
      Line3DBox[{259, 478, 1110, 260, 492, 1121, 284, 507, 1131, 299, 522, 
       1138, 314, 537, 1143, 329, 552, 344, 1248, 567, 1154, 359, 582, 1168, 
       374, 597, 1179, 389, 612, 1188, 404, 627, 1195, 419, 642, 1200, 434, 
       657, 449, 1299, 672, 464}], 
      Line3DBox[{261, 479, 1111, 263, 493, 1122, 285, 508, 1132, 300, 523, 
       1139, 315, 538, 1144, 330, 553, 1147, 345, 568, 1155, 360, 583, 1169, 
       375, 598, 1180, 390, 613, 1189, 405, 628, 1196, 420, 643, 1201, 435, 
       658, 1204, 450, 1300, 673, 465}], 
      Line3DBox[{265, 481, 1112, 266, 1209, 495, 287, 1213, 510, 302, 1219, 
       525, 317, 1227, 540, 332, 1238, 555, 347, 1250, 570, 1156, 362, 585, 
       377, 1261, 600, 392, 1265, 615, 407, 1271, 630, 422, 1279, 645, 437, 
       1289, 660, 452, 1302, 675, 467}], 
      Line3DBox[{267, 482, 1113, 268, 496, 1123, 288, 1214, 511, 303, 1220, 
       526, 318, 1228, 541, 333, 1239, 556, 348, 1251, 571, 1157, 363, 586, 
       1170, 378, 601, 393, 1266, 616, 408, 1272, 631, 423, 1280, 646, 438, 
       1290, 661, 453, 1303, 676, 468}], 
      Line3DBox[{269, 483, 1114, 270, 497, 1124, 289, 512, 304, 1221, 527, 
       319, 1229, 542, 334, 1240, 557, 349, 1252, 572, 1158, 364, 587, 1171, 
       379, 602, 1181, 394, 617, 409, 1273, 632, 424, 1281, 647, 439, 1291, 
       662, 454, 1304, 677, 469}], 
      Line3DBox[{271, 484, 1115, 272, 498, 1125, 290, 513, 1133, 305, 528, 
       320, 1230, 543, 335, 1241, 558, 350, 1253, 573, 1159, 365, 588, 1172, 
       380, 603, 1182, 395, 618, 1190, 410, 633, 425, 1282, 648, 440, 1292, 
       663, 455, 1305, 678, 470}], 
      Line3DBox[{273, 485, 1116, 274, 499, 1126, 291, 514, 1134, 306, 529, 
       1140, 321, 1231, 544, 336, 1242, 559, 351, 1254, 574, 1160, 366, 589, 
       1173, 381, 604, 1183, 396, 619, 1191, 411, 634, 1197, 426, 649, 441, 
       1293, 664, 456, 1306, 679, 471}], 
      Line3DBox[{275, 486, 1117, 276, 500, 1127, 292, 515, 1135, 307, 530, 
       1141, 322, 545, 1145, 337, 560, 352, 1255, 575, 1161, 367, 590, 1174, 
       382, 605, 1184, 397, 620, 1192, 412, 635, 1198, 427, 650, 1202, 442, 
       665, 457, 1307, 680, 472}], 
      Line3DBox[{277, 682, 1308, 683, 278, 501, 1128, 293, 516, 1136, 308, 
       531, 1142, 323, 546, 1146, 338, 561, 1148, 353, 576, 1162, 1163, 368, 
       591, 1175, 383, 606, 1185, 398, 621, 1193, 413, 636, 1199, 428, 651, 
       1203, 443, 666, 1205, 458, 685, 686, 687}], 
      Line3DBox[{459, 667, 684, 1294, 444, 652, 1283, 429, 637, 1274, 414, 
       622, 1267, 399, 607, 1262, 384, 592, 1258, 369, 577, 1256, 354, 1149, 
       562, 1243, 339, 547, 1232, 324, 532, 1222, 309, 517, 1215, 294, 502, 
       1210, 279, 487, 1207, 250, 473, 681, 688}], 
      Line3DBox[{466, 674, 1301, 451, 659, 1288, 436, 644, 1278, 421, 629, 
       1270, 406, 614, 1264, 391, 599, 1260, 376, 584, 1257, 361, 569, 1249, 
       346, 554, 1237, 331, 539, 1226, 316, 524, 1218, 301, 509, 1212, 286, 
       494, 1208, 264, 480, 1206, 262}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
aNHA13lX+Udm4jmhTu4wvt5bt24GXxeeMlm4D8+1tgRuGID6Z6bfZXpepuNl
elOmP2W6U6aPZHpJppNkej6m72O6PqY/Y3o0pkNjeql/9VOdwPQ9TO/DdD5/
9Sh/9ClMl8L0E0xPwXQU7Lyfnf+zc392Ps3Oq9k5dejuhfzz1Mizz9IQNx/f
IUMQt+KGQ/zzv9hxS3sRt/wn3T/x2XHZuijUlwuXWDzBc9fI9TV8nbn0r/V8
PfpAD/NKPCfs17ixHs/vmB6a6aOZLprpd5mel+l4md6U6U+Z7pTpI5lekukk
mZ6P6fuYro/pz/7Vo3UD00sx/RTTTTF9D9P7MJ0P06MwfQrTpTD9BNNTMB0F
O+9n5//s3L+4/Ab//Pj4I9lwxG3+iGsiiNtoQ7eJiJNAx4MixE1Nu0IHn3fw
slNQ92/qobgQz7GXGy3l6//Z+R+7T8DOAe/dOsC/P1CSkbgbz2Pv+Ng147kq
u5/A7iuwewpMj8706UyXzs7D2PkYOxdjumqms2b6aqarZuc87HyH6YOZXpjp
hJk+mJ1XsHMKpnNlulemd2U6V6Z7Zf12ptdk+k2m22R6TdY/Zn1jpjv8V4f4
/+7v/2f/k+nnmJ6O6eiYfo7181gfj+nAmC6M6cGYDoz1pVg/iumZmL6J6ZqY
nonpm1hfhelymE6H6XOYLof1CVh/gOlLmN6E6UxYfcvqXVbnuqkN5+sezOoT
5qC/Sc999x79jdVprG5j9dq8RL8o9K9dX1O2o7+907Xnn+OzeoOd/7O649Se
Rv59mOEnKx+iziLFfv5nXN+vJyAM/Vbp7J0S1AV4NVzi369h9x/YfQh2D4Lp
9Zl+n+n2mb6c6c2ZzpzpoZk+mumimX6X6XmZjpfpTf/Vn3b/1UcyvSTTSTI9
H9P3MV0f058xPRrToTG9FNNPMd0U0/cwvQ/T+YQkK6bje/nOsw1B3AL1XvF1
LOMkn/L1FjeTQ/IQt5gHV+vwmTsqj39/aeirdXWoW1F8M34wxhkzO94ojM/2
DitFdSEDlkTM4N97YvdJ2P0Sdq+E3X9g9yHYPQim12f6fabbZ/pypjdnOnOm
h2b6aKaLZvrdf/W83X/1pkx/ynSnTB/J9JJMJ8n0fEzfx3R9TH/G9GhMh8b0
Ukw/xXRTyx6NjcH47H5tRBXiFnGyZCDitjlFYgLiZFZ/WhBxc4jbsxafjxZx
+PemTLJW1KAOaL3Si6GYNz2WreDfszq1eI8E6lZ8+vcIId9g93PYfR12T4fd
J2H3S9i9Enb/gd2HYPcgmF6f6feZbp/py5nenOnMmR76X3105//T7/7R8zId
L9ObMv0p050yfSTTSzKdJNPzMX0f0/Ux/RnTozEdmmy1Cl8vNTNtdSXidoEX
z9dNia08nYv8wmV+qDjiJjhChK/zOSg8OAn5c1Kf20PUVe3SsFyOPFAiZAr/
ftqoydI1qAOSHF3wAnkgu+/E7j+xe0/sfg67r8Pu6bD7JOx+CbtXwu4/sPsQ
7B4E0+sz/T7T7TN9+b96846/emimj2a6aKbfZXpepuNlelOmP2W6U6aPZHpJ
ppNkej6m72O6vpbsna+QP7f3lIUgbrbfovk6NKnGU76Ik/JRtTLEbaw85zk+
847de4j1YO0Fs1OoU2vsGeuGdc2p5atGYz2458GJI6ir4m5YYIB1Dbs/xu6T
sXtk7L4Tu//E7j2x+znsvg67p8Puk7D7JexeCbv/wO5DsHsQTK//r36//a++
nOnNmc6c6aGZPprpopl+l+l5mY6X6U2Z/pTpTpk+kuklmU5S497ASKwHPy1e
4o24/TJJd0Hcthi9lUacXF9nHkDcYhverOHr0KQ8JbG/8b13QxHq/u7t9ebr
IXvL9u/C/obNONU41Km1hdjdxjp90b4Q/n28sJu2UajHlGgV/K1T7bTm3x/r
/tbJv0/2ScCPf49s25M3gP0N/Suq/PtPQafS+feePAxttbC/IWEcyr+vs/ZV
UST2H6zOfjXF/kZ1SBn/fsmW3qap2K9g9x/+vQ/RCqY8/3rsb5zJiOXr9+8f
s+br9idF+7lgf+OXVSFfb668ehdfZ55SVr0e+xtZ77T5+ujCebLWaI+edxhf
v5tfoWOJ9icWC/J1vOt1d/L1ptb25/j605kiM/i6U5+IQ+Owv5GqpfcOcVvs
+pavk7zb+Xgf4rRu5Tq+vu/8pIzr+GwtWHQL+3L20bP590THG+7j61H1/RZG
Yf9tUlL4SNSxzrXUfce/H5rgF4r9t4UR8e2oI65b7xiJ/avYYXb8e3cKZUH2
qOMWC+wVx37XBEvP29h/Sxt7RXDFVR6ok7Aa7I8FqZudxf7b7l0dZ/Aewy8p
d/79BXZv5N97JC3go8aTwv6b4tF4/j0etRHSO3G+WdOLauy/ZZ215t+jOvth
UhWuP2C61gDsv8VLwX60p+an7WC0p6xNJRH7b7pRkq1o/zbb/Y/Rfs+l4SnY
f3vSnzoc91tW2ZON+50aWMzXlX4XcObrTLNeHufrS78e2P8O+51HorTXYh90
748X3/HZKMZFvL6ylng8u/P19gHKF5w1arWlG+FFSt4R/ZYKcvvilPPCS7nk
4/JhZifEmmDfoDX7pm8qJuKZhlXSPVxyTfPqEFLRBK9N/W547cohR5QHKuii
3sdohYOLWzNomz8dE+qVTOJ3rUq40swjE76/txbsbAaV/6FvbMobpbzWIgvC
MmVOh97nEfurHoOnBjaDumKKqnxXIWyqFpkhOYlHFi2J7xYUbobEhanXGu6W
g3p4I8f/AJdEh4KVqXoTXDqZdvBefA08d4valRjGIcPCthSHGzXCp/M/e5aP
aQC3CSrKG/IbyCrtgRPwPIUY25Vjv9iQc8AZ+9accaP4felCjSUz/HlVZIqA
t+M3jQbiNzO1sXBEM2xacyd78/xSMtS68ovA1wYis2fWR6XBLbC9u1RDPOod
uUCmrrW5wCF7p+uadBfT72UTLzy+KZVoxRsGxH3jkHkrEuIlLFrhxX/oD5v/
6A8bR6vud1lSBJkZc7Q26XJIZdTl+GV2LXBcqG7MmyUVsHnFfrfK4AYy2STY
VtK3GSYfX+e45HQtDD2zcJ93bT0pNZqWEe3WBPmWSp0h/g1w1P62HFe8nrSm
Z0twdzTCOUPjx6f9uDByfehwtT215Kf8pAFTVvHAt8zkZsTEcjLi3AmtBr06
EvhIcNjCma2wps+955J/AYlLDL1stbSeEJ2NJRW0KA94f/82Jz2NbL199ETW
k3rirpipMfJdG6i1v7numVIBVpfSrWYMriPabjuNH5e3gOOqsRtjVtfBiJpX
j2ZeqyHGQ2Q+WD+mPMH4SthPIQ5ob1IY4T2kmrxaob6lfm8T2D24tfrsAB58
sIr4dNWlkiR5+kSoTW+ES/vqdp9AHRjEuVyWryJyzfcFlxi2g2bhcp5bYSYx
Kry12K+/ihgqfwShaR3wacJ5K+mGOhDi6IutLS0nicTkqEZ+CxwQGn62YTsH
9AqWcI84lBGtzYlnAmxp/Z75TnuKHQ9KjGQa34woJduDhOMLBjZBd2Wlrcmn
t8Rfb6pdTEUJeaZbkDlmXScUX7im8TmUAy+vPUgZaFBIBvlKO/hubIGVx+d/
1U/iQfkt95mLZhSQafbT7eLymuAM12/wnU4ebB19skrnViZJCRj/fcLR5v/T
B1h6/b/9O3gCAin/1O9n/tbpKc3/t07v/luPpzT833pc/m/d7f5P3S39P+rr
d3/r4qB/6uIV/6P+vfS3zl36T5275m89697wf+vZ/1W3/q/6dP4fvZDrH72Q
yh+90P+rTwX+qU/tRkacdXvLIbOMxqgDLwHGrhFYWRvdCu84z8ssp9STD5Ma
j5vfeAGBzpmyirbtYKjuviOVU0EkbjZmFc1Lgganpe98xDrBZcaMRs19hcQv
YeOYpyeTgWs3+Uvzri6IP3HB6MLkNLJSdpbTNFsC+7tDSs1NumHsVYdlh3bl
wy+FrGOHTiXDhBmVYXlPu8DId7+i4cRysPvyaOzaBUlAHs5sj9jTCZUx2o1d
abWQtvi6Vg61x2+tyM6b5e3gEnTkl/5MDuQ0Rc37yk2AUT735j+e2gZ6O9e9
NKJ1TUCfikDezHio5LnfubOnBTTtY6NgfRPsnvZgTbxPLGzSFX3gltoEXcO6
BLar1pO2zg0JnbVvIfXBlj13U9vAeHzDYgfNSnLNqOfuRuscSDAR1Zlj0AEr
bwbLl4kUEUEFv823n+TC/aVp2cvudYKO2oEi0ep0kjdo7ZWFl/NAJMTK5N3V
LhDQlzFaFVMKHm/jX97Oz4HyPMGZNRS3xov3hRbvqwGo/hhYvSkbYq7uSuJd
bofazS3C6883QEu32hybhCxIuuIaENDbCnOcJEVGtnFh39zdZydKvQHd2BG6
Vuta4M1hn915pY0QZfCgcaNrBgwreN4xPKYJNB0FDlgZVJJ2ecH0ex7FYN/j
6rjSoB0GmJjX528vIoecerbfsqH1VPA2453nOqAm0Drtl3omaVPevMZeohQk
TsCvu0c64WzgmXkK+VWg7TXgye6xxWDlUXd6jHA7XIw5Fyv9lvLD2rHdgj8L
YWT3pbL7vq0Q7kbD/QIuFOkve2ZWVgBDc4bfnf6rGc47OTlPn9cIAmr7l8+O
zQeX+8Zzth9pgmx576xcjyJSk7RxyuglVdB54Z7f+JXtINQ5d0Op+huSHnl3
x88h1SB1uuyQmEwHKK4W1cnKrYMka9VXp6PLodi8NGBzXQtIF2W3OptyQLgr
L6dfn9ZtIWKrbZ2bwWb/htXP9/CgR9jxSEJbCdhmyOXnjaD11Miyq3acN0RC
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
M9U6
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, {0.5000001428571328, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4399601374726*^9, 3.5037308463040643`*^9, 
  3.630060774911489*^9, 3.6597988891189003`*^9, 
  3.7499752984023457`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMfQeYJVWZdu2pqntv9+TA5NRhZpgZNrCzwUhGMYOAYkQkq2QQRdAmScYA
CA2oiKBr1nYNmAUxoBgJLqKSBXT//Tf7b6r/fOF85zunTtW93TPjs/M81dN9
+3bdqlPfec/7vV84Lzjs1GOOPO6wU489/LB1zz75sBOPOfbwU9Y964ST7Uv5
H2WZWZVlf/TJdVlhv6+yLP1lTZZtywuvhC9FddRRRxWZfJupf/jCZ9RfvAK/
zYP3mcRrdL4yPh/+PPPz9X/fJ2dw7qH/ZefZkfeK5y637amGr312BucpE69N
7YDzePvuyX1/Wv3+Evl9m/2fo/7i4gGvrM3+Z36+/u97mzo3fZ8vOeaYY06x
74EjK+FrPuDJUgad+IB59vd7HXHEEXBkJXzdXh9wKt37xJFHHgnvgQO+X7gD
B+0k/LYbfyT+3n0/rc8vYxM6gd6pP0FfKbyOn7JgG+7yPPV5b6gPIhwdetn9
mfvo+QN+amrqnas+9XWJu8TzGHip9B/u7nd7fvjR9Vv2n5rrZ5rlcpnRL+bJ
FXrsOFt9xpFyrp7cVuEvK9eDmn1A/eFr0xc3Sy7EwEt4Pj9g+gSvwVfpU+Ry
4d9cP+Z++OCnXL67QZ3nVekL2Sm8nWhY3qdO8PL0CRbT9WWZeuCFfPd+dYJD
2q6gog+fOH7BRHAzpXynr+Xg9KmW+lMVVfXLMX06PEcncY/Xq/Me6MdU7Hi5
v0E4p7WN6ldjFZ/VvTPryGe8V51v//R1rghPaeCM9oonTpCrhXd25ZT6El8o
d7CKL5Z/gxdXtJzK3xf+dJ066fPS17mGh4vPjufG26fXJvjsmZ8T+qTPobsU
y5VPDk77Kzpth0/LF47vHZLTXqtO+6z0tXrrW504fZdPX/0aH50/fXRpk+qD
9k5/UMf/Web+rWi6I/xEui35DH9b+tP2TH/aeOLM+AjKxJmH5czXqDPvlj7z
hqYzd/nMibU7GKur1Wc8I/w9vmfnxAegfQ7xB0zduI+Mor90fdqnpi99U9OZ
h92ZP7hPtXXrVnzbLDnze9SZ/zpxwZv5tcxNKDcieMF2lj6gzj0h546G5Sr1
KX+Rvv4teEnwDn/6InH62XLp+qR/Tn9dXxGi0/bgtB04rYGz0njJP770AAqv
UJ/yp+lL/5PEZ3T1Z0yc6BHcD/2V6sx/3HT90bnRDoeic8s9+LHRV705fdW7
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
CsOowJf+0CznaIBmR4Tx6gGiMYtr6so9WqG50wTNBrF57rSZMCMzUA9oiDhx
8LBIugjSSI5nTwttyxi4KZN2xwB3qpTrqfiV+tftW4/U8cbWsKchtdByO35x
vlhGHLuIgZv2dR2JKbaki8UcO47UTYtjH+H2tCaOrXXhK495auZSFq469qmB
Lvz9WBc+Oc2zSb6YV5MvHjhzvj33xYeM2HPHwnBrNX8iSufkC8WzYRZEm1kv
9ptZd9uCdO08u9A829fyd5rECxM06fQxOtjoy/iNrC36nLJBCxcm6OSUItlF
rAgbFIS7TRzbJz6YMGFsTSJhzNS04LWkBcPH/oRbckRlrUSzM+TZQn4TOWMj
cFt13M4wTysC7Q5gLGsOCNV8zofGHFxnGKWbBzjddQm33GWEyXeaTBft+JwL
Plf3YsHb+Zs8QmNynNthFQdmGjB9RztMA4MGmHapK2AEFqyrqSv28FAtMG25
wVdXtNZxMU4bTLkdnh5M2yv/qJ0bH9mpmjgoBdezthVj/whe+iP8bgeiNl7r
0/HnFbVctcs8VqMYgjsz7h5sg4H/uxjeIARb9JCldX4tMTyvh8T8ekq1Vm7i
1+86ymHzhuqKo5+q+XX17ePCGJ4kqvXj2G9Kc+wHzpqP19PcbSrJsYlizwoy
1f6DKTZC9WFjsRwCFn8Fqs2eY2fNJHtOP5LtgboWwOvqAJ6WmlFoNgDW2ZCw
a5m9dUkE3hv1UxbIht8l9vhZFUsikdoMkK0lkby2DQbxbPhFXE2BPBs+0Ukj
tOd2oqBiXbQdYx6hdCSGYGHFBRjJu39Uh+8QrUtBa5Mue5DXsAXpg5j58OAo
8uthafnu4nkXIcnOPG77lIiiRQTJ1f6KDN2igOB5adOeGRDsybftHCF3Q7FZ
D4XmybdsxMPxa0xgAwB3SrPC7a8MiNs+Lw2OVtzuCm5Xf2OPD1v8PnC4mnjx
MOL32gSTHR4QT4eSqO2r3XryXSnI6+s58M1Pwa89uJQ0aX4uAjG1P92AYoer
EG4L+zldGrD4vQd60uzS26ZDmlP9TzVpfseRTyXsXQU4XH3t6MGThkPOPHcw
znyGcGaizEsQhh9JJba1UOZ/uWhhmjIf1tIBa3E2OGUu67kUtW4wS1sifssE
hidP2EBQAJjh9iFyjBnO5WEYzpXYjAghGEM4Qefnr6zyAb8hH/BzMHzr6rQy
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
t1FIzQ5P2UEaz2xBiC4GIr+tcgtcT6nduKJelwOOs21MuY4ciM8dW+5ik40e
6S62gfAsSQZySRafGcviodKsxkAWh21sNCHMXU+nZXHsQJg2tsLKYnjMzB+f
ZeaPd3XexzYn6mPrNrJ4brzTozV94lZwkJlox1S5zhvDXK5rRPbD/HCfR0oT
eygnHIiaiGIB8xZwmXzhmnZRYKjjCLH7MeMH/H4TfmM9XJeNH6bjzP25i01d
hC/vDMbP6uozoHvMf/EdVtMN9pYR8DL/i54ih/ESkhuKZDtSkQR0B3YwOBL4
qrEdnLffTVyLS3U50FlsDt/Rls/Y0FZPNbRpB1jiwEesD8+Gm6HNGTjYBHfh
tmChHLckm/rLwHx1GzBfMjOYf9kezCNbBub/g7/Xg4Y26YUjc6O/VUVnMC3i
bgp/MrtjM/8HHvnqha2j8HJ3kEOzk9Q6AGJm08K9lENztr3Cucq0EKlc6m9T
qdzXtnCX6m+jwt1A2N9mTItHDJ2DfSD7E52D/raKwl1sWmgnxcx0jrRyUTpw
B2dG2A5jQ2cu3JE13Iw8izmJul2hdIbTz9TmJTKX+ykAJmGbsYvQee13g8zn
LrfCtlTAY5/GipJhNIbN5xYCo58zRFPb2n2ThZgWyEIyLZJ8tmPCuaeiqfPC
BuhP7m8j/Obk+tJ3E/IWlrzkSJAUpili5+EcjHvxvXtNDFcxE3ux91pLcVke
7VhOsDecK86OcIm9pa61/spmYmgkxq61kL1I3hzICzvwZjh/DDvdLngZbM5f
ki37q6H3T4ze319Qid7WlfvQ4hmhNxtVA2J2NXH/MS2F5+HDfttz2pto4vBH
2tVRT3VKuL87ko85y/5ZToPwOthdoTPRHfat2V3PKxLORITb/6gc/ehxG5Ti
VndSihuInYkcWJtNUNvaGRVta+emZpZ7YyKlgwNj4vIZ+tYK7xBrIa4Zdkm8
aZaFLTznLTC3JCGDuXOt7knLtJ0+Xk46awBlvQb29nAOmIWXPYlbS6OzfNFa
BND6DomyOyygTQ6UQGQ4zqIOPgPJ8xdTdnrD8zU7vscYFPdOdorcgpELxTNB
bpd2A6P27VX7Qhrc0IbgpjeEb427H/ANXPB86X6ohDAyOCvsPEd4Nd7PEQtf
BnAkfNvbETlW45rqRdhBOvh6z2WHWi0ux8HSPgs9sSR6QR24AHDgzbZCyTt9
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
\
\>"],ExpressionUUID->"51e02a96-f365-40cc-9294-f84f305e8531"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ParametricPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"10", " ", 
      RowBox[{"Sin", "[", "t", "]"}]}], ",", 
     RowBox[{"10", " ", 
      RowBox[{"Cos", "[", "t", "]"}]}], ",", "t"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"78712c29-dba1-4e24-b88b-f4584b06e51d"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Line3DBox[CompressedData["
1:eJwUm3c8V28Ux+299/b9fq+9RYvqnpCENFGSlSSrlNVUIkVGUkQZJVGUFKVw
HyMjRAjJJjt7r3735+Wvz+v7er7Pc85z3ud87oXqdO7waQY6OrptjHR05C/d
k8j150kyP3apbvwjfzB4et2JRds5cdcGZrvFwfUtbpf3zmqI1MubKObWlEu4
RVE3w/wZAr9R/c72Kan/qyi+RaHcxRFbzY78iEqcKS1fgEbqPDH5ORxtMbjT
bs6BrWfq8VfGU5d8N8j1UYQsM+UxbrSDn2dLShN+34QtNm4dA7VJ58h/Z5Jx
2UqHr8n3WnFqI/XUnTUMOnmSNtZan+GLo4+PfHHuxh2a9qi2LGPgsdPXc1E2
E5/f7jOiltGLT+xYUNFZwuB9c0/anGEW3rtLL7nhaT9+nX5u3G4BgxV3847p
M2/xwaUG8aA7Q/i47YlvtBkMjOruyy+05uLBu1MoLCcmcef29du2Qxg0rbrG
TskW4BEKXDMBL6fwGdUxba0BDPwqZbQm333GD9X3lu5JncbvSl5vaOzBQOJB
c81fw0I86Ma5GJvYWZw7ZydHyC8MnFSAcYyMl5vjyAv1gEVcTkPdL6kKg4As
zoKZ1lJ89aD5Fkfdf/jKVaexN08xYP3dp/hXthqPyovRPiJMBzFh/774xWHQ
hop8x4erca01f1mLaDoYMLiwk+c+Bq/S48vG3n3DrWVF9lSF0MP1ncExWbcw
sLhgYT9qWIv7ZainZ3kxgv81tpMZLhg8Yv/8aIjMR1Xe53SNrazw9qVIXhaG
gcCTKobp1kY8uPPG6+UEHjCIF7oRdJkGqd+Svcdkf+EGkQ03UsV4gd2Cqu/o
SYO5+DyV7nu/cIsbaVsnH/KCknl3JIcDDYzP1PQ3Lv/CHRVVDnzZywfVlpmJ
RUY0GGdctPzc1I7HWvH+ZcH54de5/FeZnDTYttNC725oB27Ip7ghICcIfT21
scVRVGh4u8agONmN3+mK+7SzTARYlJ4NUy9QIPCbmqm2fT/+zCfjh/QmaQj6
lzTy0loS3ry9+9tDYxQPdtKDcyel4XBXYreUsiSMCozeM3UcxdnLA6/63ZGG
kKOqm/evSICin+kupdhRfDCTLiutUxq4Sr619SZKQMoOztT+5VH8zxVrbZ9g
GZgsmJUc/i0OMdX3XGy+juFfcftnwWWyQKc6E9J0QAz8+qOm99r+xSNsqjVP
MpD7blAxTuIQhmTOmlv8e6ZwJG/WTidIhYfORz+ebxaCXTuv2N6wm8Inox45
XMKowOPGFMqTJAQdXqqbJ/2ncAfJGzbDhlT4oEpxfaMlBGKN4YO1r6bwjBXb
+wVBVGDu6z4WeUQQ7seb77vDN407tnz4w7JEBTMXk+/7ovnhlvx3nn+/p3G3
gjc7jyAa8FyLLdZv4oQz+I/H4xdm8fO2bM8Ea2hwZkRk01Y7TqB7tvD5d/gs
nsMc4JT+kwZ18E5japgD4pmkOr6lzeIjqYfvG4zSwMWce2vyOjtUVbvIZLbM
4m987GcP82PwjC/lB58cGygdXXt2Wm8O/2HbkkhYYZDW5nRllwsTDLsqZnXR
z+MDT3uyEuwwIBab9j3+ywg3aszr6iTm8duzBe+NyXup41ifW+bDCGIaFyYK
debxDruvx/h9Mfi6PX00PIgBTGYLtRJPz+MjkUjgXDQGYoS4AscTOsi8djjP
unoeV+OlO7qrGIM9hTdu3Ixaxt1irhU3RC/gh7Y8oaeWkdxpNzuOP17CGeaf
dROZCzjn5cGcpkoMWp5N+5Q8W8QTrKvo3pYu4K3DVkMZDRg0J9bXS+bN49+k
BA0j5hZwR5W/0fxknbPzKLxxa53GVV9mVO47togzvuVTuNiPwcPWRZ173VN4
Ofv34W3ei3i2lrNX2iAGDeXygez1k7itxyy7UtgiznGQe8V3HIObjj+es02M
4fe0d5mzFC7itU+27m6eJ3kx55K3oTSAj39paiiVXcI5/vjm5C6S6+RKs27Z
2ocHyyxPv9u2hJd9+JjqQHKwO5VRaveeHlzqpoxg6qElfEHDfUWF5KYNx/zI
t5I23Nz4rGXgrSV8mkXkxF6Ss6fh2nG+zmZ8ICPSz+vJEt75Y4uWDslloTAG
GWypAb/K+SHuZN4SPtgc7T9B6sG6OsfFFb7hQl6/Ppl/X8Kv4Cc1L5F81/b2
m886UYpnN2z80h9awlM1zayaSP2RfN6SIi0PN9aRW1WhW8axvMCxNVK/vavo
O4fOI7zr4T4pCfFlPL3p4cQ8qasR50Qd+NMIvyWvneyblvGkW0n2xaQuNz7j
wZFUQPCciLVbMl3GFXIpuBWp95W1mj14XE6kFxUEDp1axj/j4pFF5D637xS3
mTxVS+yidKe0XF3Gd71+c2OFjMOSlUZ73+pPwuuPcv+HN8v43bmZ5x9WMaDn
4+lm3NxO9Nj9YiupXsYtpvCszSsYiCz9+PfLs4s40nZHo25gGZfIy7l2j+wf
rMOZmXrn+oltNUOX/kis4LJ0ZWURZB53Z1JtODvHCMZ3L/hEQldwEf/XrwJH
MHDzfxtUufiX8FOx3EJ7toIfkk17tY28D/Fjk4yi7FPE8HMmW42iFdy4pUuS
rhuDqSgf3mnaDPH90amXxrMreMeh7Ok/dRh4uizulD26QMRfpe7yt1/FbQJb
v/FXk/3VsZlotF8kOBYaTt26vIqz/iwSZy7HQNx0ytfQfYm4du7G3aiHq3hI
rtgRgwIMUtteRh68uUI4OXU3v6xZxVk+oUmxVAzU7w1yV2RuEGomT93btq7h
m4xLiv6vR5ecHwJkPaISQfHH2/nW8VItbpGZkxj8Wv5q0bzIiHQjqor3qK7j
G+u6Ii6WGETnt1zOusyE0lkCBg4Zr+OOLq7nMwwx0Eg4VPs6kBndW27RdLu6
ji/ysNs/lsbg8cTex0W3WZFVd2xFwvA6Xi1xu9CokgaulRsnR0M50egrvrlV
tIGv91kMvpihAmWvQbd+Oj/ioAYrdm+jg03itlefD1Ch0HD+SGUXP6racV/z
+h46mNu1/65PCxWEuGgWCqIC6PaxpK3Sh+mg3Sjw4f0Ckp8hss9sQwUQQ/Sn
vSfc6eCKfb7Xl2tUMMlbDE88LYhWNsbPtD6lg7AyZDy5ToHbt3sZR8WE0ViH
ZUY9Az0YHSxdHy+ShYf2HDjFWgzVxisqo1p6OHVc6GvkCQlQ4Q58HSAigyL5
alRSHRjhMuN7+UVFCTBwPKR40lAGFWyVzrMg+7F1P+ITnBOHlwGY2sg5GTRg
dw5fu8II+rcq/5wJF4ekV6NV85UySD9b8Kh1HCMUeU4ce5QvBilmWw41XZRF
w/tsr3F/ZwQJ3suRUf9EwEumLVz8JAUZ3vpbf0mfCV4MrOu4OAhCx9SVn2qB
VLQ0z+t7WIQZDu9bfuBL9tm3c+Efn0dRESbtRI59zBCzur5hPiwA70IZjIaS
qcjC6MPdbG1mOMGmlW91TgDEkyKTmggqehFzLIltPzPoRflxjVzmB+dlivmO
dSo6rJlaWXyLGS7vcPlhzs8LHx2v8ih60VC26yYJ1WlmUCg0MRJgZQUVs1/m
FooYcvp9lGCsZYHOEzT1Y7dZYKy8VrxTC0Mcib2e3r9YQKZDONmOmQWQ9v3m
zXoYyrXxkuoeZIEyo7DaXAZm6BKrf2VkjiHG9tBLn+lZQZNWviVlhQEO/XGU
+emJobS2zzre5Hwz4cOumVqyjmfq396RnY6hwZ+UjK5nrGB5KPzhw4I1XNhN
p6s+C0ORD7OtzHNYoWSCg3v7u1WcrdeP70suhrZY6jF/LmKFhL1GTfHJy/jM
nYyB0SIMhTYfcXrYxgppjjmu3Jfm8Q/3zZPf/MCQUtNtKXMeNjAW6p78YDCK
H9d+uv55AkNuDePRBZfY4NyqoO9O1WH822qRhsM0hgSiL+GKoWzwde16703B
QVzui7Fm3SyGPh9gmYiNZYNcOm8Wq/5evDa39dbGIoY462XNzr9lg5niD6L9
D7vx4nLe2tJlDH2IzFruLCT1Z3pyJc6/cY0U3lqLVQzZWmzPMPvGBoH742+m
0jfhe4496itax1BW3WFmxT9sMG4tPOyXXIe3pu6eSdnA0NGI7vexM2xQ/miP
lbX+V5z92fprs38YWjP3cGKgY4frQjYDi9kFuOHhEW6S0yiNa5nvPDc7QHng
renqVDzGvVRkidT314YQnRLsYLJtR8m16GRiq9ufr8ukvhAu4GWmxA7fy+Nc
qNmfCJ+o/ZJlpJ5klixVsJkd2Jd5xiY+lxPxvbGiR0ndmFOtRsGQHV7FHv0s
IFtH7FeZ+5JF7nPi26dLsQfZQfrO4V0XShoJpVkDjjryXI/C9igx2LHD5ZWt
exVmW4iAG4tMeWsY2mXa2HLOnR0OH8LuIctuYu5iMFcHGbeo6jEds9vkPueu
JWznHCYKbwX13ibzolUlM0FfyA5a6rmH8mijxEb5GucfMo9toa+fnKtmhxdz
908PbR8ntG50cHGOY+jG3m1mnS3sIFCgH/ZaZ4oY/BiR++YPhhoqDmV8mmYH
vvbPf7vt5ggnzwcPLVsw5P012OmcIgfQovb57LaeJ7iSY1OhEUMyA8YsCzoc
0NVwMdPrwAKR9uiX8GodhmoY2F9dBQ5QkQ9IouFLhN6Ju45d5RiSh4jpu8c5
YOXP4L43kmvE6NH1SvscDP36/PBGWjgHZD+pe5faT48OS0m6Hb+Ood056Um/
JjlgZqpIm96DHTmLnRp/skBD/IlV7YafOCEDNlPT+9iRuzCdfsw4DRUXhF3/
Vs4JKnzqiZzHORDjzVm543005N5mTjv0gxO+DW5LF9zDiaI/RGra1tHQV+Ef
Z+1GOcHAWv/mkjg3+jims7w9lYYuRf9aCpDigkPbNOy4T/Ahh0s8TzyAhnpD
RkXe3OACz5pD99nbBNGji12lt09S0bvzXEfE9nHD9DTn4QEBIVQb0QwPzamo
NkHwUrYVN7DJOG0O2S+EUN5Uj7c+FQ2WSyQbOHND4M07SKRUCMWkVOx/JEZF
EuLKYx6B3HDxXfwjlwxhJD9m5ny/gYKCS/bcKsnjhr1TwnNKZ0XR76dfXlzf
SkFWAoHv3Wg8IL/zZ0xHvgQ64z+4KeSrNFp5Py1YtMoDDiPHZs9oU1DQtpaE
jUuiKPWK+6iWNR8IqdKFTRhS0D3pz4r3jEWRFmJfCj3JBywvqgzNrSioPnuz
freAKEJMGczdp/hg+UGs673LFFRzoH699ZUI6okYoESc54OXLc+CJUooaNWf
YkJrE0YyKSetR+7ywfa2wzV7jalIYf8f70glIZRQfqA8tZAPph+XVXzTpCHO
lELt4DQ+FMOtmyRA4wfbscjTAztoiMPvn0uVGx+iHW58fVaJH1p2DWxq2EdD
mdNVJ/u1+NC7R+cLkAY/8MlVtUqfoqFEzV1Z+CVe1CCb3eylzw/RxUztEQ9o
qGO7zWBIGjfi2aTAWXOUH1qXiS/pYzR0Yql7n8tfdhRmJRZwK5Qfbq/sEWcK
wJBH/YPhNwcZUFDy2qG5cX5ImaebZg8k639n+7u4Vnp0UOuTt+osP2zlOp/f
E4KhmXfaZyzt6JFMycX7Tsv8ELupoYruAYZYDe8qH3WnQ5/7RhsamAVg9OT+
4+yvMdTKo2e5wbJOzMj/OpAtIwAxHnt4tMj6yW9pcJY4MU84ZeXtdzkoAHRe
1es7yXr7vqMt+KnzHKG109vzqZUAVGX4sUm1Y+ijt6nrpOcssVGnFtFsKwC/
sTOmJr0Yik3VqWK7MU0kTD6vNTgrANOZ2XEOfzHUYcVilW40RjRuijGTDRKA
rZP2PhOTGHJerDCUtBwhUsr2u1vdEQAdi80a5jMYurC6zHrk9BDhdZQ9PCKS
XL+mn+a/gKFbIfuqpEP6CQ6/G99WEwRAtnPlXhjJKS6P1jPGIa3E7gKvfW3v
BeBFjmHtI5JrzyH006nnTQSPqcpZ3s8CUC6aX3mB5ODFXotdz4PqiY72P3eM
kQDsmN11TYbkpqt+7OKm4krilXtqxrUKMj45+NhjUvfd8PkiMEsQAWu2VR9q
BWB1fyTfH1JvZjvofOFsDmEcITY81igAmid9x8nBAMnZ8mXsn3cnhGSaWbFf
AiDC/OH6KKlrL7www49m431vohRtugXAneF6ZRqpM5RsHKzQKcZzcLO99/8I
ALy8UqlB6gb7rdhiuirw6w0sZ6rGBMDpV3Xgnf85rrWaw/78O27uWHr737QA
mFsIUF6TcRjT+akWLNyKDwdtr/DcEIDP1AguH7KfLcjy/tVdbMfzBef/pDEJ
wlD88c9cKyTvGoxj0tq68OC0HOYODkGI5hk9k03G+Wm79N39+/txSoXiHlNR
QUjzbjyXN4ehkAecj0N3/sEnrPqdb0oLAoOG5b4IMl8h7NkOkepDeOFQUvAn
TBAanS/cziLzzmKi5jjJNYYfYxcpV9ASBDMN39ZM8p5cZ2VW3OU8jUebMxky
7iPnrabY8nREzjEqn3KtRJdxuqYeKLwsCM+j2Hh2fyHz6x+4N5G6ggePFKde
vikIuY77DJ7nkX39p+Ojh6qrODvdU4btdwRhu2zWayITQyYDJx8k71rHBdSP
l+c9FAQkJOxqE4Whnk+q+07k0IF86I+9b3MEId5XASkdxBBznI+QVjUTmOqX
WjwbFIRQ9biexgwa2lk7dOBNDRc8eP7c9s5hIWj8ZGn/8AkN+XTs87UhOSv2
+WaR8XEhuOj9dpEWTUMzdqO27yu44UmDvQyzgxCwW+xnTPGjoeGnRX2nEQ+k
r0v23PQUghfu8Xfld9PQZ+fg200kBz9Zx566ckcIqn+sHLlRS0UTW7a80Nkl
AB2cIW5exULgbvGdeFZEQdQX+/RL+4RBwccl4KiKMJgeeKRrnUVByX4rkYdF
RUBdr/tIspYw1LUUufQlUNDJnSVbs8xEQJfumOboFmGQWT6Rc82fgsx+DAUV
vBcBg3v7BgMNhUGj2uJ1rQYFfa6VWVC/KQp2aWpHX9sKg96Q/tZhVVnE6OD+
k5dfHB41z2gyRAnDQONdK/8oKeSz8mq7E70UMG8OHHo7KwwtGS8LOu6KoLEK
r+bWEAoMzMdZcRaJQP7xnR+dDomg9+tvZBbjKfBst87FzjIR+G5r0vBSTARV
UNwVBl9TwD7ie9TbbyIg5rx3xDtdGDFuehOz6QcF2uWYq4+0iYBRktSkKCGE
vHd/Wr0uToUfRy7oP5klP18WZoX/EUAtN/1+fEqhQvE7c4q6iihUXzSzvirI
g064hRU736FBnCf9qEWcKDgX3b87HMuNLujPcUg9pMHRgics1CRRuPvc59OG
MDfS1Th24GkqDQSYt2GzaaKAJ0r80BDlQpFm+prrBTSIfOJlG5crCiiV53aF
MAdyztIJ0BimQXDN7+/ddaLk/Hk5S5KZBU1XHU3W08PgvHL++/NMYvDtU51L
qOcqcfqB3O/NHzAw/eN2LcZbDDjo71Bvnl4hhLKuBraSvtP4GpZlFCAGFItv
/VonlwmHPQUduwkMDIQ72heui4FzvqtAsdkioS9cGXKe9LV6e/ZvO3FPDKqM
nE175GeJ1PgrvLq/MVB5oTmLvST9j0yj52/JGaI9l2FOnPTNCjuHqS3ZYhAk
gDc+558m2uqZlKv6MKD9TDl454MYLOad4D64/JdQGmg+cY305RLMAm/GS8Rg
7a3Y6+TUP4T9X4vRfXMYcJ6ec83rEINVLdaz3OH9xEKp0FFv0vezrWfFnekX
g56dS05GPr2Ef/94rcMSBkwPT1eIj4pBRGH9mOm9dqKdmWiJW8VgrbwFu74o
Bkl77cPzT7YQI8/z7br/fw5hG3VYa0MMuDhbr/VrNBLXur70T6xjMDe392Yf
kziErkwvfv5XQxz7+dOpYgODqXt0ObGc4mBapHrdIbWMOJOe8ev0PwzG5Qq6
jAXEgenqO8akkHzCxcfXuI7Uhwu9uZfFxGGvdPCnSUocUeAukfH/c5eBoyo7
XsuKw+WZ2XyP0Rd46leBjVlS7xnvczupIA7OOgJTd3O/4FnVfibvSb0jOPEx
r7o4tGgFzFZurcB96lZD9Ui9TepoVYmOOKTbS2ZxPfqOJ2+aK7pL7rP5A9fi
RT1xuLnXr7w4oxXnqH0sfIM8b+3AtaNte8XBj67FeWfrb3zq59oORTI+VVe3
3AqzEIdYn0N0Hxl68KCOXS6PljEoF5p8t8NSHH46fFM8oTWAv6i521A7j0Gh
kQNvqpM4bHPbWVF3ZxxnvpP9ImEMg6w0g29nr4lDcbwrTTtpAv/arHkpaBiD
jB2rS5LB4nBE/Pex5ONTeG5FfdCmPxikNb9X/B4mDu8Lm+5SvGbw3q/ydmOd
GDxhkg/ZFC8OW3yF+pNjF3BZuGZfUotBhDMrrOaKw+Ql45qMp4u4o+cS+3gl
BmFrhFd2gTj4dNeEnEtfwrPl+/d0l2JwOzbgqT0Sh5jMl+0qH1dwLd2dr2U/
YXC9fGSlrE4c+nxTudl+buBBT1y62FMw8JKrzbs3LA4Vwc9GxgIZoX/vWZ8H
pzGwGIhWlZGRgMXeb61zS4ygMvL8WvdJMp6qA822chLAxccnVufNBO0CS4fX
LDEwu7j1eqKKBGAfjeYHnZjBGN/zNmMPBiYMXQ1iWyXAnKmBPcWAFT5Gzjh/
p5F1R1H1EzwoAUacyveUFjnARbBywqGZBpttvyK2IAnITLmZbivCD3kwMHxY
mAZSzcuWs38koLGf89H7ClEwfWlVfVSYAqNlTjeqsiXh8G/ZRbZ1UXgl1Bkq
RU8B2fttbpEfJKFxR3m0uI4Y6IxdrfD4JQtH7Swsj36RBLmT/gxuSWJw25sv
v/S2LBQvbVfpqSI/P3VF6qO3ODD69GZs7pSBGHX+5sV+SUjknMu/ziEJJ1xN
bz6/JA36cYSiooQUGN/7atRMJwMdbmwdGj4ScM9Nqj7kthSE7ZA+4aMuA15P
hnbr75aAkq0xBWYRUlD1aPNY0XEZ8A1vcFjjloAFJrY0/lgpcIvNv2b2TgbS
PC1EktPFwSF5NuBpqhSsvYAKA1tZ6Dxln+7XLAa6zd9oeYXkOmxFG4kHKaAm
/WnzLE0UOnde8huYkQJJ3eoh/gtUOPj+t7Z3lCBo8LdIG9pLQ4DWT6r3TSp0
v/k8oXNMEAYjBoMenpaG+DM9qWnRVBCU/HC8giIITzkWh4bcpSHE/0ZH6Bsq
yDTrO9u+EwAuJrHcewHScMqySlN/mAqV/45G2Dbww+jCceOW+9Lwyp/VZssR
GvzzVclVYuGDFx2dXmfLye/lsrVIYsHgfh98LctkA6mMP0SUsgzIf7q2aQ8f
Bt58NxtParNBs9yCXJ+mDMRuORNQKI4Bc2Gi95dPrBCeyhKmu0UGUK9PjaQa
Bu2vDCUrKlhgJUHx6C8DGQjIqRdOtMDg+JLFZr0eJmiLODtMs5UBOw8NurAw
DPJjCbYMdnp4cPEvX36kDMw5vJ1Wu49BXP/LVPZIOjCdWvdleygDT66vMiTH
YTD4+l7PbgE6YPDk+W2TKAPGo2x7pp5jcKr+t6mf7gZ+3kXzxb+XMjDoZvJs
z2cMBJ7fPfvn4Apucdx7+74SGShuGtXIIevZr+HSC67rMzgHPu/YMSsDjhPX
fO70YvB6u7pKhec0HrBbiS1/RQZ4173cFUgu9MVZ3zc/OYUPGp54E0UvCwoO
Lw3fk3zpwtXYHvuP46UmJSsGvLLwpeUT/7MJDHYssCTHW47iWmZzKVIissBe
XOhmNU3y9z3viqnOMJ60X3HvgpQsjFpEJPGS/aOW25yl928/fvlwxINMFVmQ
fhLoLkT2D35h410/vvXiw0fR9lvasjBV/fZlF8nBr5eyoiQOdONW1rPdtttk
Ye+k7/EykqccL99XMZa04Jtsj6vxGcvC0MOoik6yfxA9H5kjLzXiKXb3GkfM
ZcEgduL+/8/Df67mKpafqsV5HImAsiOykHafocCJ5LiU1BqdeHMZfvXUjMxT
G1kI1x7a/n//KOkVcjlzJx8fOy3/1c9RFvTEnQXXSb2lfFejW+pD3Mb1mPtB
V1kwmh03miH1x/GMubfOvSSq3ML5Vc7Jgrp36vcsUt8X/putsLWQ2OJZ/JHR
TxZ4zPa/U/u/P2H1DTmrFUTauemTnVfJ9Xe6TniT+xR3894M4fWEwAU5po+3
ZGGRUeTOVfJcCccuhm/nbiZu+Fi/ig4jz9Um1Nm7goHVeSGft4kdhO2logXD
eFnIlWRP2UHGbciw/+x27x7i25WpJ9LJssB/t+W77SIGqYG9PW6xfcS265jh
4gtZ4Ah4cfvvDAa3xLL45doHCaFbd6NevZcFu94d2KEhDIpVOTBwmiRq71kq
8dfLwu5D55na+jGwKUi2+lQyRehF3fk++lMWnpTrRcv1kOc9UeMn2zhNZNz/
4lPeIQtjl1418bRhsPfsgbr9M7NE8CNqif+oLFhfHjul/BWDg/JnHjdpLhEy
DQtqkwwUqGGKyrgVS9ajR7GKiwUdavlV+tVShgIxtBkXazayT2ssbPWNZUN7
/9os0iwpYBcmd3donQb8qr+YjgixoyShW02BxyjgEv19ZfcsDbb5xIyNPGBH
c/qv33acoIC8dcgeq04a3FSJdN4Zw4FSwlbPPHKiQEaj1/C/NzSY3OdefiSc
C60oPmljP08Bi9O19T4mNJjmvhHKuJUPZTl1FkyFUYBzI7Fs4igVsJKaY3QL
goivzf5qMaKAztbT928VSoPlC+XXfUgCtZU609uoUYFJrGGza4w0mI3HHHKZ
lEBTu9slrmlS4eT3E2JMrtIw+7wr96W0JGItOaCbsokKNR0ft58SkIbE9Lvd
jpck0RZC78zgNio51529+e2UFLxzNol7qS6FYr/w1V3YQ4Xciu71xGUJ+LQ3
xUbsrjQ68KEwPtyOCr9pbF9OzYlCUAn3/DEmCqp4IaRVRHI2oGlIirVUFE6z
dufziFJQl1zYvp4HVLhzrY3jfJQohOTb9D1RpqD55/+cGOOoUKpiey1WWRQs
KkXQbgsKkns2+nDfUyr4iAxf3XxCBCbEQnMyHlJQUBJa/ZlJrs+tlrn3gxD0
t5y88lWKinbFeVROlFKBV6jJa89uftgQYbalcNJQ3p1yO8o8FVTMFLLqGPlB
Ps/kaK44DWWY1oiFLlFB17X2vVwFH+ylKs/yKtFQAldj499VKnRsnhrbbcoH
r3UVA9WNaOhGdLfxFwYazDp07HmcwgPWt/Xc/l6iIfP4FQ0rPhoobBT/vZXB
AceXD1rZ/6ahvpda/8JVaaCkz6wqqsQBn8+xRD4epKGfZ7cWzGjQ4MNvWqnd
S3Y48euL5NNpGqpS3XXx+CYaTJj/qud7wQaFcTaf/7FgKPut2ZDCdhqIeI0e
VX7KAmdO3X+rqYmhgI8u9SXGNFB5Kzrie5MB9Gqquqm+GOKpfJK86EiDG4zZ
axtr9JCuxz7YfxVD9HefH7c7TYNLzT3sRwPoIfxdcpRnMIbmTF8JfnWlQRFn
IJ+rFx28d9nl1xpD+vvvH0NjztHA2kizsSxnDXfSFLJmzMZQWkvjOfVrNPDZ
Enq9a98cLrXfM+d1C4b0BtngVDwNzh6ja/ylP4vrYnkS3e0YUs/gXalOpMFF
jdHgp+ozuOLcLbFfXRiiuIl80Eom64EYwcP4pvCtCydSKYOkn57AlDZekP7p
R8mRpxlDeEZn5/e1aQw1zO/ie/yeBgEFrIpf7/7Bz658+XhqDkNlH/d8+5dP
g3HXhLdv3Prx7Pwjo9ELGMq/ZB7s8pkGjQ20tmLrLlyfWVlo1wqGEtePL+mU
0KBhn/3302Lt+EZ8OV3xKoYiCYfchHLye+lbzErafuLzf39SmdYxdOPmGQ/6
KhqMip9hjXz3DQ/TMJrt28CQC7Nvz/fvNGAafxHuV1KKJ4xJm1z8hyEJ2erW
1R9kHj+JRdg/y8M5zo5p/yD179uk65V+0uBlWnaXJ0scrtFLvCX9Ago67F1h
2UaDF/RLu712pRHp2eol86S+xeNrUdBvGrS2ftKd+ldA+JkYuxSS+miIeN7b
LhpkOTV16kyVEz/NEpIP/v88P9kzq6OXBhInDFv1emqJivPbvXLJfR4uKHnO
/ocGvtNVN9fONBJn7uU29ZLnYmkSTtxC+s437Bpa2fYtBNM9wcauNQx9Hj8b
c2qMBs03hfzkrduJsXMj7plkfLxYiu9GT9BAlVnF+Rmtl1iXen795RKGWra7
BIzO0aBQCDv2gGeEuHq/O3bvFIZepORbJtFjsK3uIWWDbYzw8PvX/e4vho59
5thfw4RBYvkyIcf4l6jtbxkfGcUQV7Od0RIryWXP+WqTK1NEUckW17IBDPmw
suoc5sHg1/iEyFuPOcJwWqtairxvRl7WfCySGFx2fBO1ec8aEW7POOH9FkMD
+kvfPHVJX5I5Fi6LrxOfFI/mFmZiKN7SvDRhKwZaBtU1xLYNIrjjXf/P5xgy
P5dSUEn6bO38rpR7wnTIczq2+mIchj48M8mg7sYgdzojZ56ZATm6GDvak3UU
zP445Od+DB55ubHNdzKjeB/qYeadGJJr3Q47z2DQHVBgt92JG/3YXU5HS6Ch
Uxeu5HElYLAae9x25Cc3uiFYQnkSSUNbNnXlKT/F4KjeAZ5D+3iQpPOpfSNB
NMQxA/nGpF+JGTihbajJi85Uuiqsu9FQjjfLxxvpGPgKqzN/u8KHGmq7DXm2
09Da+fuf5nIx2P7F9MGVHQLoX1YE33QtFT069/JLRw0GSj+T6d4nCqNvhYWf
05spqNqjqSSL7PeHtlcu3MyTRBk/c89K/JJCmmdUv5s7ykGLkWYN/6AkYrY4
YKvwSgp1nZU9l+0sB8VGf3gPi0ghzhjO6J7LUuiehyAfj6scGKh8LO/1lUJW
1hytjpJSaMR79VC9lxzwPnrOqqktjZ7E3G5PPyaJnl+t+Xnoqhy0x9oe5o6X
QedpoZZ55eJINMa90ypODvQefFnKv09BshMvdf+4iKB/ha/HHerkQNLbIv1u
GgX50QKV6zVE0BsiOaKkQQ4+ZeR3qn2koFDdyN+XFoSRbekDDVqzHMiyzAsP
/KYgo5qUFcEQYVRQeeV8f7scGAncWefFqGjZ1b7PI1kIXWw0mzs9LAdSOTPL
2hlUlGkV57+7WgANDY2tujHKQ+qm9J1292jowaHuHxrj3KheQI3Td7s82d+3
YfzxNAQMg2XS/txol6fnSOIOedgtpPb74XMasriQeKeMnhu9qXxTWYrLA33J
roNCn2nIquGe2DYRLhR5VTuYz1geEokLpn0DNKSrcdrujz4HMh/csv76sDyM
t6y3vNbG0MTsA6YjV1jQt4Ldk33u8rBPep//OT0MNb1b097OwIL0hG7VsZ+T
hxWBT1aMhhiyz67PH77DjF55lb/WuiAPlnwG1xOPYOiIoO3VjIdM6C621/V6
gDxwh//cFn4BQ++v8HDWZjEgkwjzXvEQedg7MK5y7CWG0ltsym1erBNfHayb
DibJQ0S7U4UIyf3x6YlEr+w1QvdL/Dv/VHlQitkVnJaLobvvBPX181aJNOH2
qKQ0eXiu5aulXkTuv/b4BTayxoO/2ZqPv5KHc/qJg9P1GHqyPn8sv2ueMNB1
+hr6UR4Mw16pKzVjiO622lrTwByRG/n8+ZvP8qBGE9+i3kbWbW7sl6LRWYI2
MnDzZ5E8+KmknHrejSE7/x+G/+anCfqkM7uwcnmIK5zbio9jyFOqk2NdaJxA
rJ4fixvk4UXrnojRCZIvB4ewIJlRQsvpzcM/TfJww/qmozPZVzheM9hXKA4T
KYWTF7la5cFWIMGrbB5D0reVipO3DxCB3he0bDrlYQp78iRjEUM2m5fTdhn0
ERM173lu9sjDBadGHdtlso+qHtDJMe0h7BTmx1/2y0PM+XMRGiRPeSZCnu3M
byN2/fbPnB+Rh5dmzSb7Sf76lFpbmFU0E282F4RK/ZWHjStn7fVIXovMaDrJ
tzQQ0tErpw2n5CFnU9/3eVJ3m4g1e11TTdwb1Tdym5WHrimPh4Ek94VNHpXW
jJYQa0bXaPcX5EH73vt3raS+5PrQJ1DwA+GRXEz3aZnUN/2mbZB6Vp4+pcXo
PtGx/K+ra00e7NyCh0l/gVQEburt6kvHzY/uLmKmUwBMtIYhn9QDVkWPWet8
wb+8CUpUY1QA/bFL4/r/v2+OsJR/h1XgLOaWEnEsCpA6KHgjlNynKh7B5pf9
HT80oviYnkMBXBxeEvHkeXvEn+WfT2zCn9xeEfXgVgDOtvHsc2R8Ig+wbfnb
3YoPYXWPWvgU4MFfYwsust80bHXnlZPrwDeVJAvvFiLXty5N8yLjvGXN0JVJ
twe/Znch9rWoAiiqPQsNJvPlmN1Os/QfwAUfi8bckFEAJvoLsttmMXTdF+d+
GT+I220Z5RujKkBH5/bgd2R/KrW34/pYMIxnNhVGWcorgF9qc+M82Yf0p/Z6
L62M4ziPU4SKmgJcemN09WsHOa+cS7ifWTiDu9/KutO8XQEC0M5zGeT9fD/J
tjFbM4vnUwJZ8Z3kuXa+vnqIvM+8HGuZTL/ncPriQ7czQQF+/taUWPhG3ods
ARePpQU8bmnh1vW9CrCPtW0sLA9DfFa47D/NVbzMc3egkqUC3L/QcH46EEPU
5PZxVEkPksdafK+eV4DfKppuOwMwVJd4+nW3OQO4zGfMDV5UgPRGk7iD58l6
n9hgqf7BAO9irlw85E+uk1c7UmuPocFZjtD5dkbYW0fxVriuADf6hSmUHeT3
Dpq7hY8yw0UDd4+GcAW4zBziYTJKQyZe75lPrLNDjRrdKbmXCvBN/VDSdWka
ao6aWUuY5YMr9CoHazsV4GAtpUGDl4asDa7dMtTih0EjzjaFXgVI+fJHL4uO
hg52f8374sEPB++M298cUIBBFV573n4qaj/L6Cf2hx/keN+e2zKmADSawpUr
L6gokq9j4nyTANRK6UalLCmAxUXaY34qFTUq9o5zpguBzLZd330EFSFn9l4U
14gs+sms/+iKjBiUeh02l96nCAttsYGh2hJIKVbDU0RfBjg6Lpt4fVCEnk7Z
GFkGCaRYadU5fEoGtvhnckd9VISB1q0sAY3i6PYcx+L5ezLgKNDW+PazIvgF
T/xxvyCOklj0ElM6ZOCTyeaT00gRjMWxsx5vxZDZZMvqhUuy4JI36e1TpwjA
6B63XUYUVfK0PTQ5TIGSSOfEy4OKsJSSEuvWKIjozRIiqPakb9ltMXFbTAmm
M/eVriYKogHJp1fveVEhrePq+5eSShBsE7lke1oQcdhUVNZeo0K9/+uAKhkl
6OepfXh/UQA1xnzprE2kgsIbNkYOeSVAl06aN4oLoAvpvtyVP6nQJFEmGqGt
BPd1mbqVrPiQa5UPQ8huGmjMbd39wFQJytt178+cYkc+mW3J+xZp8CedGpt8
lVzf67cprZ8NpQtbXJgh57bx4N5lxhtKcOV3sgeHExvyDu145MyFwYxTqr3r
LSXwk0T57Pas6Ny2t3ZpFAzoZKmq2mFK0HPHRPevJTNKrk2riDTGQCKOUloa
pwRqSvQZ0dvokcFhzb+LoaQvD5Wd+pOrBA4SL2IW3tOhhkpzBeUoDKxPd1ua
5iuB8nLceTVNOqRiZiJJe4SBnWHylzcFSvCYpX1d0nSDeO8AI27PMXD/JxPq
j5RAITYoIU16hcgeD+G0+oLBbX8ZGfbv5H7MRNscPk4TPTaxm4J7MCg8I22u
NqIEkntFDR9kThF6oakKygMYlO3pfBc9rgQbl6Ovq26dJNyfsvbFDmHwDXsq
Oj9Jfp53VkpjY5RYP65wB/3FoLVbqr9oQQkW/dOGt/aS/aNBxvHGFAZdRR0m
tBUlcHZboK6UDRKvmaY6WWYxGEh88ub2uhK8S9TahO70Ee/yc9PPLJLxtJa6
fIBJGTRztm1ucOshvrNzDe5exmB5c0f3e1Zl+DO4uur4uINoHebO6Vsh4yz0
ZI8YpzLs+sdt8sO2jZg4xk5nuoYBy8yJ11d5lOFZSOr1FdlmQv7j3A9/cs7j
bpDk7+VXhrbx2ZSmr/WEaLk7zeP/vz9989tvj7AyVLxj6LIyqyTeZ7+dUPhH
5uteYkemmDIopcRqaaQWEaKiL3UzSJ3qdsKAR0oZ9qsk/Mi1yiSeyXTNTJK6
kolkxgVZZchQijEKVLmPSzndViL7DGgq/OZupSnDkdxXufcgD+eh9//ZSOpb
mBIv6isog/7rzG0ykmW41lO1FU9S39Fn8ytZWRl+qr6hEg9rcPbj1XH15D4N
kQTOpK4MwlO8x9jYGvFXzUI5i+S5TJPa01y1lAE4DsK6UQseqXR1zyAZh4NX
EzjqdJThTM3mHIniLtxlJGJOhIyb3TaJlod6yqAetewufK0X3/94v8jxJQxO
i7Trr+xUhuyHj7TGEvpxyegjXx0XMPCYe5xqt1sZjD/2eA/9HMLHRP37KqYx
uJQj7qloogwf6DwNdshN4Sy9Uj09fzCIVRJnKrBUhhuvw/I0KdN4c9I69VEf
BrZ2Ci/7jymDmesjvSXJGXzMkDX8//docrE6pjy2yvCjYG/ShsAcXouxLYS1
YvDh3/7oU07KMHx2vSdxYxGPqdE0FK/AoLklSIrnnDJQ7nl+nan+h4uNjfz9
+xgDwZBx3VN3lIHrfC4TczQrWPYYBPZJkf6hlzjN/UUZliRr3GfY2KDyl8WS
nyAGNqJ1bNuKlaE0dDnm+U02cMn6mPybHQPa/vbXTiXKMBDB6Gp+gR3ynNzb
hRdokPtpbvpjpTJYDAntiDvICfKZ7MTBWtJXRylfd2pWBmaKuRIXHS+4X8+p
XDxHA/5dDx59/KsMXtnRPVv4BaHbprCvK5YK0QkulY4UFcjZd9Xh/V5BsC+Y
yl4PoYK/X9DFq5gKzHXZeNFfFwTWjPMGM35UsDucJBunoAJK/hLKfKOC4PYm
59jJY1RQ42jxr1VTgWLZ6qERQgieTbTuw8WpUH1pj9LW7Sowbc7sL+MkAps9
XjEefUABhuNyd7kOk7okP7v8NXE4b8q39rVJBnxF+0w/3lIBp/T8ef05GRit
WXB5aykONrEnv3MNqYBbfA3bFxlZUEusLjpLFQep9xyS7qMqoH0is6XXRBau
CMfUdoyLQfePj2eq/6rAk/qrX+WeyMKddpYzk0Fi4MwrQH97TgVaMOaI7bIU
0GAV4ml9LQpeYRU6/+hVYfzYQdmhTxQ4qoHHbpkWhqAbmo+npVRB+tRCl3kV
yfffYwFRFgKQ6UHv3HJYFVqealOSWqngjB1qixIQAI/wNzm6Vqpw7/3Tr4WD
VNATzJ+zbeEHjVcn1mOOq8LUKFeMIxMN2hR4+RxO8kPuUN6jAw6qoHWEIc1o
Jw2Cf42kSJ3lg0Int+oqT1XIU1mhWLygQQeHzXeeKS5oONak8eWOKsQh34QA
0u/mT6S5rU8xwZLRi+XkYlXIfMFVmWBJ1sPER8tofya4+iX5VnmJKiRHqG6J
OEnWZ7Htx6l1RqDblMA9Uq4KHePLEX0eGHTGCkbLcDACq2wUdVONKrA8D5Lc
fxcD/K1hxAEKPYgsB+wrb1UFuW2npwUKMMgS73kqG7aC62SbPx6eUgV50X2i
2sUYnDiWVMgbs4znY3sx7jlVELLxuyZThsHl6tmP6PESrpewO1t7URWWOK60
u9SSvl/c55dXxgJuELql5PK6KkyEa6VkdZB87yhc2VU2gx90pIxwcajB5AE1
TaY5sm5DfzU86P2DewnPbdPG1CBlYT6bn+TCUtSLzIaxfnwmfKLUUkENnp3i
6/9LcjyHUehwx3wv7sswYn5ZWQ2apg7ZCaxi8HShu3tQoAO/OtnpUKapBv9e
5j+xITnldqZLhV+hDadzaRsd2qQGyS5DN71JruW83Pbz37ZmPLij0Ydrixrg
Js5bOEk+Xh4OlnlWWIWHV1fesdyhBleqCukjST3cx441shfhPFAqcBlXAxeh
FfduUq+4yn4rhSsXj8kvfJJkoAZFckd8/v9/M9oTR+2yt0G4iPpHhbI9anCy
N0BigtTr7josuJW8IhKev8sZMlEDetoju9ekPkd35KiBaBEhI5Glx2WuBt3Z
B3ZvJXW2g25ZZS4VRGp0ernWATVg1ysvu0/y2iA2sOvN7u+EHGuqheVhNch1
uTf0mTyX0oXwbEWeJiLjWmLbJUs12Pzl85tcMg5H5Wu6TFZbCLW5h05Jx9Rg
JeW35CUybsGiCoe0h9uJHLfo8dITarCf/c6cN8nrhuADCfEOvcRH6xA6Lic1
kme6AkL/991To91eW0eICu1zSkleauT9MA24Sfbp4J1r3bFqY4RpxtncUm81
mLdsySwaxcD/yL8Kf+pfok7GeceQjxpol4uGPyPngLD4/CtaIVNEM+fxg1pX
1KBKwRiTbcEgxUf3j5THHNH/xyCgNFQNmP0Ay/yBwcqKwfFDl0k/m/z9mUq4
GrjuaUlZJu8bW9jby3vvLBApx2zqYiLV4GpBp9lEKQb2lXN3PJ4vEXY13rRT
D9XgyXUuVqUsDILauiyNWtaI9pyUWsbnaqC4yuEwfhGDbOeHreghA2q8skHZ
U6wG0sdQ/dFfNNDSyb8ZQ3CgUv7P1ZVzasAvXmD7s44Gr3JsTdtxTkSt2TOn
uaQGl5XhuGwpDa6sLNE1EZzoRvAPmfhVMp5dwcp8r2hQm5bq/qOYC+1aHL7o
yqAO+SNazGf9aRDpldr06xMP+twhKsPOpw5d86uJYmw0oF2nCx3fz49yX/pe
MFVVh7uCLtaPGKggtX3qwh92YfRsp7ZknaM6hDlHHP86TYEKV8XuIVwYlVpw
3Fp1VodNr19cre6hgMz5qtAPvsKoz75/VNlVHWpvLf44VEwBxjJrr1c9wggL
evj5tpc6nM2sv33GnwKRN7zrl9+LoLSK5eNwRR2KDsRUPC2TBWaHxqzcA2Lo
xYHS+Pex6mDy4/yPEm1pcn7dkOM4JokyHI+IJFSqQ3BzQd6vraLw6Ukru8Y+
CsoO8eU/o64B5Z5pBjNMovByd+g33RMUNL7jZFCIlgZsvxje3PhDBN5mO5QL
elKQ2pzR7HMdDZBNpS3/dRMBz3iJ/OPRFPTKSehnz3YNkMi69e9xgjCIdH8d
pvtJQRn4+3gbYw34ENB2ZduUILi3SN+Jt6KitOUpWQt7DbCKYKbIBfBBcLbu
sd7tNJTg6aGx+b4GOHDpfN6K84Hb4aiEZ8Y01C53NPlIrAY4rSf8wFj4QOXa
stvWIzQk3qHPdyFOA3Q/uuzlVeSFNH6WHb/daSjelHPmzVMNCOjav1niODeM
LrA5siXS0EPFV3lKrzQgSf+2qXAOO/BZe2j0TNFQdO/QDqkyDQhbnUr002aA
yFERu7ZLGAq1PGXGOK8B9gFy9Q+z6eEpxPB63cTQswMdtqeXNIDPw8IzSJke
wrPsp2vuYKhwn6VX5aoGPH71vrGaQgeL52Cm+xGGZnbuvR/OoAk/GDO9fSXW
cPuuA6UuORiyVVBtFeTTBCzkomcn7yo+lrS5Rj8fQ/6UtGFfQU3wvROzssi0
gh/Us/Zs+4KhGAnplVYRTaA/dvDTwYlF3JA9b6drBUb6LV7pJ9KaYGQjfGWg
aBZvEeX27SF9+abFGSc5VU1QVLr1QffdDJ7Hnpg5Rfr4/dPuPrc1NGHAk/vC
gbRp/PyzNLaqHgy5jg2EDGtrwu009X89gpO4TWaLRO0Qhp52t2RkbdOEjjgZ
G7f0QbyXhT1YaRZDbFWfJ3SNNaF8jifuRNgAPnjKcu38PIawUh26uH2aIDG/
l0fAqw/XPcdw/MYihnYVZvEvm2tCe9uHl3VnO3DXvZEZsysYupiTpFt0RBM+
qV8/R9Nqw++9irhv/f9zkVeixrLWmjB/EdFvWmjC3zJpmgWtYygjLdr6po0m
qAk/+3aKsRJ3PZiCqf3DUFd80OU9jpogR8Qlj0gV4R+rs3eS/EbLMavhL501
wSuxs+D86QxczLpNZprUhSJ8nrK7aoIDwaBzriuGsGE5VrFO6hqhf9+4u2vC
2ykp/77UPOLIMzbd/99f7Lvpguq8NKHl5PLT+T1lhMn7s67upO58pfuH5gVN
0F3ubi/9XEPcuJbkXLvx/3OXY/33fTUh+javQ4poI8G84akyR+7/8bkfc7MB
mrBNXT/y9aEWIuyPQWEfed4PZ01ZrK5qguf0YLdfeDsRdF9VOn4VQ/WnykQ/
BWrC34iinQvlXYQLY/tBITJuoyd3KEvcIvOef8XpfGI/EaMdZEDO7Uj2sIZ5
111NiHj/3fUuxzjxhvvx1P5xDIXpCcS4xGnC88l6xUfyE0Tq2fpgvREMvdAN
f16VoAn+jwwOK1CmiK5NxygTfzCENJjyVJI04XygruMBvRlCWLP8wasuDM3T
Flon0jRBKTc2SdRjgTi8Yf3kUh2GHDjbpf1zNUGhTvdib+kGUd5SUXMlBUOb
O1IzQ+s0Yd8k08qTz/8InfDpA4cSMMSn4br0tkETjO3l85mO06E97U+X5h9g
aDxQY29bkyZ0t2d+mj9Aj4xTjy5m3cZQGvZlQKldExp3TNpV6TOi98VFt5rO
knl0b5b9NqgJq269GXIcrCis7YC2oCKGVq4ymrHQaYE1KqQEXOJBi+ar2kvX
aOgX55YSE3EtkNx/4LbYBA/S5JESbPemoQrdx8MdElqgxy/4092JF901erEa
cZqGPpxc4/WW0oLypKQjgvJ8yEtx7aSHOcmNt6V2j2W1YF3QuXaQgx/Rjyx2
sojRkMmRA2sj8logIKj56OJ3AZR7JW+yPp2KPiW4bg3fpAW/0AF3S20RtGWs
XT/3OQXFKydm15lpwZbtTIOYmwjqcX4nmERydW7W+MWt/VqgzrD6NeeZCFKv
bT53/BoFHSieebL9gBa83uxEYRQURVqGcnG4FQWxHDG99+KwFtxYqzsaMCWK
rtfGTtYzU5Dv1WW3a8e1wCKg4p9okjjyc5NYPPtJBh2ut1ZSP6MFywnGSjOE
FNqxnR8S6yURl6/Q83tBWuB73sTUdlIKdW1WUDNMkkSuOEowCNaCRo7lL94y
0qjqVYRBgockKmP3iFkK0QLaopzrkyvSaPLFM91jbJLoclLZTee7WnB5qJyn
T1sGZabz78d2SKCRygsOO6K1YCSoavOXCFn0xf6vzuWHYqhC4of0+FMtuN7s
Ip/yj4IWrR9c9xMURoEoIt6sQAsOvTM8os9PRWFK06m72oXQaCeKXf5M5re7
3yadRkUrLsema1KEkNXqbPTLQi24uNdVZ8yIivZoajzdpi6E1LbY3GVEWpA+
Y1qjEkpF1VtHODwMBVHba4XLXyq0QGyrv/txBhoKcVk+UHuaH22KI06oNmtB
ZdY+2YONNKSaqZykzcOJBj2nZTgntaBCKnDkficN3WC7VRYXxYEOhctJFkxp
gd/d6stJwzTEObttJZePAxVmWIuemdGCnufBfqIbNFTHfUWXR4AdPegv4i2b
14Jvsn8iQxQw1HaCsiWQnxXB8TC6K2tawP1FXEzPk+T7T9qbO0yMKMEI6xtl
14Z3XgffO/3AkN018fGwsHliv6Tli29y2jC++s8l6CeG0qV5TrHFzBHxAxro
hII2OPv2nfX+hSFTsTM2Rx7PEgPZbL/HFbUBtxTdWkRyP7Jt+uiJl9PEVSjk
41XVBkri4Q2OvxjKvWVZMB40RmSdxq4e0dYGDckzW9MmMcTJMeaxJ2qEWNJY
fzSwSRuCskIDuWYwFGtx2tE+cYgwWmp556urDdLRJfKm//MoxUVvNLef+B0W
NhS3VRssbLcYXCJ55xt/hbucaCU4cqb/q+DKo6la37BuxpI4ODId55xdSrnc
vbcide3XmAhRhgwVIg1kKhnCLSnJ1CClqKhEIaQQe5dCV0mmg9zMGfohGXIQ
v+3fZ31rr+d9nnc97/q+td5t0/E3CkY3Ir0u0floVYxoJDc3knbBtd7eBApi
X1+EHqXztNTj9rYTLZ/I+wYPLi4ACocVi4Pl6fzVOXD4p/uyGnJ0ZURGggEK
8S8/HrxB46zItlJldYrc2uxQwTai6733XrNvaa+McyT9wNN8MioNa3tmjEKp
yUj/0t5BISfk3NN1vmT9YfFJgx0oJNybPLu0d1DUcrzBwfopoYR+k2gyRWEH
JiOytHfgPKCZm7CngvCaJdU8zFDoFOD7L82hnUIaILNYRRRV3jSaNkdBNbWm
+hzN/5aX+OYNTXWEQFzAgQsWKAxNrsHTaR1MON3/e6LHI1JU1l9/vBuFQQvC
0p3OfePSotisDV+IvkGBfF0bFLBbqU7TfITa5XUs3JXRSfxV0P5v7R4UNjJ9
nGJoncPPtgf7+/cS1UbxAqN2KDRutbCLmaT1TFbl1Hn2EwwJL8UIBxQYa7X2
OtB+LQr8ozflOEDs5+lvkXRE4cch5gl32ndTx7QnVwy+E9NHpo5hLihUlR9s
1uhGqDRHwzUGF8YJ1QRn3il3FKxktyTcIxFqMOpebIwZn4hq25i7eAKFj8Pp
JtdLEer680+rJvVnifr7gu8T/VAwybRLcHhO90n7dgXW1jlC6fjXXk4ACqPt
8aKW2QiVLHHE/pHqb6JwIUne6BQKyWJOKtNJCNVz/76caoQA9CD8qIthKDQk
lceaOiAU3L8mOWgpCPo+1U5SMSh8C+PHXLZCqA2ZmvrQIAizrUMmby+hUHi1
uzbFBKHOgMM+Z1shKDIUx4Iu030o8uzsCi2E2m7iaN/uKAyq8tai/yWgYJ2v
/cJWHKGEx9bveesmCuJv24uyklEInvhX+UEBl+p8mi8t5iEOrfKjqyAThY5q
QVU5HoeyeRNVkinDAN93MpQPicKwk9hDLykVKtyRI9yFykO6ktvaD1Mo8CcH
r5gPsaiWbSniIu7yoItv0nD7hUJeVcqrLopF1aY82zx6VR6adk5qz8ygEGbX
5YKcYFH9ObaCc5PyIBoUbb52HoUNnk9UZWuUqcrAJpNlRQrg+znbP+wPDM70
PioWOa5EZe0tV3FYpwQQPUGpr8Zgan/w480R8pRISkuNZAMLesaiXOI2YFC5
+q49bilPyfYpPXGcZUGYsOVhZCMGfcvrnMeV5Ckfg5337LgqwFSW8yvZhMFM
+EXn/JI11Ld9lKa7nwqYmT2O6tegz6dM9u+g5w73fbFwjxAbCjI/5vy9GYOW
2WXlu2yYFAft8s1KYcO5fczZEX0Mrl0wNTUdYVDViszlSWkcWFv5KNnSCQMz
/rtgz2IGlftGNQd7yoE69ZnMDmcMdJIPedtHMKiYXReTH5dx4HSyaeHR/RjI
E0N5hZIMapRdmcNs5UDtkaFP0a4YpIs+MT+ESlGNniHMYQku+EtuEiMPY0Dl
h8/otEhQL22jT+8L5ALpkhuqGYhBsmCUidsFEUpGXLLosjICjjNFByXjMKiY
jJhzlRShDPsyRVJVERB0EzqRFo9BqL/ViNpNYUq3mSERqolAbq3tGfVEDPSS
u0XlsoWoZXdlv+YBAsvSp2+aXsWAEX606vz75ZSgR6zF8EEEsox1GiNvYrA1
WkLba3GR9F4VOJGUgsDUlTLj8QdL+pcnRKxcJFd1OTkXpCGQNr9yb8QjDIRX
xLeZyy2QOl2VthmZCJh6OruteoxBXdVoiLjGPDm9gvF6Og+B21t/h6s9waCk
3aLAx2GGhJKy5W5vETDo0nvpWoDBpsiMpor7P8iT2U6CQN/7E/98s7GhAoPS
BXWmp/oYqVF+uPLBAM1Tx0nsLIVBgXhA7RRjhCRq73Q0DCNAGk4OoG8wWJMn
O83tHCRfyi2bPfsDgdF9qg+S3mEQwFVz/fD2G+lhvzAiNIGAkAd5Tr8aA1m7
wUWt7D5StPKd4u4pBJR8HdzGazC4e2LbB6fALlKp23ClLh8B8+hLKtYf6P7p
uTJsXtBB7lvLe902i4BbErIgUIfB0dTspPjQVpLXNJIK8wiE3H7Vkf+J9tHv
dWysURMZmnvpus9vBJIe2ZYd/IyBodQ9nuWqelLH3CbHfYGuq2D0pmQjBh9S
fYZqcqrJG+qx7SqLCFDlF05TTRg0SNfHugZXkMGVypwMGufVsO19WzCQNNSW
fb45hxQ/de3MCI2PNpZsZrfSvmvsDbzJukT8zFAcW3r/F+60kalvw+BX8MLt
IG4RcSvrn5M8Glce/v4z4gsG2/0UD/hFviEavmyRCqJxramoz5r/YcAtVzX1
H/uXCE+0qPyP5rlLgJXf+RWD8333jKTzPhPJUiFxK2ncfeWL+IQuDIxLg6S2
fWsmjO4w/AXoekOYu72JHgzKY9xi1yq3E0b7Vwe+mkPgCmfIfKwXgz+sM0yE
jbuJI9eJzpgZul5tRTGrAQwsrLzj+Ad6iYrsy9ap0wi0GhQNLAxi4Hs9PP95
SD/RLe83ETCJwJiFRVXuMAaPAxxu+OYNEaGEamfIGAKsQxHnJEYxcGjyLshc
MU6cTs5Q6+pBIDSx9/fHSQw8bCKWjzJ/EkP1dwc2ddJ8UsM6zkxj4KNt2rYc
mSD8TQfkiC9L/xeSLftzhvY94OP6GN0p4ui29PmyBprPqx2n4+YwkLkmKPzI
k0+Et4hrS5EIbBnK+bnrDxxiQu6Om7cKwLlmxcgtcQj80A8cqF2NAxP/6Xpw
ThSO16w9N7XIBc8Jwc/vN+KQ63ZKrc9fDF5MFqiITXNhf7ZRnbM6Dht4w10b
hsXAJb6ZHPnOBTvXqNqxP3God5M8+4O3AhQuhZzYyOOCyaflVbIoDiXf8lwd
8sVBuE3KMzCHC6o5f5S5auNwzdbq+Ts1SWBpp8+4mXOh303gAd8Qhy16V6ea
n0qDT5a9VtQRDhxqmDut5kLz7w2auqyoALqFQsnSlixwe/aTHZOAw+qGyIAH
uxXgDOcdKshmwfGze+bNknBIy9bPO35eAbA55+ob48pwck8RT/wqDqEKy5oF
RxXglvNtVvZVZbg4dTI+MRkHLfKTkVmZIrDXKPjFNipB7lb+3I07OARZfvS6
a6wMd3timioNFIH/erHlYQ4Ooo32aYUr2HAtw+mFU68cJDaIx72txqF8OzJy
Q4UN31//GmrOloNbGd5e0e9xcJHW8TfTYsPXwj0iIv5ykBFYZ2hai0NfOcaW
d2HDRc1WKnGRCcXMxNnaOhx4JjJadk/Y8MrowHVbOSZ0OEp7NTbj0NjKjFbQ
58C1nc+LDXRlYH2vvGFPLw7NWfap72w4UBHk/jjitzT8VRTCyuzHwW+/Hbbt
EAceHrvZHU5Jg+75L3yPAVof7csS56M58Ga+RabaWBp2rb+TPzSMQ43etsq4
Gvr7en2WVy0Y4H+MzRofx6G4Zte6C/T8wC80//VLggFh2//hF0zgsPuDzPGd
gxxAq92tkHopOL+qpylwCoeWqg/960W4sCVK1JxnLQUpeRmxMzM4+Jw6WmLI
5ELilHLuQYYU3I8UPFw6i4OHtmLh+nVcyLnyft/zBknIsfYwCJundRvtzWzE
uSB4/iGj5YokFHGrlPUWcBiOOuW6w4ALHQd+3Km0kYSKCVX+4iIO/wcBDCV4

      "]]},
    Annotation[#, "Charting`Private`Tag$3450#1"]& ]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{},
  PlotRange->{{-9.99999941761652, 9.999995837354044}, {-9.999983022923676, 
   9.999999999999167}, {0., 19.999999591836733`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.4399601375716*^9, 3.503730846468074*^9, 
  3.63006077497005*^9, 3.6597988892312603`*^9, 
  3.749975298559724*^9},ExpressionUUID->"db920c9e-3330-4ed7-b668-\
069c06468fb9"]
}, Open  ]],

Cell[TextData[{
 "Mathematica also includes very effective methods of adding dynamic \
behaviour to graphs. For example, we might be interested in how the Bessel \
functions,  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["J", "n"], "(", 
    RowBox[{"k", " ", "x"}], ")"}], TraditionalForm]],ExpressionUUID->
  "4d9cdeb1-5eda-445a-9b3d-37febc4714ba"],
 " depend on the index, ",
 StyleBox["n",
  FontSlant->"Italic"],
 ", and the scaling parameter, ",
 StyleBox["k",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.441029074936493*^9, 3.441029154825493*^9}, {
  3.441029489325493*^9, 
  3.441029502343493*^9}},ExpressionUUID->"e3e73f43-d451-4603-a821-\
ecdfced4aa55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"n", ",", 
       RowBox[{"k", " ", "x"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"7e3ea754-5c03-4a5c-af85-9f1a41a231d5"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 0, $CellContext`n$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 4, 1}, {
      Hold[$CellContext`k$$], 0, 10}}, Typeset`size$$ = {540., {160., 168.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3460$$ = 0, $CellContext`k$3465$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0, $CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3460$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$3465$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        BesselJ[$CellContext`n$$, $CellContext`k$$ $CellContext`x], \
{$CellContext`x, 0, 3}], 
      "Specifications" :> {{$CellContext`n$$, 0, 4, 1}, {$CellContext`k$$, 0, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{612., {252., 261.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.441029572731493*^9, 3.441029688024493*^9, 
  3.503730846528077*^9, 3.630060774982544*^9, 3.6597988893131742`*^9, 
  3.749975298623271*^9},ExpressionUUID->"104d7687-0cf2-4366-b701-\
81edac56cea8"]
}, Open  ]],

Cell["We can even animate the result by clicking the + button.", "Text",
 CellChangeTimes->{{3.441029621343493*^9, 
  3.441029679382493*^9}},ExpressionUUID->"cb7d2780-7874-4501-99f7-\
8670ad046f07"],

Cell["\<\
We can do the same for more complicated plots, but we must be prepared for \
the calculations to be a bit slower.\
\>", "Text",
 CellChangeTimes->{{3.441029538703493*^9, 
  3.441029563980493*^9}},ExpressionUUID->"1d511093-0303-4174-9860-\
4752403636f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"BesselJ", "[", 
      RowBox[{"n", ",", 
       RowBox[{"k", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"x", "^", "2"}], "+", 
          RowBox[{"y", "^", "2"}]}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",ExpressionUUI\
D->"0fe4edc4-9a45-476d-88a9-0b2237019094"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`k$$ = 0, $CellContext`n$$ = 0, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 0, 4, 1}, {
      Hold[$CellContext`k$$], 0, 10}}, Typeset`size$$ = {540., {205., 212.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$3563$$ = 0, $CellContext`k$3564$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`k$$ = 0, $CellContext`n$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$3563$$, 0], 
        Hold[$CellContext`k$$, $CellContext`k$3564$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot3D[
        BesselJ[$CellContext`n$$, $CellContext`k$$ 
         Sqrt[$CellContext`x^2 + $CellContext`y^2]], {$CellContext`x, -3, 
         3}, {$CellContext`y, -3, 3}], 
      "Specifications" :> {{$CellContext`n$$, 0, 4, 1}, {$CellContext`k$$, 0, 
         10}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{610., {284., 292.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.441029590988493*^9, 3.5037308469391003`*^9, 
  3.630060775028428*^9, 3.659798889494907*^9, 
  3.749975298792676*^9},ExpressionUUID->"eec68bc5-dfb8-45e0-9f6a-\
a824e43de8ad"]
}, Open  ]],

Cell["Summary", "Subtitle",ExpressionUUID->"b728249a-2a9c-41b4-9f24-a36360a05518"],

Cell[TextData[{
 "The important features of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " that we have covered here, but which tend to cause problems, are:\n  the \
significance of the different equals signs: = is the Set function,  \[Equal] \
is the Equal function.\n Brackets [], (),{} and [[ ]] have quite specific \
uses, and if they are used in the wrong contexts will produce unexpected \
results.\n We have introduced quite a lot of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " functions. You do not have to learn all of these -- the ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " help files are comprehensive and quite easy to use."
}], "Text",ExpressionUUID->"1f2ab95c-93a0-4384-88f9-28235f427e6e"],

Cell[TextData[StyleBox["A.H. Harker, Junderwood. J. Bhamrah\nUCL\nJanuary \
2009, revised January 2011, January 2015, October 2018, January 2020",
 FontColor->RGBColor[0, 1, 0]]], "Text",
 CellChangeTimes->{{3.441029717545493*^9, 3.4410297281754932`*^9}, {
  3.503730970556171*^9, 3.50373098225684*^9}, {3.6300598092798653`*^9, 
  3.630059817927535*^9}, {3.749975328980154*^9, 3.749975339150178*^9}, {
  3.78782776590888*^9, 
  3.7878277790811677`*^9}},ExpressionUUID->"64c3102b-d4e8-4888-a866-\
1a1088766b46"]
},
WindowToolbars->{},
CellGrouping->Manual,
WindowSize->{1569, 1044},
WindowMargins->{{-10, Automatic}, {Automatic, -8}},
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{Automatic, Automatic},
ShowSelection->True,
TaggingRules:>{
 "PaginationCache" -> {{2003, 12, 6, 15, 57, 37.4768064`9.326337463468008}, {
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
     2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 
    4, 4, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 6,
     6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 8, 8, 8, 8, 
    8, 8, 8, 8, 8, 8, 8, 8, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 
    10, 10, 10, 10, 10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 11, 11, 11, 11, 
    11, 11, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 13, 13, 13, 13, 
    13, 13, 13, 13, 13, 13, 13, 13, 14, 14, 14, 14, 14, 14, 14, 14, 14, 14, 
    14, 14, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 
    16, 16, 16, 16, 16, 16, 16}}},
ShowCellLabel->True,
ShowCellTags->False,
Magnification->1.5,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
PrivateNotebookOptions -> {"ColorPalette" -> {RGBColor, -1}},
RenderingOptions -> {"ObjectDithering" -> True},
RenderingOptions -> {"RasterDithering" -> False}
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "c:1"->{
  Cell[901, 27, 111, 1, 144, "Title",ExpressionUUID->"fa4f85cd-5213-4f04-93f8-8599f41ca347",
   CellTags->"c:1"]},
 "Info363749975294-7242700"->{
  Cell[21124, 628, 182, 4, 68, "Print",ExpressionUUID->"1384afd3-a4f4-47cf-be9b-d3bbff66bc09",
   CellTags->"Info363749975294-7242700"],
  Cell[21309, 634, 898, 26, 34, "Print",ExpressionUUID->"ad638883-9bfa-481e-97a3-f01f4b71d4fd",
   CellTags->"Info363749975294-7242700"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"c:1", 273913, 5659},
 {"Info363749975294-7242700", 274059, 5662}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[545, 20, 353, 5, 46, "Subsubtitle",ExpressionUUID->"9e8df1db-2d87-482c-bd79-06bcfa0addb5"],
Cell[901, 27, 111, 1, 144, "Title",ExpressionUUID->"fa4f85cd-5213-4f04-93f8-8599f41ca347",
 CellTags->"c:1"],
Cell[1015, 30, 178, 3, 51, "Text",ExpressionUUID->"f7366369-4b93-41cb-99bd-e973f83c0423"],
Cell[1196, 35, 87, 0, 48, "Subtitle",ExpressionUUID->"1d379af9-13e4-4516-8938-d96fe96269db"],
Cell[1286, 37, 90, 0, 51, "Text",ExpressionUUID->"f22bfe94-256c-40d4-8215-fdedd05d9106"],
Cell[CellGroupData[{
Cell[1401, 41, 104, 1, 60, "Input",ExpressionUUID->"8dc2b378-70d4-4147-9c02-7dd91e930937"],
Cell[1508, 44, 225, 4, 60, "Output",ExpressionUUID->"afd28df0-267e-4d97-a44c-2a08fb482e7c"]
}, Open  ]],
Cell[1748, 51, 504, 9, 85, "Text",ExpressionUUID->"50b9d14b-4e55-419a-80aa-f4ac403882ef"],
Cell[2255, 62, 273, 6, 51, "Text",ExpressionUUID->"4f002fe3-61d7-48a2-af7f-493ebd160dee"],
Cell[CellGroupData[{
Cell[2553, 72, 104, 1, 60, "Input",ExpressionUUID->"2238542e-e7ac-48c0-9e52-15e207e90a41"],
Cell[2660, 75, 225, 4, 60, "Output",ExpressionUUID->"780e6e1a-bcee-47f2-9b36-fcb577b3fc04"]
}, Open  ]],
Cell[2900, 82, 162, 3, 51, "Text",ExpressionUUID->"0bb98d7c-8c8d-4405-b7ac-83d9fb050e37"],
Cell[CellGroupData[{
Cell[3087, 89, 158, 3, 90, "Input",ExpressionUUID->"ae5950d0-91ee-434f-a7ae-08750e9dd992"],
Cell[3248, 94, 223, 4, 60, "Output",ExpressionUUID->"329a6b95-6391-4ae8-8e6f-057459b60569"],
Cell[3474, 100, 241, 5, 80, "Output",ExpressionUUID->"d34ab1cb-6712-4c8a-9a7d-ca7aa4ed9ee7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3752, 110, 83, 0, 60, "Input",ExpressionUUID->"7e746b77-b0a5-425a-822f-c9000ac070be"],
Cell[3838, 112, 229, 4, 60, "Output",ExpressionUUID->"ef1c02fb-09ed-45d0-968f-78ae752e6594"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4104, 121, 176, 3, 90, "Input",ExpressionUUID->"b5c4bc73-b4fa-4f67-89c5-57c590ec8e5f"],
Cell[4283, 126, 242, 5, 60, "Output",ExpressionUUID->"7705bfaa-87bc-443b-ab59-554cd98754bf"],
Cell[4528, 133, 260, 5, 60, "Output",ExpressionUUID->"bfa53059-308f-4e73-9cbb-27a8a5400f13"]
}, Open  ]],
Cell[4803, 141, 372, 7, 85, "Text",ExpressionUUID->"2ccf88f2-4ee9-4fb3-8a85-d106069e9e0c"],
Cell[CellGroupData[{
Cell[5200, 152, 115, 1, 60, "Input",ExpressionUUID->"f307c9ba-dffd-4f66-855c-e344c83cc4a7"],
Cell[5318, 155, 285, 5, 60, "Output",ExpressionUUID->"a7930ac7-764f-499c-b31c-c29aa00c7e54"]
}, Open  ]],
Cell[5618, 163, 2234, 72, 353, "Text",ExpressionUUID->"314843e6-a84f-4de5-8b71-88cb832fd167"],
Cell[7855, 237, 101, 0, 51, "Text",ExpressionUUID->"af3237b7-9a75-4915-ac33-a9b26be3be95"],
Cell[CellGroupData[{
Cell[7981, 241, 195, 4, 90, "Input",ExpressionUUID->"3525ea96-2923-422d-b87d-9a989c9554a2"],
Cell[8179, 247, 238, 4, 60, "Output",ExpressionUUID->"6a2cdf02-d6a7-4480-ba57-ef0b9570c6be"],
Cell[8420, 253, 346, 6, 60, "Output",ExpressionUUID->"7eabe3de-fed3-4081-89a7-d6d70c8188fc"]
}, Open  ]],
Cell[8781, 262, 360, 7, 85, "Text",ExpressionUUID->"44355383-3102-496a-93dc-c9fb8a1ea04e"],
Cell[CellGroupData[{
Cell[9166, 273, 272, 7, 119, "Input",ExpressionUUID->"f2cfd21d-c447-46aa-8872-beb52f248327"],
Cell[9441, 282, 243, 5, 80, "Output",ExpressionUUID->"d41acd20-6c00-4b08-a257-004032b70ae4"],
Cell[9687, 289, 282, 6, 60, "Output",ExpressionUUID->"28a69e5d-94ec-4ac9-8aa6-d515f157a113"],
Cell[9972, 297, 284, 6, 60, "Output",ExpressionUUID->"92d4b502-0dc5-42b2-ad8c-14d1c06b0f04"]
}, Open  ]],
Cell[10271, 306, 203, 3, 51, "Text",ExpressionUUID->"183c3367-d26c-4186-9918-a5fa2e3d7487"],
Cell[CellGroupData[{
Cell[10499, 313, 354, 10, 119, "Input",ExpressionUUID->"baf440bb-63bb-435b-b6a6-d2674ebf7956"],
Cell[10856, 325, 228, 4, 60, "Output",ExpressionUUID->"75af2592-088a-4be2-985c-a3a8f2484e77"],
Cell[11087, 331, 243, 4, 60, "Output",ExpressionUUID->"fb29b7ba-f52c-46a2-90f5-a1cef3745e0d"],
Cell[11333, 337, 242, 4, 60, "Output",ExpressionUUID->"040a487c-3951-4e96-a6df-b566234575f4"]
}, Open  ]],
Cell[11590, 344, 84, 0, 51, "Text",ExpressionUUID->"4579c41d-dc0e-44a0-b2cd-77dd7d6d58f6"],
Cell[CellGroupData[{
Cell[11699, 348, 270, 7, 119, "Input",ExpressionUUID->"33960873-a0bd-4651-802f-f53881fad5a9"],
Cell[11972, 357, 236, 3, 60, "Output",ExpressionUUID->"be75f189-d050-4be3-bd3a-8c2cea807d9d"],
Cell[12211, 362, 241, 4, 60, "Output",ExpressionUUID->"540c85e3-ebc8-40db-928e-85c6a4e86d60"],
Cell[12455, 368, 237, 3, 60, "Output",ExpressionUUID->"9c848fa6-aac0-46c2-8a19-986d9ed4f801"]
}, Open  ]],
Cell[12707, 374, 273, 6, 51, "Text",ExpressionUUID->"4fc45fb0-4cba-468a-a49e-aca6683c6ef8"],
Cell[CellGroupData[{
Cell[13005, 384, 221, 5, 60, "Input",ExpressionUUID->"06b1355e-5289-4859-a4ce-b0c0779738ee"],
Cell[13229, 391, 302, 7, 80, "Output",ExpressionUUID->"3abcac05-e60d-4a86-a397-f9462cbca45e"]
}, Open  ]],
Cell[13546, 401, 89, 0, 48, "Subtitle",ExpressionUUID->"e3c570a3-3352-46cb-8119-d48f8a5cbda8"],
Cell[13638, 403, 483, 12, 85, "Text",ExpressionUUID->"811ac6b0-e289-4fd5-b36e-d1838ce8e342"],
Cell[CellGroupData[{
Cell[14146, 419, 509, 12, 177, "Input",ExpressionUUID->"442a404e-3baa-40d1-a7e9-9618e4ecbb68"],
Cell[14658, 433, 223, 4, 60, "Output",ExpressionUUID->"477df5af-b15c-433d-a677-b2722076121e"],
Cell[14884, 439, 269, 6, 60, "Output",ExpressionUUID->"4640ef1b-b5b8-445f-a88d-2b15bf54e0dd"],
Cell[15156, 447, 245, 4, 60, "Output",ExpressionUUID->"f9ba7cb2-f046-4786-9440-a8d954599d45"],
Cell[15404, 453, 294, 7, 60, "Output",ExpressionUUID->"b5e77a22-83d3-4e96-a2b8-2b35c2e54f9c"],
Cell[15701, 462, 434, 13, 60, "Output",ExpressionUUID->"9ddb25d8-4a29-44e1-befc-fef0741f77e6"]
}, Open  ]],
Cell[16150, 478, 459, 14, 85, "Text",ExpressionUUID->"3a74291f-2447-4768-8f98-a92ab775119f"],
Cell[16612, 494, 466, 12, 85, "Text",ExpressionUUID->"5c656bb4-0c46-458d-8d86-3f87724df68c"],
Cell[CellGroupData[{
Cell[17103, 510, 235, 4, 119, "Input",ExpressionUUID->"b4de27cc-fb83-49db-a63f-2de3087f23ec"],
Cell[17341, 516, 228, 4, 60, "Output",ExpressionUUID->"0fcb5443-5a97-4680-9e14-72fad35246ce"],
Cell[17572, 522, 231, 4, 60, "Output",ExpressionUUID->"72c9a717-00ed-49b9-96fc-7ec6f96b24f0"],
Cell[17806, 528, 260, 5, 60, "Output",ExpressionUUID->"d1cd5829-2fdf-418b-becf-e8200ab34ecf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18103, 538, 172, 2, 148, "Input",ExpressionUUID->"1f2b2e92-7a10-4619-945e-f1262b8c7c0d"],
Cell[18278, 542, 220, 4, 60, "Output",ExpressionUUID->"1918ab86-6ea9-473d-bfa4-a3463b8acd0e"],
Cell[18501, 548, 266, 6, 60, "Output",ExpressionUUID->"252bed2f-2f28-41af-9b5f-87cd37ec633a"],
Cell[18770, 556, 242, 4, 60, "Output",ExpressionUUID->"673d35cd-6164-466b-a997-94f9a757d2b3"],
Cell[19015, 562, 289, 7, 60, "Output",ExpressionUUID->"64654ffa-7984-4b32-8a80-96c0a5e1f73b"]
}, Open  ]],
Cell[19319, 572, 166, 3, 51, "Text",ExpressionUUID->"c88e1dde-c2e0-46ae-8eaf-2da8b9537c28"],
Cell[CellGroupData[{
Cell[19510, 579, 160, 4, 60, "Input",ExpressionUUID->"2a3f8171-e701-4bc7-b690-9b1c1643109d"],
Cell[19673, 585, 229, 4, 60, "Output",ExpressionUUID->"a466fd7f-ac97-4a7a-a779-0c95f69461d8"]
}, Open  ]],
Cell[19917, 592, 195, 3, 51, "Text",ExpressionUUID->"741898db-18c8-4f68-b321-b61b2404aa46"],
Cell[CellGroupData[{
Cell[20137, 599, 221, 5, 90, "Input",ExpressionUUID->"90400bea-7cca-4fd1-8795-7a9fa4857e8b"],
Cell[20361, 606, 296, 7, 60, "Output",ExpressionUUID->"5f73dfab-e0cd-4b1f-8f30-5ccc52c2427f"]
}, Open  ]],
Cell[20672, 616, 212, 3, 51, "Text",ExpressionUUID->"29b573e7-8ca8-41a7-84e1-2eba6e1ff07b"],
Cell[20887, 621, 110, 0, 51, "Text",ExpressionUUID->"d92745c9-19e4-4b08-aa33-c8c91ca01c94"],
Cell[CellGroupData[{
Cell[21022, 625, 99, 1, 60, "Input",ExpressionUUID->"0b753c4d-a59c-41cd-aaba-21e9532ac6b9"],
Cell[21124, 628, 182, 4, 68, "Print",ExpressionUUID->"1384afd3-a4f4-47cf-be9b-d3bbff66bc09",
 CellTags->"Info363749975294-7242700"],
Cell[21309, 634, 898, 26, 34, "Print",ExpressionUUID->"ad638883-9bfa-481e-97a3-f01f4b71d4fd",
 CellTags->"Info363749975294-7242700"]
}, Open  ]],
Cell[22222, 663, 247, 6, 51, "Text",ExpressionUUID->"b80ef766-fb5a-43d5-b921-6fdf3c78c8c8"],
Cell[CellGroupData[{
Cell[22494, 673, 290, 5, 148, "Input",ExpressionUUID->"0f7b04dc-212e-4568-8e85-b9816f60ee0b"],
Cell[22787, 680, 230, 4, 60, "Output",ExpressionUUID->"2867cf86-964a-4a89-adc9-78f9449a7b4b"],
Cell[23020, 686, 226, 4, 60, "Output",ExpressionUUID->"9454f770-2d5b-4128-9b05-771fc9b34d52"],
Cell[23249, 692, 228, 4, 60, "Output",ExpressionUUID->"6d83b8eb-212e-4daf-9bdb-7eaacfb46b86"],
Cell[23480, 698, 229, 4, 60, "Output",ExpressionUUID->"d4ba6a6f-c6d0-4435-909a-16aaa581d4f6"]
}, Open  ]],
Cell[23724, 705, 130, 0, 51, "Text",ExpressionUUID->"31be10c5-579b-49ff-9a08-a5eae44635c4"],
Cell[23857, 707, 138, 3, 60, "Input",ExpressionUUID->"43c94cbc-76a1-4561-bcd9-616bc4185100"],
Cell[23998, 712, 92, 0, 48, "Subtitle",ExpressionUUID->"6ce2551c-27f3-412f-bf83-fb773ad1538b"],
Cell[24093, 714, 268, 4, 85, "Text",ExpressionUUID->"3dbddd0d-542a-4061-be00-64fc05c77589"],
Cell[CellGroupData[{
Cell[24386, 722, 159, 3, 90, "Input",ExpressionUUID->"0dbeea93-8044-409f-bc8b-f017a4fa6c3d"],
Cell[24548, 727, 246, 5, 60, "Output",ExpressionUUID->"7312adb2-e190-4f64-bd76-aa146bb28b08"],
Cell[24797, 734, 244, 5, 60, "Output",ExpressionUUID->"e4c72542-0d80-4fd4-bca6-c92ba88d4691"]
}, Open  ]],
Cell[25056, 742, 162, 3, 51, "Text",ExpressionUUID->"aeb5e42e-ca78-47f7-bd22-18f526c23685"],
Cell[25221, 747, 89, 0, 48, "Subtitle",ExpressionUUID->"e40d04d5-3ec2-4b50-94b8-d79215b2524b"],
Cell[25313, 749, 96, 0, 51, "Text",ExpressionUUID->"44ff4e51-6560-4f50-8277-b9b67f1e5119"],
Cell[CellGroupData[{
Cell[25434, 753, 180, 5, 60, "Input",ExpressionUUID->"dded77ce-d221-4b53-b420-1d8a21065349"],
Cell[25617, 760, 321, 8, 60, "Output",ExpressionUUID->"98735404-259c-407f-a31a-a5ec7889636e"]
}, Open  ]],
Cell[25953, 771, 254, 6, 51, "Text",ExpressionUUID->"dc5e1238-65a0-447d-afae-29cabe97d7fd"],
Cell[CellGroupData[{
Cell[26232, 781, 198, 5, 60, "Input",ExpressionUUID->"693db618-e7b8-4fd4-919c-724d2837e021"],
Cell[26433, 788, 224, 4, 207, "Output",ExpressionUUID->"1662035c-1762-4a7f-8e6e-1346c3194cdb"]
}, Open  ]],
Cell[26672, 795, 282, 4, 137, "Text",ExpressionUUID->"c1a8fd67-946b-4d5f-83e7-f308f8ec87cb"],
Cell[CellGroupData[{
Cell[26979, 803, 268, 6, 177, "Input",ExpressionUUID->"a5e13f9d-eee7-4847-a332-aeda3c510e02"],
Cell[27250, 811, 243, 5, 60, "Output",ExpressionUUID->"616cd302-f90d-4be0-899f-c4a3d3a5ccab"],
Cell[27496, 818, 240, 4, 60, "Output",ExpressionUUID->"cb5da104-8e1b-45ee-baca-616269bc20e0"],
Cell[27739, 824, 222, 4, 60, "Output",ExpressionUUID->"5c3c5720-0bcc-4ad4-86b8-a2cf1f04d8d1"],
Cell[27964, 830, 222, 4, 60, "Output",ExpressionUUID->"8b20fbcc-dea4-46d8-b73a-98ad5570455a"],
Cell[28189, 836, 245, 5, 60, "Output",ExpressionUUID->"159ce142-be83-47cb-8643-81af2970e218"]
}, Open  ]],
Cell[28449, 844, 243, 5, 51, "Text",ExpressionUUID->"355868b3-83d6-4988-8364-05dce93555fe"],
Cell[CellGroupData[{
Cell[28717, 853, 267, 9, 60, "Input",ExpressionUUID->"f570385b-b7e8-4894-8399-16363c4a8f75"],
Cell[28987, 864, 389, 11, 60, "Output",ExpressionUUID->"633ec108-88f4-4ae9-8125-c3d1bddb3098"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29413, 880, 145, 3, 60, "Input",ExpressionUUID->"27e4e032-7f9f-4a1c-b7f0-752a2845f39a"],
Cell[29561, 885, 397, 10, 60, "Output",ExpressionUUID->"c8e30f8a-f112-49d9-9d90-baec2bf48b89"]
}, Open  ]],
Cell[29973, 898, 87, 0, 51, "Text",ExpressionUUID->"a674b0b7-cc17-427a-a04c-b008550d4bf4"],
Cell[CellGroupData[{
Cell[30085, 902, 117, 1, 60, "Input",ExpressionUUID->"f408aa4c-e0f9-4727-b951-e26e36a6ad21"],
Cell[30205, 905, 391, 11, 60, "Output",ExpressionUUID->"a86ff4ef-57fd-4aad-b39e-0b23666e40bf"]
}, Open  ]],
Cell[30611, 919, 92, 0, 51, "Text",ExpressionUUID->"7dc240be-6651-47a1-86db-b0313c23a867"],
Cell[CellGroupData[{
Cell[30728, 923, 172, 4, 65, "Input",ExpressionUUID->"c1d45333-de92-48a2-816f-021b5f5d113e"],
Cell[30903, 929, 222, 4, 60, "Output",ExpressionUUID->"4c43a082-a688-4851-925d-7323e7559688"]
}, Open  ]],
Cell[31140, 936, 307, 8, 51, "Text",ExpressionUUID->"087e15c4-5511-401f-8aa6-793f792fa359"],
Cell[CellGroupData[{
Cell[31472, 948, 164, 4, 65, "Input",ExpressionUUID->"a072987f-0f65-45dc-b01b-1972ed200249"],
Cell[31639, 954, 287, 7, 60, "Output",ExpressionUUID->"d849af4c-f0f7-481a-9b4c-09041804ec21"]
}, Open  ]],
Cell[31941, 964, 250, 8, 51, "Text",ExpressionUUID->"2c672e20-2417-4816-ac26-9ad1ef84d69c"],
Cell[CellGroupData[{
Cell[32216, 976, 260, 7, 65, "Input",ExpressionUUID->"4b3d4c47-e1b7-42bc-9fe8-cc196aa22784"],
Cell[32479, 985, 390, 12, 69, "Output",ExpressionUUID->"c9e39331-5db2-4329-b3b5-06b10b672902"]
}, Open  ]],
Cell[32884, 1000, 225, 5, 51, "Text",ExpressionUUID->"74e1f453-84ea-4b01-a07b-18b1cf4d3555"],
Cell[CellGroupData[{
Cell[33134, 1009, 331, 11, 60, "Input",ExpressionUUID->"8f02e7b0-8930-478b-8095-0da93f90228d"],
Cell[33468, 1022, 452, 14, 84, "Output",ExpressionUUID->"561ab9ab-cd0a-42cf-9a54-e44dc98d020f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33957, 1041, 192, 3, 90, "Input",ExpressionUUID->"cf4093d4-d86b-487c-b14a-e7b83ccf7aaf"],
Cell[34152, 1046, 261, 6, 60, "Output",ExpressionUUID->"cd22a13f-bc7c-457b-a291-8242077b18e5"],
Cell[34416, 1054, 377, 11, 60, "Output",ExpressionUUID->"c93cb552-15f0-4473-88b6-2af27fffa045"]
}, Open  ]],
Cell[34808, 1068, 106, 0, 51, "Text",ExpressionUUID->"3d5e80c3-51f6-448f-82b7-f0ec37c42793"],
Cell[CellGroupData[{
Cell[34939, 1072, 149, 3, 60, "Input",ExpressionUUID->"6cfb59f5-936b-43c6-b289-0c9c975202bb"],
Cell[35091, 1077, 375, 11, 80, "Output",ExpressionUUID->"07a6b6c2-c2ef-4d31-b13b-118ff16fab9c"]
}, Open  ]],
Cell[35481, 1091, 99, 0, 51, "Text",ExpressionUUID->"354f9470-6f5c-4da4-b58e-5131ed157e4e"],
Cell[CellGroupData[{
Cell[35605, 1095, 124, 1, 60, "Input",ExpressionUUID->"385184f6-423d-46f2-b6ad-30ebb68cc45b"],
Cell[35732, 1098, 446, 14, 84, "Output",ExpressionUUID->"49461de5-c1cf-4925-84d5-7654b2293235"]
}, Open  ]],
Cell[36193, 1115, 100, 0, 48, "Subtitle",ExpressionUUID->"89a5a95d-d40f-40d4-a41e-e40f48a749f2"],
Cell[36296, 1117, 157, 4, 51, "Text",ExpressionUUID->"625b7fd7-f82e-41f9-8c21-5e545b2ea2da"],
Cell[CellGroupData[{
Cell[36478, 1125, 117, 2, 75, "Input",ExpressionUUID->"2a13b216-437b-49bf-84fe-dbd2a6289f5e"],
Cell[36598, 1129, 256, 6, 74, "Output",ExpressionUUID->"014c4642-1572-446e-ba37-be8951b39b30"]
}, Open  ]],
Cell[36869, 1138, 123, 0, 51, "Text",ExpressionUUID->"33aecf90-5c99-43bb-a1f4-703a8ad3d162"],
Cell[CellGroupData[{
Cell[37017, 1142, 158, 4, 84, "Input",ExpressionUUID->"34252a0c-50d5-43b5-9018-33bbdcb8a8ad"],
Cell[37178, 1148, 226, 4, 60, "Output",ExpressionUUID->"a6f03d13-3ab5-413b-9446-358fd0f5b849"]
}, Open  ]],
Cell[37419, 1155, 81, 0, 48, "Subtitle",ExpressionUUID->"29cbde0b-7b4b-4d58-92f2-89ce903b486d"],
Cell[CellGroupData[{
Cell[37525, 1159, 136, 3, 60, "Input",ExpressionUUID->"837899f5-1c89-4555-a38f-8dc154b0a94e"],
Cell[37664, 1164, 388, 9, 55, "Message",ExpressionUUID->"efd50456-8e9f-4749-a2a7-b7b392bb5bbd"],
Cell[38055, 1175, 421, 10, 35, "Message",ExpressionUUID->"3306aac5-8c1b-4107-be55-5d47b24a88de"],
Cell[38479, 1187, 233, 4, 60, "Output",ExpressionUUID->"55f5c09d-8ccb-4f92-8ecf-e81baf13c4a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38749, 1196, 224, 6, 60, "Input",ExpressionUUID->"0c3e90b6-95c5-41a3-a7ee-6258dfd20e81"],
Cell[38976, 1204, 229, 4, 60, "Output",ExpressionUUID->"94723664-b88f-44bd-a8d5-e1297314dd47"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39242, 1213, 515, 14, 90, "Input",ExpressionUUID->"048f5799-1ab7-4752-8372-3c7901272362"],
Cell[39760, 1229, 239, 4, 60, "Output",ExpressionUUID->"d4a6f07e-e424-480f-b802-6c376f05a869"],
Cell[40002, 1235, 256, 5, 60, "Output",ExpressionUUID->"cd12385a-2710-4b1c-a2ea-bba50770d4c7"]
}, Open  ]],
Cell[40273, 1243, 92, 0, 126, "Subtitle",ExpressionUUID->"3b4518a6-1e8e-42bf-812c-f5383766e6df"],
Cell[CellGroupData[{
Cell[40390, 1247, 289, 8, 207, "Input",ExpressionUUID->"ae89677e-6bc3-473a-95f4-a54fd09aa778"],
Cell[40682, 1257, 650, 19, 84, "Output",ExpressionUUID->"e603d797-5ebd-48dd-b878-6f4922586343"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41369, 1281, 154, 3, 60, "Input",ExpressionUUID->"49ed8384-ca18-4344-9a88-c9be2f3ce77f"],
Cell[41526, 1286, 353, 9, 84, "Output",ExpressionUUID->"5d3df00e-02c5-4e28-85a3-275154d12fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41916, 1300, 182, 3, 119, "Input",ExpressionUUID->"9f0a59b8-8b12-4c76-ab20-62b147a89980"],
Cell[42101, 1305, 223, 4, 60, "Output",ExpressionUUID->"3051b8b8-3090-4e37-afa9-809ff1db8df9"],
Cell[42327, 1311, 415, 9, 35, "Message",ExpressionUUID->"071c5380-67af-464d-bf90-3f2dad146210"],
Cell[42745, 1322, 235, 4, 60, "Output",ExpressionUUID->"a005c7c0-9ae9-4655-848a-4ac986e65ed7"],
Cell[42983, 1328, 246, 5, 80, "Output",ExpressionUUID->"b54b65bb-8dc0-41e8-bcff-9e7fc6126d05"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43266, 1338, 180, 3, 90, "Input",ExpressionUUID->"fea17828-3810-402f-bc07-e75d7277e6d2"],
Cell[43449, 1343, 241, 4, 60, "Output",ExpressionUUID->"c7c48eaf-cb2b-4d07-a9ff-3b49c246c78b"],
Cell[43693, 1349, 241, 4, 60, "Output",ExpressionUUID->"e9307d0c-fb75-4459-be04-259d3b117d8c"]
}, Open  ]],
Cell[43949, 1356, 113, 1, 60, "Input",ExpressionUUID->"7f53564a-3d94-4e77-aa2f-3af24ce16ec1"],
Cell[44065, 1359, 202, 4, 48, "Subtitle",ExpressionUUID->"b3c56725-c0f0-496a-9418-f8864d691840"],
Cell[44270, 1365, 176, 3, 51, "Text",ExpressionUUID->"7c51f1cf-34a3-4a5d-b215-c1d1c591239e"],
Cell[CellGroupData[{
Cell[44471, 1372, 534, 14, 174, "Input",ExpressionUUID->"04e6e3ca-837e-48f5-88ed-1efd783ed47b"],
Cell[45008, 1388, 250, 5, 60, "Output",ExpressionUUID->"c9242fcb-96cb-4dd3-876b-dc54fcfbf58a"],
Cell[45261, 1395, 250, 5, 60, "Output",ExpressionUUID->"0a2a7311-d86d-43b2-b75d-6792cb3b1af9"],
Cell[45514, 1402, 268, 6, 60, "Output",ExpressionUUID->"46513f7d-0f6a-4382-9c02-5dbaac4f1b88"],
Cell[45785, 1410, 268, 6, 60, "Output",ExpressionUUID->"0c451cd1-9827-4c2a-9adb-41da994804c7"]
}, Open  ]],
Cell[46068, 1419, 128, 0, 51, "Text",ExpressionUUID->"20416fe2-f5b4-48bc-b74e-ea5e8d35edef"],
Cell[CellGroupData[{
Cell[46221, 1423, 723, 23, 119, "Input",ExpressionUUID->"eb5e54a4-fc08-4ac0-b94d-8be28b97a76f"],
Cell[46947, 1448, 270, 6, 60, "Output",ExpressionUUID->"1cd86ced-7908-4ab3-8e50-a6e61ea941a2"],
Cell[47220, 1456, 370, 10, 60, "Output",ExpressionUUID->"eac8ce17-8306-417b-bf0a-ecceec045501"],
Cell[47593, 1468, 226, 4, 60, "Output",ExpressionUUID->"c6aa452b-2c09-42e6-a638-adb9ff38f1de"]
}, Open  ]],
Cell[47834, 1475, 143, 2, 51, "Text",ExpressionUUID->"e63ef126-ba4c-4f71-bd79-d41776eca65d"],
Cell[47980, 1479, 109, 0, 51, "Text",ExpressionUUID->"2d381070-1f3f-46b0-a788-58d097005ef0"],
Cell[CellGroupData[{
Cell[48114, 1483, 500, 15, 117, "Input",ExpressionUUID->"fcb764af-1e04-4692-936d-e8c7e92a53ea"],
Cell[48617, 1500, 225, 4, 60, "Output",ExpressionUUID->"0aa8aefc-3d71-4a3d-9a19-b97dd1d8c26a"],
Cell[48845, 1506, 223, 4, 60, "Output",ExpressionUUID->"98a7a9d0-a2cf-4eb2-9670-01259e605fea"]
}, Open  ]],
Cell[49083, 1513, 106, 0, 51, "Text",ExpressionUUID->"e22aa3f8-fbaa-4dd5-ad72-2972d793d1b4"],
Cell[CellGroupData[{
Cell[49214, 1517, 285, 8, 60, "Input",ExpressionUUID->"82c79ce4-f412-4951-9199-8a861dc1421c"],
Cell[49502, 1527, 376, 9, 80, "Output",ExpressionUUID->"52f379f6-3102-4134-a847-ca3d2039e6fb"]
}, Open  ]],
Cell[49893, 1539, 230, 5, 51, "Text",ExpressionUUID->"54883872-2d9d-451e-8a4f-ed6b06ef003a"],
Cell[50126, 1546, 102, 0, 48, "Subtitle",ExpressionUUID->"a9d878f2-4d28-49e4-bdaa-863cc24f5ff7"],
Cell[50231, 1548, 279, 6, 51, "Text",ExpressionUUID->"c7b8ec22-20e9-44e2-813f-8468c2606a01"],
Cell[CellGroupData[{
Cell[50535, 1558, 299, 9, 90, "Input",ExpressionUUID->"5815a3e7-3966-4296-845e-a92d02f0a9a5"],
Cell[50837, 1569, 316, 8, 60, "Output",ExpressionUUID->"4d216aa5-7992-4672-ba5c-5abdf4a09f33"],
Cell[51156, 1579, 345, 9, 81, "Output",ExpressionUUID->"ba3c5c58-1f98-4b03-a3ea-20de5ee7a31e"]
}, Open  ]],
Cell[51516, 1591, 477, 8, 185, "Text",ExpressionUUID->"8a0f60db-1ba6-41eb-9a65-ccfdd03864b6"],
Cell[CellGroupData[{
Cell[52018, 1603, 161, 4, 60, "Input",ExpressionUUID->"4056ef8a-18e4-4552-95e5-2b83e707aea9"],
Cell[52182, 1609, 300, 7, 81, "Output",ExpressionUUID->"fe1a930d-9b39-4ce1-b2ca-4d136b604ea1"]
}, Open  ]],
Cell[52497, 1619, 98, 0, 51, "Text",ExpressionUUID->"17bb397e-a0e1-43e5-919e-f1694d147cc6"],
Cell[52598, 1621, 103, 0, 51, "Text",ExpressionUUID->"84b4e6ac-0822-48c8-bae5-e894f9fec0ae"],
Cell[CellGroupData[{
Cell[52726, 1625, 549, 17, 119, "Input",ExpressionUUID->"486ba5cc-9339-4409-8b00-920e2e161160"],
Cell[53278, 1644, 299, 7, 60, "Output",ExpressionUUID->"70c702b4-dafc-4e81-af83-816ec0585413"],
Cell[53580, 1653, 321, 8, 60, "Output",ExpressionUUID->"646ae8a0-c985-400e-b40c-849b42e3c6e6"],
Cell[53904, 1663, 533, 16, 60, "Output",ExpressionUUID->"68731d2d-4507-49af-a35e-67a8c11373dd"]
}, Open  ]],
Cell[54452, 1682, 192, 3, 51, "Text",ExpressionUUID->"523611d3-a83b-4092-ae85-8e9aab6e8dbb"],
Cell[CellGroupData[{
Cell[54669, 1689, 363, 10, 90, "Input",ExpressionUUID->"44928386-f81b-418a-b7c9-72c7f9bf7b16"],
Cell[55035, 1701, 361, 9, 60, "Output",ExpressionUUID->"99518cea-1ac4-42b4-bd45-b8108fcae85f"],
Cell[55399, 1712, 816, 26, 97, "Output",ExpressionUUID->"5b6afd77-e9db-4a9b-95ad-7df2b6804451"]
}, Open  ]],
Cell[56230, 1741, 230, 3, 51, "Text",ExpressionUUID->"dc006a23-0011-4157-9769-f3a5af978ff3"],
Cell[CellGroupData[{
Cell[56485, 1748, 579, 19, 119, "Input",ExpressionUUID->"a4499889-8345-47b3-8cca-da67f1c3a2df"],
Cell[57067, 1769, 296, 7, 60, "Output",ExpressionUUID->"717670d4-fa81-4875-8e63-edca148e67c8"],
Cell[57366, 1778, 373, 10, 60, "Output",ExpressionUUID->"8e433557-e444-45a4-b917-0ebbe832c13c"],
Cell[57742, 1790, 2867, 97, 179, "Output",ExpressionUUID->"4634428b-1efa-41f9-b08a-3187053af9c1"]
}, Open  ]],
Cell[60624, 1890, 148, 2, 51, "Text",ExpressionUUID->"16d263f6-d3fc-4344-88d5-eb1614347196"],
Cell[60775, 1894, 97, 0, 48, "Subtitle",ExpressionUUID->"eb0e85b1-e891-4d69-8d27-bb86f806f754"],
Cell[60875, 1896, 207, 3, 51, "Text",ExpressionUUID->"15d77284-2084-42e7-9dc0-9a2671033f75"],
Cell[CellGroupData[{
Cell[61107, 1903, 380, 10, 90, "Input",ExpressionUUID->"b8a7b1db-103c-49e2-bd2b-fe28c290dad6"],
Cell[61490, 1915, 365, 8, 60, "Output",ExpressionUUID->"64861616-754e-4125-b170-860c9c47d17d"],
Cell[61858, 1925, 428, 11, 65, "Output",ExpressionUUID->"11eaf6dc-12e9-4032-aa88-9a2365c9ea99"]
}, Open  ]],
Cell[62301, 1939, 316, 5, 85, "Text",ExpressionUUID->"6dd8d900-40a0-44aa-864c-fe419e2152a7"],
Cell[CellGroupData[{
Cell[62642, 1948, 295, 8, 60, "Input",ExpressionUUID->"7d0e017f-8d75-4eda-8a64-0934013cfbc0"],
Cell[62940, 1958, 366, 9, 65, "Output",ExpressionUUID->"3f2acd4a-3ff8-4c28-8ca1-c093c21c4838"]
}, Open  ]],
Cell[63321, 1970, 121, 0, 51, "Text",ExpressionUUID->"0f2c56f7-6124-407c-b83f-a8085f7bb05b"],
Cell[CellGroupData[{
Cell[63467, 1974, 152, 3, 60, "Input",ExpressionUUID->"1a4aea21-f45d-4b84-bc55-30c8265cc00c"],
Cell[63622, 1979, 489, 13, 65, "Output",ExpressionUUID->"da953067-5757-4f18-94ad-f1ccbc7f2876"]
}, Open  ]],
Cell[64126, 1995, 149, 2, 51, "Text",ExpressionUUID->"207ff690-13ea-4045-be96-78e414b559eb"],
Cell[64278, 1999, 127, 0, 51, "Text",ExpressionUUID->"7bdd1ee6-dc62-46d7-9c37-a1d0b698907d"],
Cell[CellGroupData[{
Cell[64430, 2003, 242, 7, 60, "Input",ExpressionUUID->"a3b7512f-aa0a-484e-8154-3336f8aa86c2"],
Cell[64675, 2012, 226, 4, 60, "Output",ExpressionUUID->"a4d7b60c-99bb-4a19-853a-21d99b8e1bb5"]
}, Open  ]],
Cell[64916, 2019, 174, 3, 51, "Text",ExpressionUUID->"fefba8f3-fdce-456a-930f-e8f381944bc5"],
Cell[CellGroupData[{
Cell[65115, 2026, 355, 10, 90, "Input",ExpressionUUID->"9abd2384-a61d-4a75-8814-a510640c9240"],
Cell[65473, 2038, 341, 8, 60, "Output",ExpressionUUID->"5431f31b-f4e3-4ef2-b56a-cafe6a09e7bd"],
Cell[65817, 2048, 386, 9, 35, "Message",ExpressionUUID->"84104a8d-3b81-42ca-82e5-2fde9261246a"],
Cell[66206, 2059, 443, 11, 60, "Output",ExpressionUUID->"e99b8976-d1ec-47fb-9daa-6d5f6e4bb39e"]
}, Open  ]],
Cell[66664, 2073, 176, 3, 51, "Text",ExpressionUUID->"d9aa9c2a-81c3-4633-bc27-962da9adc426"],
Cell[CellGroupData[{
Cell[66865, 2080, 664, 20, 90, "Input",ExpressionUUID->"78ca195a-c42a-4b2d-b0fa-eb9f9d808c95"],
Cell[67532, 2102, 596, 16, 60, "Output",ExpressionUUID->"922f6b52-3577-4ece-a1b3-9d353ded465e"],
Cell[68131, 2120, 1201, 35, 90, "Output",ExpressionUUID->"8cdf07c0-26b5-4c86-8660-1c15203132b2"]
}, Open  ]],
Cell[69347, 2158, 377, 10, 85, "Text",ExpressionUUID->"97469656-e7a7-48e0-b102-5e8050364261"],
Cell[69727, 2170, 88, 0, 48, "Subtitle",ExpressionUUID->"9aafc3fe-3cec-428d-9ee1-1a390cca4ea7"],
Cell[69818, 2172, 272, 5, 51, "Text",ExpressionUUID->"47154a9e-6ac6-4717-b774-0274702e2ee3"],
Cell[CellGroupData[{
Cell[70115, 2181, 252, 7, 60, "Input",ExpressionUUID->"7fe73b57-366c-4c1f-8d24-1ff7d7c30fc1"],
Cell[70370, 2190, 9782, 179, 357, "Output",ExpressionUUID->"2c639226-a03c-4fed-ab6a-7f254c76ccd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80189, 2374, 397, 12, 60, "Input",ExpressionUUID->"e9444a9f-e27b-4926-beea-68b2ac4b4f55"],
Cell[80589, 2388, 156917, 2575, 467, 67117, 1102, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"51e02a96-f365-40cc-9294-f84f305e8531"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237543, 4968, 390, 11, 60, "Input",ExpressionUUID->"78712c29-dba1-4e24-b88b-f4584b06e51d"],
Cell[237936, 4981, 26500, 444, 641, "Output",ExpressionUUID->"db920c9e-3330-4ed7-b668-069c06468fb9"]
}, Open  ]],
Cell[264451, 5428, 695, 21, 85, "Text",ExpressionUUID->"e3e73f43-d451-4603-a821-ecdfced4aa55"],
Cell[CellGroupData[{
Cell[265171, 5453, 494, 14, 60, "Input",ExpressionUUID->"7e3ea754-5c03-4a5c-af85-9f1a41a231d5"],
Cell[265668, 5469, 2012, 40, 552, "Output",ExpressionUUID->"104d7687-0cf2-4366-b701-81edac56cea8"]
}, Open  ]],
Cell[267695, 5512, 198, 3, 51, "Text",ExpressionUUID->"cb7d2780-7874-4501-99f7-8670ad046f07"],
Cell[267896, 5517, 263, 6, 51, "Text",ExpressionUUID->"1d511093-0303-4174-9860-4752403636f3"],
Cell[CellGroupData[{
Cell[268184, 5527, 744, 22, 60, "Input",ExpressionUUID->"0fe4edc4-9a45-476d-88a9-0b2237019094"],
Cell[268931, 5551, 2063, 41, 615, "Output",ExpressionUUID->"eec68bc5-dfb8-45e0-9f6a-a824e43de8ad"]
}, Open  ]],
Cell[271009, 5595, 82, 0, 48, "Subtitle",ExpressionUUID->"b728249a-2a9c-41b4-9f24-a36360a05518"],
Cell[271094, 5597, 734, 15, 185, "Text",ExpressionUUID->"1f2ab95c-93a0-4384-88f9-28235f427e6e"],
Cell[271831, 5614, 510, 8, 118, "Text",ExpressionUUID->"64c3102b-d4e8-4888-a866-1a1088766b46"]
}
]
*)

